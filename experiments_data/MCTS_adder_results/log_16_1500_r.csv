Area,Delay,Score,Current Run,Episode,Verilog
N/A,N/A,-1,2.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
  wire [15:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15;
  
  localparam cin_d = 1'b0;
  
  defparam adder_16_1.WIDTH = 16;
  defparam adder_16_1.WIDTH1 = 16;
  defparam adder_16_1.WIDTH2 = 16;
  defparam adder_16_1.WIDTH3 = 16;
  defparam adder_16_1.WIDTH4 = 16;
  defparam adder_16_1.WIDTH5 = 16;
  defparam adder_16_1.WIDTH6 = 16;
  defparam adder_16_1.WIDTH7 = 16;
  defparam adder_16_1.WIDTH8 = 16;
  defparam adder_16_1.WIDTH9 = 16;
  defparam adder_16_1.WIDTH10 = 16;
  defparam adder_16_1.WIDTH11 = 16;
  defparam adder_16_1.WIDTH12 = 16;
  defparam adder_16_1.WIDTH13 = 16;
  defparam adder_16_1.WIDTH14 = 16;
  defparam adder_16_1.WIDTH15 = 16;
  defparam adder_16_1.WIDTH16 = 16;
  defparam adder_16_1.WIDTH17 = 16;
  defparam adder_16_1.WIDTH18 = 16;
  defparam adder_16_1.WIDTH19 = 16;
  defparam adder_16_1.WIDTH20 = 16;
  defparam adder_16_1.WIDTH21 = 16;
  defparam adder_16_1.WIDTH22 = 16;
  defparam adder_16_1.WIDTH23 = 16;
  defparam adder_16_1.WIDTH24 = 16;
  defparam adder_16_1.WIDTH25 = 16;
  defparam adder_16_1.WIDTH26 = 16;
  defparam adder_16_1.WIDTH27 = 16;
  defparam adder_16_1.WIDTH28 = 16;
  defparam adder_16_1.WIDTH29 = 16;
  defparam adder_16_1.WIDTH30 = 16;
  defparam adder_16_1.WIDTH31 = 16;
  defparam adder_16_1.WIDTH32 = 16;
  defparam adder_16_1.WIDTH33 = 16;
  defparam adder_16_1.WIDTH34 = 16;
  defparam adder_16_1.WIDTH35 = 16;
  defparam adder_16_1.WIDTH36 = 16;
  defparam adder_16_1.WIDTH37 = 16;
  defparam adder_16_1.WIDTH38 = 16;
  defparam adder_16_1.WIDTH39 = 16;
  defparam adder_16_1.WIDTH40 = 16;
  defparam adder_16_1.WIDTH41 = 16;
  defparam adder_16_1.WIDTH42 = 16;
  defparam adder_16_1.WIDTH43 = 16;
  defparam adder_16_1.WIDTH44 = 16;
  defparam adder_16_1.WIDTH45 = 16;
  defparam adder_16_1.WIDTH46 = 16;
  defparam adder_16_1.WIDTH47 = 16;
  defparam adder_16_1.WIDTH48 = 16;
  defparam adder_16_1.WIDTH49 = 16;
  defparam adder_16_1.WIDTH50 = 16;
  defparam adder_16_1.WIDTH51 = 16;
  defparam adder_16_1.WIDTH52 = 16;
  defparam adder_16_1.WIDTH53 = 16;
  defparam adder_16_1.WIDTH54 = 16;
  defparam adder_16_1.WIDTH55 = 16;
  defparam adder_16_1.WIDTH56 = 16;
  defparam adder_16_1.WIDTH57 = 16;
  defparam adder_16_1.WIDTH58 = 16;
  defparam adder_16_1.WIDTH59 = 16;
  defparam adder_16_1.WIDTH60 = 16;
  defparam adder_16_1.WIDTH61 = 16;
  defparam adder_16_1.WIDTH62 = 16;
  defparam adder_16_1.WIDTH63 = 16;
  defparam adder_16_1.WIDTH64 = 16;
  defparam adder_16_1.WIDTH65 = 16;
  defparam adder_16_1.WIDTH66 = 16;
  defparam adder_16_1.WIDTH67 = 16;
  defparam adder_16_1.WIDTH68 = 16;
  defparam adder_16_1.WIDTH69 = 16;
  defparam adder_16_1.WIDTH70 = 16;
  defparam adder_16_1.WIDTH71 = 16;
  defparam adder_16_1.WIDTH72 = 16;
  defparam adder_16_1.WIDTH73 = 16;
  defparam adder_16_1.WIDTH74 = 16;
  defparam adder_16_1.WIDTH75 = 16;
  defparam adder_16_1.WIDTH"
N/A,N/A,-0.5,3.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    nand n1(sum[0], in1[0], in2[0], cin);
    nand n2(sum[1], in1[1], in2[1], cin);
    nand n3(sum[2], in1[2], in2[2], cin);
    nand n4(sum[3], in1[3], in2[3], cin);
    nand n5(sum[4], in1[4], in2[4], cin);
    nand n6(sum[5], in1[5], in2[5], cin);
    nand n7(sum[6], in1[6], in2[6], cin);
    nand n8(sum[7], in1[7], in2[7], cin);
    nand n9(sum[8], in1[8], in2[8], cin);
    nand n10(sum[9], in1[9], in2[9], cin);
    nand n11(sum[10], in1[10], in2[10], cin);
    nand n12(sum[11], in1[11], in2[11], cin);
    nand n13(sum[12], in1[12], in2[12], cin);
    nand n14(sum[13], in1[13], in2[13], cin);
    nand n15(sum[14], in1[14], in2[14], cin);
    nand n16(sum[15], in1[15], in2[15], cin);
    nand n17(cout, in1[15], in2[15], cin);

endmodule"
N/A,N/A,-1,4.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    
    
    wire [15:0] sum;
    wire cout;
    
    integer i;
    
    two_bit_adder_16 bit_adder_16(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    
    always @(in1 or in2 or cin)
    begin
        for (i = 0; i < 16; i = i + 1)
        begin
            if (in1[i] == 1'b1 && in2[i] == 1'b0)
            begin
                sum[i] = 1'b1;
            end
            else if (in1[i] == 1'b0 && in2[i] == 1'b1)
            begin
                sum[i] = 1'b1;
            end
            else
            begin
                sum[i] = 1'b0;
            end
        end
    end
endmodule

index_16 index_16(output [15:0] out,
                    input [15:0] in,
                    input [15:0] index);
    
    wire [15:0] out;
    
    integer i;
    
    adder_16 adder_16(out,
                       1'b0,
                       in,
                       index);
    
    always @(in or index)
    begin
        for (i = 0; i < 16; i = i + 1)
        begin
            if (in[i] == 1'b1 && index[i] == 1'b0)
            begin
                out[i] = 1'b1;
            end
            else if (in[i] == 1'b0 && index[i] == 1'b1)
            begin
                out[i] = 1'b1;
            end
            else
            begin
                out[i] = 1'b0;
            end
        end
    end
endmodule"
N/A,N/A,-1,5.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
  wire [15:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15;
  
  top_adder_16 top_adder_16_1(sum1, c1, in1, in2, cin);
  top_adder_16 top_adder_16_2(sum2, c2, in1, in2, c1);
  top_adder_16 top_adder_16_3(sum3, c3, in1, in2, c2);
  top_adder_16 top_adder_16_4(sum4, c4, in1, in2, c3);
  top_adder_16 top_adder_16_5(sum5, c5, in1, in2, c4);
  top_adder_16 top_adder_16_6(sum6, c6, in1, in2, c5);
  top_adder_16 top_adder_16_7(sum7, c7, in1, in2, c6);
  top_adder_16 top_adder_16_8(sum8, c8, in1, in2, c7);
  top_adder_16 top_adder_16_9(sum9, c9, in1, in2, c8);
  top_adder_16 top_adder_16_10(sum10, c10, in1, in2, c9);
  top_adder_16 top_adder_16_11(sum11, c11, in1, in2, c10);
  top_adder_16 top_adder_16_12(sum12, c12, in1, in2, c11);
  top_adder_16 top_adder_16_13(sum13, c13, in1, in2, c12);
  top_adder_16 top_adder_16_14(sum14, c14, in1, in2, c13);
  top_adder_16 top_adder_16_15(sum15, c15, in1, in2, c14);
  
  assign sum = {c15, c14, c13, c12, c11, c10, c9, c8, c7, c6, c5, c4, c3, c2, c1};
  assign cout = c15;
endmodule

module top_adder_16(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
  wire [15:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15;
  
  adder_16 adder_16_1(sum1, c1, in1, in2, cin);
  adder_16 adder_16_2(sum2, c2, in1, in2, c1);
  adder_16 adder_16_3(sum3, c3, in1, in2, c2);
  adder_16 adder_16_4(sum4, c4, in1, in2, c3);
  adder_16 adder_16_5(sum5, c5, in1, in2, c4);
  adder_16 adder_16_6(sum6, c6, in1, in2, c5);
  adder_16 adder_16_7(sum7, c7, in1, in2, c6);
  adder_16 adder_16_8(sum8, c8, in1, in2, c7);
  adder_16 adder_16_9(sum9, c9, in1, in2, c8);
  adder_16 adder_16_10(sum10, c10, in1, in2, c9);
  adder_16 adder_16_11(sum11, c11, in1, in2, c10);
  adder_16 adder_16_12(sum12, c12, in1, in2, c11);
  adder_16 adder_16_13(sum13, c13, in1, in2, c12);
  adder_16 adder_16_14(sum14, c14, in1, in2, c13);
  adder_16 adder_16_15(sum15, c15, in1, in2, c14);
  
  assign sum = {c15, c14, c13, c12, c11, c10, c9, c8, c7, c6, c5, c4, c3, c2, c1};
  assign cout = c15;
endmodule"
N/A,N/A,-1,6.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    decoder_16 decoder(sum, cout, in1, in2, cin);

endmodule

module decoder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [3:0] sum_0;
    wire [3:0] sum_1;
    wire [3:0] sum_2;
    wire [3:0] sum_3;
    wire [3:0] sum_4;
    wire [3:0] sum_5;
    wire [3:0] sum_6;
    wire [3:0] sum_7;
    wire [3:0] sum_8;
    wire [3:0] sum_9;
    wire [3:0] sum_10;
    wire [3:0] sum_11;
    wire [3:0] sum_12;
    wire [3:0] sum_13;
    wire [3:0] sum_14;
    wire [3:0] sum_15;
    wire [3:0] sum_16;
    wire [3:0] sum_17;
    wire [3:0] sum_18;
    wire [3:0] sum_19;
    wire [3:0] sum_20;
    wire [3:0] sum_21;
    wire [3:0] sum_22;
    wire [3:0] sum_23;
    wire [3:0] sum_24;
    wire [3:0] sum_25;
    wire [3:0] sum_26;
    wire [3:0] sum_27;
    wire [3:0] sum_28;
    wire [3:0] sum_29;
    wire [3:0] sum_30;
    wire [3:0] sum_31;
    wire [3:0] sum_32;
    wire [3:0] sum_33;
    wire [3:0] sum_34;
    wire [3:0] sum_35;
    wire [3:0] sum_36;
    wire [3:0] sum_37;
    wire [3:0] sum_38;
    wire [3:0] sum_39;
    wire [3:0] sum_40;
    wire [3:0] sum_41;
    wire [3:0] sum_42;
    wire [3:0] sum_43;
    wire [3:0] sum_44;
    wire [3:0] sum_45;
    wire [3:0] sum_46;
    wire [3:0] sum_47;
    wire [3:0] sum_48;
    wire [3:0] sum_49;
    wire [3:0] sum_50;
    wire [3:0] sum_51;
    wire [3:0] sum_52;
    wire [3:0] sum_53;
    wire [3:0] sum_54;
    wire [3:0] sum_55;
    wire [3:0] sum_56;
    wire [3:0] sum_57;
    wire [3:0] sum_58;
    wire [3:0] sum_59;
    wire [3:0] sum_60;
    wire [3:0] sum_61;
    wire [3:0] sum_62;
    wire [3:0] sum_63;
    wire [3:0] sum_64;
    wire [3:0] sum_65;
    wire [3:0] sum_66;
    wire [3:0] sum_67;
    wire [3:0] sum_68;
    wire [3:0] sum_69;
    wire [3:0] sum_70;
    wire [3:0] sum_71;
    wire [3:0] sum_72;
    wire [3:0] sum_73;
    wire [3:0] sum_74;
    wire [3:0] sum_75;
    wire [3:0] sum_76;
    wire [3:0] sum_77;
    wire [3:0] sum_78;
    wire [3:0] sum_79;
    wire [3:0] sum_80;
    wire [3:0] sum_81;
    wire [3:0] sum_82;
    wire [3:0] sum_83;
    wire [3:0] sum_84;
    wire [3:0] sum_85;
    wire [3:0] sum_86;
    wire [3:0] sum_87;
    wire [3:0] sum_88;
    wire [3:0] sum_89;
    wire [3:0] sum_90;
    wire [3:0] sum_91;
    wire [3:0] sum_92;
    wire [3:0] sum_93;
    wire [3:0] sum_94;
    wire [3:0] sum_95;
    wire [3:0] sum_96;
    wire [3:0] sum_97;
    wire [3:0] sum_98;
    wire [3:0] sum_99;
    wire [3:0] sum_100;
    wire [3:0] sum_101;
    wire [3:0] sum_102;
    wire [3:0] sum_103;
    wire [3:0] sum_104;
    wire [3:0] sum_105;
    wire [3:0] sum_106;
    wire [3:0] sum_107;
    wire [3:0] sum_108;
    wire [3:0] sum_109;
    wire [3:0] sum_110;
    wire [3:0] sum_111;
    wire"
N/A,N/A,-1,7.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin); 
  wire c1, c2, c3;
  full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
  full_adder FA5(sum[4], c4, in1[4], in2[4], c3);
  full_adder FA6(sum[5], c5, in1[5], in2[5], c4);
  full_adder FA7(sum[6], c6, in1[6], in2[6], c5);
  full_adder FA8(sum[7], c7, in1[7], in2[7], c6);
  full_adder FA9(sum[8], c8, in1[8], in2[8], c7);
  full_adder FA10(sum[9], c9, in1[9], in2[9], c8);
  full_adder FA11(sum[10], c10, in1[10], in2[10], c9);
  full_adder FA12(sum[11], c11, in1[11], in2[11], c10);
  full_adder FA13(sum[12], c12, in1[12], in2[12], c11);
  full_adder FA14(sum[13], c13, in1[13], in2[13], c12);
  full_adder FA15(sum[14], c14, in1[14], in2[14], c13);
  full_adder FA16(sum[15], cout, in1[15], in2[15], c14);
endmodule

OAI21X1 U1 (.A(a[0]),.B(b[0]),.C(c[0]),.Y(sum[0]) );
AND2X1 U2 (.A(a[0]),.B(b[0]),.Y(c[0]) );
AND2X1 U3 (.A(a[1]),.B(b[1]),.Y(c[1]) );
AND2X1 U4 (.A(a[2]),.B(b[2]),.Y(c[2]) );
AND2X1 U5 (.A(a[3]),.B(b[3]),.Y(c[3]) );
AND2X1 U6 (.A(a[4]),.B(b[4]),.Y(c[4]) );
AND2X1 U7 (.A(a[5]),.B(b[5]),.Y(c[5]) );
AND2X1 U8 (.A(a[6]),.B(b[6]),.Y(c[6]) );
AND2X1 U9 (.A(a[7]),.B(b[7]),.Y(c[7]) );
AND2X1 U10 (.A(a[8]),.B(b[8]),.Y(c[8]) );
AND2X1 U11 (.A(a[9]),.B(b[9]),.Y(c[9]) );
AND2X1 U12 (.A(a[10]),.B(b[10]),.Y(c[10]) );
AND2X1 U13 (.A(a[11]),.B(b[11]),.Y(c[11]) );
AND2X1 U14 (.A(a[12]),.B(b[12]),.Y(c[12]) );
AND2X1 U15 (.A(a[13]),.B(b[13]),.Y(c[13]) );
AND2X1 U16 (.A(a[14]),.B(b[14]),.Y(c[14]) );
AND2X1 U17 (.A(a[15]),.B(b[15]),.Y(c[15]) );
endmodule"
N/A,N/A,-1,8.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;

adder_4 adder_4_1(sum[3:0], c1, in1[3:0], in2[3:0], cin);
adder_4 adder_4_2(sum[7:4], c2, in1[7:4], in2[7:4], c1);
adder_4 adder_4_3(sum[11:8], c3, in1[11:8], in2[11:8], c2);
adder_4 adder_4_4(sum[15:12], c4, in1[15:12], in2[15:12], c3);

adder_4 adder_4_5(sum[3:0], c5, in1[3:0], in2[3:0], c4);
adder_4 adder_4_6(sum[7:4], c6, in1[7:4], in2[7:4], c5);
adder_4 adder_4_7(sum[11:8], c7, in1[11:8], in2[11:8], c6);
adder_4 adder_4_8(sum[15:12], c8, in1[15:12], in2[15:12], c7);

adder_4 adder_4_9(sum[3:0], c9, in1[3:0], in2[3:0], c8);
adder_4 adder_4_10(sum[7:4], c10, in1[7:4], in2[7:4], c9);
adder_4 adder_4_11(sum[11:8], c11, in1[11:8], in2[11:8], c10);
adder_4 adder_4_12(sum[15:12], c12, in1[15:12], in2[15:12], c11);

adder_4 adder_4_13(sum[3:0], c13, in1[3:0], in2[3:0], c12);
adder_4 adder_4_14(sum[7:4], c14, in1[7:4], in2[7:4], c13);
adder_4 adder_4_15(sum[11:8], c15, in1[11:8], in2[11:8], c14);
adder_4 adder_4_16(sum[15:12], cout, in1[15:12], in2[15:12], c15);

endmodule

module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

wire c1, c2, c3;

adder_1 adder_1_1(sum[0], c1, in1[0], in2[0], cin);
adder_1 adder_1_2(sum[1], c2, in1[1], in2[1], c1);
adder_1 adder_1_3(sum[2], c3, in1[2], in2[2], c2);
adder_1 adder_1_4(sum[3], cout, in1[3], in2[3], c3);

endmodule

module adder_1(output sum,
                      output cout,
                      input in1, in2, cin);

wire c1;

adder_1 adder_1_1(sum, c1, in1, in2, cin);
adder_1 adder_1_2(cout, cout, in1, in2, c1);

endmodule"
N/A,N/A,-1,9.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                                   //in1 and in2 are the 16 bit inputs, and cin is the carry-in input.
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_16_bit adder_1(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_16_bit adder_2(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:16], carry_temp[1]);
    
    assign sum = sum_temp;
    assign cout = cout_temp;
endmodule

module adder_16_bit(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_1 adder_1_bit(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_1 adder_2_bit(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:16], carry_temp[1]);
    
    assign sum = sum_temp;
    assign cout = cout_temp;
endmodule

module adder_1(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_2 adder_1_bit(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_2 adder_2_bit(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:16], carry_temp[1]);
    
    assign sum = sum_temp;
    assign cout = cout_temp;
endmodule

module adder_2(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_3 adder_1_bit(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_3 adder_2_bit(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:16], carry_temp[1]);
    
    assign sum = sum_temp;
    assign cout = cout_temp;
endmodule

module adder_3(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_4 adder_1_bit(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_4 adder_2_bit(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:16], carry_temp[1]);
    
    assign sum = sum_temp;
    assign cout = cout_temp;
endmodule

module adder_4(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum_temp;
    wire cout_temp;
    wire [15:0] in1_temp;
    wire [15:0] in2_temp;
    wire [15:0] carry_temp;
    
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign carry_temp = cin;
    
    adder_5 adder_1_bit(sum_temp[15:0], cout_temp, in1_temp[15:0], in2_temp[15:0], carry_temp[0]);
    adder_5 adder_2_bit(sum_temp[31:16], cout_temp, in1_temp[31:16], in2_temp[31:"
N/A,N/A,-1,10.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);  
  
  wire [15:0] sum;
  wire cout;
  
  integer i;
  
  sum_16 sum_16_1(sum[15:0], cin, in1[15:0], in2[15:0]);
  
  assign cout = cin & (in1[15] ^ in2[15]);
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  "
N/A,N/A,-1,11.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                      
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    fadder_16 fadder_16_1(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    fadder_16 fadder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout);
endmodule

module fadder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    wire [15:0] sum_temp;
    wire cout_temp;
    
    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);
    
    assign sum[15:0] = sum_temp[15:0];
    assign cout = cout_temp;
endmodule"
N/A,N/A,-1,12.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);   
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    fadder_16 fadder_16(sum, cout, in1, in2, cin);
    
endmodule

module fadder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    wire [15:0] sum_temp;
    wire cout_temp;
    
    adder_16 adder_16_1(sum_temp, cout_temp, in1, in2, cin);
    
    assign sum = sum_temp[15:0];
    assign cout = cout_temp;
    
endmodule"
N/A,N/A,-1,13.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  Adder_16bit adder(sum, cout, in1, in2, cin);

endmodule

module Adder_16bit(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum_temp;
  wire cout_temp;
  wire [15:0] in1_temp;
  wire [15:0] in2_temp;
  wire cin_temp;

  invert_16bit invert_16bit_1(in1_temp, in1);
  invert_16bit invert_16bit_2(in2_temp, in2);
  invert_16bit invert_16bit_3(sum_temp, sum);
  invert_16bit invert_16bit_4(cout_temp, cout);

  adder_16bit_1 adder_16bit_1_1(sum_temp, cout_temp, in1_temp, in2_temp, cin_temp);
  adder_16bit_2 adder_16bit_2_1(sum, cout, in1, in2, cin);

endmodule

module invert_16bit(output [15:0] out,
                     input [15:0] in);

  wire [15:0] in;
  wire [15:0] out;

  not not_1(out[0], in[0]);
  not not_2(out[1], in[1]);
  not not_3(out[2], in[2]);
  not not_4(out[3], in[3]);
  not not_5(out[4], in[4]);
  not not_6(out[5], in[5]);
  not not_7(out[6], in[6]);
  not not_8(out[7], in[7]);
  not not_9(out[8], in[8]);
  not not_10(out[9], in[9]);
  not not_11(out[10], in[10]);
  not not_12(out[11], in[11]);
  not not_13(out[12], in[12]);
  not not_14(out[13], in[13]);
  not not_15(out[14], in[14]);
  not not_16(out[15], in[15]);

endmodule

module adder_16bit_1(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum_temp;
  wire cout_temp;
  wire [15:0] in1_temp;
  wire [15:0] in2_temp;
  wire cin_temp;

  adder_16bit_2 adder_16bit_2_1(sum_temp, cout_temp, in1_temp, in2_temp, cin_temp);
  adder_16bit_3 adder_16bit_3_1(sum, cout, in1, in2, cin);

endmodule

module adder_16bit_2(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum_temp;
  wire cout_temp;
  wire [15:0] in1_temp;
  wire [15:0] in2_temp;
  wire cin_temp;

  adder_16bit_1 adder_16bit_1_1(sum_temp, cout_temp, in1_temp, in2_temp, cin_temp);
  adder_16bit_3 adder_16bit_3_2(sum, cout, in1, in2, cin);

endmodule

module adder_16bit_3(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum_temp;
  wire cout_temp;
  wire [15:0] in1_temp;
  wire [15:0] in2_temp;
  wire cin_temp;

  adder_16bit_1 adder_16bit_1_2(sum_temp, cout_temp, in1_temp, in2_temp, cin_temp);
  adder_16bit_2 adder_16bit_2_2(sum, cout, in1, in2, cin);

endmodule"
N/A,N/A,-1,14.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                              
  wire c1, c2, c3;
  wire [15:0] sum;
  
  cout_adder_16 c1(sum[0], c1, in1[0], in2[0], cin);
  cout_adder_16 c2(sum[1], c2, in1[1], in2[1], c1);
  cout_adder_16 c3(sum[2], c3, in1[2], in2[2], c2);
  cout_adder_16 c4(sum[3], cout, in1[3], in2[3], c3);
  cout_adder_16 c5(sum[4], cout, in1[4], in2[4], c3);
  cout_adder_16 c6(sum[5], cout, in1[5], in2[5], c3);
  cout_adder_16 c7(sum[6], cout, in1[6], in2[6], c3);
  cout_adder_16 c8(sum[7], cout, in1[7], in2[7], c3);
  cout_adder_16 c9(sum[8], cout, in1[8], in2[8], c3);
  cout_adder_16 c10(sum[9], cout, in1[9], in2[9], c3);
  cout_adder_16 c11(sum[10], cout, in1[10], in2[10], c3);
  cout_adder_16 c12(sum[11], cout, in1[11], in2[11], c3);
  cout_adder_16 c13(sum[12], cout, in1[12], in2[12], c3);
  cout_adder_16 c14(sum[13], cout, in1[13], in2[13], c3);
  cout_adder_16 c15(sum[14], cout, in1[14], in2[14], c3);
  cout_adder_16 c16(sum[15], cout, in1[15], in2[15], c3);
endmodule

module adder_16_tb;
  reg [15:0] in1, in2;
  reg cin;
  wire [15:0] sum;
  wire cout;
  
  adder_16 a1(sum, cout, in1, in2, cin);
  
  initial
  begin
    $dumpfile(""adder_16_tb.vcd"");
    $dumpvars(0, adder_16_tb);
    
    in1 = 16'b000000000000;
    in2 = 16'b000000000000;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000001;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000010;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000011;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000100;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000101;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000110;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000000111;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001000;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001001;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001010;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001011;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001100;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001101;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001110;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000001111;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010000;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010001;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010010;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010011;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010100;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010101;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010110;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'b000000010111;
    cin = 1'b0;
    #10
    in1 = 16'b000000000000;
    in2 = 16'"
N/A,N/A,-0.5,15.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);        
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    fadder_16 fadder_16(sum, cout, in1, in2, cin);
    
endmodule

module fadder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    assign sum = in1 + in2;
    assign cout = in1[15] ^ in2[15] ^ cin;
    
endmodule"
N/A,N/A,-1,16.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    logic [15:0] sum;
    logic cout;
    logic [15:0] in1;
    logic [15:0] in2;
    logic cin;
    
    node_16 n1(sum, cout, in1, in2, cin);
    
endmodule"
N/A,N/A,-1,17.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    
    
    wire [15:0] sum;
    wire cout;
    
    //// Initialize the sum and carry out wires to 0
    assign sum = 0;
    assign cout = 0;
    
    cout_carry_select_adder_16 cca_16(sum, cout, in1, in2, cin);
    
endmodule

module adder_16_tb;
    
    reg [15:0] in1, in2;
    reg cin;
    wire [15:0] sum;
    wire cout;
    
    adder_16 adder_16_tb(sum, cout, in1, in2, cin);
    
    initial
    begin
        in1 = 16'b0000_0000_0000_0001;
        in2 = 16'b0000_0000_0000_0010;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b1;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000_0000_0000_0001;
        cin = 1'b0;
        
        #10 in1 = 16'b0000_0000_0000_0010;
        in2 = 16'b0000"
N/A,N/A,-1,18.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);


    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    	HA_16 HA1(sum[15:0], in1[15:0], in2[15:0], cin);
    	FA_16 FA1(sum[31:16], cout, in1[15:0], in2[15:0], cin);

endmodule

module FA_16(output [15:0] sum,
              output cout,
              input [15:0] in1, in2,
              input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    	FA_16 FA1(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    	FA_16 FA2(sum[31:16], cout, in1[15:0], in2[15:0], 1'b0);

endmodule

module HA_16(output [15:0] sum,
              output cout,
              input [15:0] in1, in2,
              input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    	HA_16 HA1(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    	HA_16 HA2(sum[31:16], cout, in1[15:0], in2[15:0], 1'b0);

endmodule"
N/A,N/A,-1,19.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
                      
//Definition for Variables in the module
wire [15:0] sum_temp;
wire [15:0] sum;
wire cout_temp;
                       
         
                                        
adder_16_bit adder_16_bit_inst(.sum(sum_temp),.cout(cout_temp),.in1(in1),.in2(in2),.cin(cin));
                                        
flipflop_16_bit adder_16_bit_inst_1(.dout(sum),.din(sum_temp),.clk(clk),.reset(reset));
flipflop_16_bit adder_16_bit_inst_2(.dout(cout),.din(cout_temp),.clk(clk),.reset(reset));
                                        
endmodule

'''
`timescale 1ns / 1ps

module adder_16_bit(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
                      
type adder_16_bit_tb();

reg clk;
reg reset;
reg [15:0] in1;
reg [15:0] in2;
reg cin;

adder_16_bit adder_16_bit_inst(.sum(sum),.cout(cout),.in1(in1),.in2(in2),.cin(cin));

initial begin
    clk = 0;
    reset = 0;
    in1 = 0;
    in2 = 0;
    cin = 0;
    #10;
    reset = 1;
    #10;
    reset = 0;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 1;
    #10;
    in1 = 16'hFFFF;
    in2 = 16'hFFFF;
    cin = 0;
    #10;
    in1 = 16'hFFFF"
N/A,N/A,-0.5,20.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);        
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    comparator_16 comp(sum, cin, in1, in2);
    
    adder_16_bit adder(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    
endmodule

module comparator_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2);
    wire [15:0] in1;
    wire [15:0] in2;
    wire [15:0] sum;
    wire cout;
    
    assign sum = in1 + in2;
    assign cout = (in1[15:0] == in2[15:0]);
    
endmodule

module adder_16_bit(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    wire [15:0] sum;
    wire cout;
    
    assign sum = in1 + in2;
    assign cout = (in1[15:0] == in2[15:0]);
    
endmodule"
N/A,N/A,-1,21.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
        wire [15:0] sum;
        wire cout;
        wire [15:0] in1;
        wire [15:0] in2;
        wire cin;
        
        one_bit_adder_16 one_bit_adder_16_0(sum[0], c1, in1[0], in2[0], cin);
        one_bit_adder_16 one_bit_adder_16_1(sum[1], c2, in1[1], in2[1], c1);
        one_bit_adder_16 one_bit_adder_16_2(sum[2], c3, in1[2], in2[2], c2);
        one_bit_adder_16 one_bit_adder_16_3(sum[3], c4, in1[3], in2[3], c3);
        one_bit_adder_16 one_bit_adder_16_4(sum[4], c5, in1[4], in2[4], c4);
        one_bit_adder_16 one_bit_adder_16_5(sum[5], c6, in1[5], in2[5], c5);
        one_bit_adder_16 one_bit_adder_16_6(sum[6], c7, in1[6], in2[6], c6);
        one_bit_adder_16 one_bit_adder_16_7(sum[7], c8, in1[7], in2[7], c7);
        one_bit_adder_16 one_bit_adder_16_8(sum[8], c9, in1[8], in2[8], c8);
        one_bit_adder_16 one_bit_adder_16_9(sum[9], c10, in1[9], in2[9], c9);
        one_bit_adder_16 one_bit_adder_16_10(sum[10], c11, in1[10], in2[10], c10);
        one_bit_adder_16 one_bit_adder_16_11(sum[11], c12, in1[11], in2[11], c11);
        one_bit_adder_16 one_bit_adder_16_12(sum[12], c13, in1[12], in2[12], c12);
        one_bit_adder_16 one_bit_adder_16_13(sum[13], c14, in1[13], in2[13], c13);
        one_bit_adder_16 one_bit_adder_16_14(sum[14], c15, in1[14], in2[14], c14);
        one_bit_adder_16 one_bit_adder_16_15(sum[15], cout, in1[15], in2[15], c15);
endmodule

module one_bit_adder_16(output [15:0] sum,
                         output cout,
                         input in1, in2,
                         input cin);
        wire [15:0] sum;
        wire cout;
        wire in1;
        wire in2;
        wire cin;
        
        assign sum[0] = in1 ^ in2 ^ cin;
        assign sum[1] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[2] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[3] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[4] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[5] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[6] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[7] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[8] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[9] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[10] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^ (in1 & in2) ^ (in1 & cin) ^ (in2 & cin);
        assign sum[11] = (in1 & in2) ^ (in1 & cin) ^ (in2 & cin) ^"
N/A,N/A,-1,22.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

   wire [15:0] sum;
   wire cout;
   wire [15:0] in1;
   wire [15:0] in2;
   wire cin;

   (* ADDER_THRESHOLD = ""35"" *)
   ADDER_FIXED_POINT ADDER(sum, cout, in1, in2, cin);

endmodule

module adder_16_tb;

   reg [15:0] in1;
   reg [15:0] in2;
   reg cin;

   wire [15:0] sum;
   wire cout;

   adder_16 DUT(sum, cout, in1, in2, cin);

   initial begin
      in1 = 16'h0000;
      in2 = 16'h0000;
      cin = 1'b0;
      #10;
      in1 = 16'h0001;
      in2 = 16'h0001;
      cin = 1'b0;
      #10;
      in1 = 16'h0002;
      in2 = 16'h0002;
      cin = 1'b0;
      #10;
      in1 = 16'h0003;
      in2 = 16'h0003;
      cin = 1'b0;
      #10;
      in1 = 16'h0004;
      in2 = 16'h0004;
      cin = 1'b0;
      #10;
      in1 = 16'h0005;
      in2 = 16'h0005;
      cin = 1'b0;
      #10;
      in1 = 16'h0006;
      in2 = 16'h0006;
      cin = 1'b0;
      #10;
      in1 = 16'h0007;
      in2 = 16'h0007;
      cin = 1'b0;
      #10;
      in1 = 16'h0008;
      in2 = 16'h0008;
      cin = 1'b0;
      #10;
      in1 = 16'h0009;
      in2 = 16'h0009;
      cin = 1'b0;
      #10;
      in1 = 16'h000a;
      in2 = 16'h000a;
      cin = 1'b0;
      #10;
      in1 = 16'h000b;
      in2 = 16'h000b;
      cin = 1'b0;
      #10;
      in1 = 16'h000c;
      in2 = 16'h000c;
      cin = 1'b0;
      #10;
      in1 = 16'h000d;
      in2 = 16'h000d;
      cin = 1'b0;
      #10;
      in1 = 16'h000e;
      in2 = 16'h000e;
      cin = 1'b0;
      #10;
      in1 = 16'h000f;
      in2 = 16'h000f;
      cin = 1'b0;
      #10;
      in1 = 16'h0010;
      in2 = 16'h0010;
      cin = 1'b0;
      #10;
      in1 = 16'h0011;
      in2 = 16'h0011;
      cin = 1'b0;
      #10;
      in1 = 16'h0012;
      in2 = 16'h0012;
      cin = 1'b0;
      #10;
      in1 = 16'h0013;
      in2 = 16'h0013;
      cin = 1'b0;
      #10;
      in1 = 16'h0014;
      in2 = 16'h0014;
      cin = 1'b0;
      #10;
      in1 = 16'h0015;
      in2 = 16'h0015;
      cin = 1'b0;
      #10;
      in1 = 16'h0016;
      in2 = 16'h0016;
      cin = 1'b0;
      #10;
      in1 = 16'h0017;
      in2 = 16'h0017;
      cin = 1'b0;
      #10;
      in1 = 16'h0018;
      in2 = 16'h0018;
      cin = 1'b0;
      #10;
      in1 = 16'h0019;
      in2 = 16'h0019;
      cin = 1'b0;
      #10;
      in1 = 16'h001a;
      in2 = 16'h001a;
      cin = 1'b0;
      #10;
      in1 = 16'h001b;
      in2 = 16'h001b;
      cin = 1'b0;
      #10;
      in1 = 16'h001c;
      in2 = 16'h001c;
      cin = 1'b0;
      #10;
      in1 = 16'h001d;
      in2 = 16'h001d;
      cin = 1'b0;
      #10;
      in1 = 16'h001e;
      in2 = 16'h001e;
      cin = 1'b0;
      #10;
      in1 = 16'h001f;
      in2 = 16'h001f;
      cin = 1'b0;
      #10;
      in1 = 16'h0020;
      in2 = 16'h0020;
      cin = 1'b0;
      #10;
      in1 = 16'h0021;
      in2 = 16'h0021;
      cin = 1'b0;
      #10;
      in1 = 16'h0022;
      in2 = 16'h0022;
      cin = 1'b0;
      #10;
      in1 = 16'h0023;
      in2 = 16'h0023;
      cin = 1'b0;
      #10;
      in1 = 16'h0024;
      in2 = 16'h0024;
      cin = 1'b0;
      #10;
      in1 = 16'h00"
N/A,N/A,-1,23.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);        
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    Adder_16bit adder(sum, cout, in1, in2, cin);
    
endmodule

module Adder_16bit(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    wire [15:0] sum1;
    wire cout1;
    
    wire [15:0] sum2;
    wire cout2;
    
    wire [15:0] sum3;
    wire cout3;
    
    wire [15:0] sum4;
    wire cout4;
    
    wire [15:0] sum5;
    wire cout5;
    
    wire [15:0] sum6;
    wire cout6;
    
    wire [15:0] sum7;
    wire cout7;
    
    wire [15:0] sum8;
    wire cout8;
    
    wire [15:0] sum9;
    wire cout9;
    
    wire [15:0] sum10;
    wire cout10;
    
    wire [15:0] sum11;
    wire cout11;
    
    wire [15:0] sum12;
    wire cout12;
    
    wire [15:0] sum13;
    wire cout13;
    
    wire [15:0] sum14;
    wire cout14;
    
    wire [15:0] sum15;
    wire cout15;
    
    wire [15:0] sum16;
    wire cout16;
    
    wire [15:0] sum17;
    wire cout17;
    
    wire [15:0] sum18;
    wire cout18;
    
    wire [15:0] sum19;
    wire cout19;
    
    wire [15:0] sum20;
    wire cout20;
    
    wire [15:0] sum21;
    wire cout21;
    
    wire [15:0] sum22;
    wire cout22;
    
    wire [15:0] sum23;
    wire cout23;
    
    wire [15:0] sum24;
    wire cout24;
    
    wire [15:0] sum25;
    wire cout25;
    
    wire [15:0] sum26;
    wire cout26;
    
    wire [15:0] sum27;
    wire cout27;
    
    wire [15:0] sum28;
    wire cout28;
    
    wire [15:0] sum29;
    wire cout29;
    
    wire [15:0] sum30;
    wire cout30;
    
    wire [15:0] sum31;
    wire cout31;
    
    wire [15:0] sum32;
    wire cout32;
    
    wire [15:0] sum33;
    wire cout33;
    
    wire [15:0] sum34;
    wire cout34;
    
    wire [15:0] sum35;
    wire cout35;
    
    wire [15:0] sum36;
    wire cout36;
    
    wire [15:0] sum37;
    wire cout37;
    
    wire [15:0] sum38;
    wire cout38;
    
    wire [15:0] sum39;
    wire cout39;
    
    wire [15:0] sum40;
    wire cout40;
    
    wire [15:0] sum41;
    wire cout41;
    
    wire [15:0] sum42;
    wire cout42;
    
    wire [15:0] sum43;
    wire cout43;
    
    wire [15:0] sum44;
    wire cout44;
    
    wire [15:0] sum45;
    wire cout45;
    
    wire [15:0] sum46;
    wire cout46;
    
    wire [15:0] sum47;
    wire cout47;
    
    wire [15:0] sum48;
    wire cout48;
    
    wire [15:0] sum49;
    wire cout49;
    
    wire [15:0] sum50;
    wire cout50;
    
    wire [15:0] sum51;
    wire cout51;
    
    wire [15:0] sum52;
    wire cout52;
    
    wire [15:0] sum53;
    wire cout53;
    
    wire [15:0] sum54;
    wire cout54;
    
    wire [15:0] sum55;
    wire cout55;
    
    wire [15:0] sum56;
    wire cout56;
    
    wire [15:0] sum57;
    wire cout57;
    
    wire [15:0] sum58;
    wire cout58;
    
    wire [15:0] sum59;
    wire cout59;
    
    wire [15:0] sum60;
    wire cout60;
    
    wire [15:0] sum61;
    wire cout61;
    
    wire [15:0] sum62;
    wire cout62;
    
    wire [15:0] sum63;
    wire cout63;
    
    wire [15:0] sum64;
    wire cout64;
    
    wire [15:0] sum65;
    wire cout65;
    
    wire [15:0] sum66;
    wire cout66;
    
    wire [15:0] sum67;
    wire cout67;
    
    wire [15:0] sum68;
    wire cout68;
    
    wire [15:0] sum69;
    wire cout69;
    
    wire [15:0] sum70;
    wire cout70;
    
    wire [15:0] sum"
N/A,N/A,-0.5,24.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    nand n1(sum[0], in1[0], in2[0], cin);
    nand n2(sum[1], in1[1], in2[1], cin);
    nand n3(sum[2], in1[2], in2[2], cin);
    nand n4(sum[3], in1[3], in2[3], cin);
    nand n5(sum[4], in1[4], in2[4], cin);
    nand n6(sum[5], in1[5], in2[5], cin);
    nand n7(sum[6], in1[6], in2[6], cin);
    nand n8(sum[7], in1[7], in2[7], cin);
    nand n9(sum[8], in1[8], in2[8], cin);
    nand n10(sum[9], in1[9], in2[9], cin);
    nand n11(sum[10], in1[10], in2[10], cin);
    nand n12(sum[11], in1[11], in2[11], cin);
    nand n13(sum[12], in1[12], in2[12], cin);
    nand n14(sum[13], in1[13], in2[13], cin);
    nand n15(sum[14], in1[14], in2[14], cin);
    nand n16(sum[15], in1[15], in2[15], cin);
    nand n17(cout, in1[15], in2[15], cin);

endmodule"
N/A,N/A,-1,25.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
 
  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;
 
  parameter [15:0] carry_in = 16'b0;
 
  latch_16bit l1(sum, in1, in2, cin);
  latch_16bit l2(cout, sum, carry_in, cin);
 
endmodule
 
***************************************************************************************************
                         ***   ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***
***  ***  "
N/A,N/A,-1,26.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    
    
    wire [15:0] sum;
    wire cout;
    
    carry_select_adder_16 CS(sum, cout, in1, in2, cin);
    
endmodule

module carry_select_adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    
    wire [15:0] sum;
    wire cout;
    
    wire [3:0] carry;
    
    carry_select_adder_4 CS1(sum[3:0], carry[3:0], in1[3:0], in2[3:0], cin);
    carry_select_adder_4 CS2(sum[7:4], carry[7:4], in1[7:4], in2[7:4], carry[3:0]);
    carry_select_adder_4 CS3(sum[11:8], carry[11:8], in1[11:8], in2[11:8], carry[7:4]);
    carry_select_adder_4 CS4(sum[15:12], cout, in1[15:12], in2[15:12], carry[11:8]);
    
endmodule

module carry_select_adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);
    
    wire [3:0] sum;
    wire cout;
    
    wire [1:0] carry;
    
    carry_select_adder_2 CS1(sum[1:0], carry[1:0], in1[1:0], in2[1:0], cin);
    carry_select_adder_2 CS2(sum[3:2], carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    carry_select_adder_2 CS3(cout, carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    
endmodule

module carry_select_adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);
    
    wire [1:0] sum;
    wire cout;
    
    wire [1:0] carry;
    
    carry_select_adder_1 CS1(sum[1:0], carry[1:0], in1[1:0], in2[1:0], cin);
    carry_select_adder_1 CS2(sum[3:2], carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    carry_select_adder_1 CS3(cout, carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    
endmodule

module carry_select_adder_1(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);
    
    wire [1:0] sum;
    wire cout;
    
    wire [1:0] carry;
    
    carry_select_adder_1 CS1(sum[1:0], carry[1:0], in1[1:0], in2[1:0], cin);
    carry_select_adder_1 CS2(sum[3:2], carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    carry_select_adder_1 CS3(cout, carry[3:2], in1[3:2], in2[3:2], carry[1:0]);
    
endmodule"
N/A,N/A,-1,27.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    logic [15:0] sum;
    logic cout;
    logic [15:0] in1;
    logic [15:0] in2;
    logic cin;

    task adder_16_task;
        input [15:0] in1;
        input [15:0] in2;
        input cin;
        begin
            sum = in1 + in2 + cin;
            cout = (in1[15] == in2[15] && in1[15] == cin)? 1'b1 : 1'b0;
        end
    endtask
    
    initial begin
        in1 = 16'b0000000000000001;
        in2 = 16'b0000000000000010;
        cin = 1'b0;
        #10
        in1 = 16'b0000000000000011;
        in2 = 16'b0000000000000100;
        cin = 1'b0;
        #10
        in1 = 16'b0000000000000101;
        in2 = 16'b0000000000001000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000000001001;
        in2 = 16'b0000000000010000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000000010001;
        in2 = 16'b0000000000100000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000000100100;
        in2 = 16'b0000000001000000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000001000001;
        in2 = 16'b0000000010000000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000010000001;
        in2 = 16'b0000000100000000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100000010;
        in2 = 16'b0000000100000011;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100000101;
        in2 = 16'b0000000100001000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100001001;
        in2 = 16'b0000000100010000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100010001;
        in2 = 16'b0000000100100001;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100101000;
        in2 = 16'b0000000100110000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000100110001;
        in2 = 16'b0000000101000000;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101000001;
        in2 = 16'b0000000101000010;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101000100;
        in2 = 16'b0000000101000111;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101001010;
        in2 = 16'b0000000101001011;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101010000;
        in2 = 16'b0000000101010010;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101010001;
        in2 = 16'b0000000101010100;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101010110;
        in2 = 16'b0000000101010111;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101100000;
        in2 = 16'b0000000101100011;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101100100;
        in2 = 16'b0000000101100101;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101101000;
        in2 = 16'b0000000101101010;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101101100;
        in2 = 16'b0000000101101101;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101110000;
        in2 = 16'b0000000101110001;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101110110;
        in2 = 16'b0000000101110111;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101111000;
        in2 = 16'b0000000101111001;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101111100;
        in2 = 16'b0000000101111101;
        cin = 1'b0;
        #10
        in1 = 16'b0000000101111110;
        in2 = 16'b0000000101111111;
        cin = 1'b0;
        #10
        in1 = 16'b00000001100000001;
        in2 = 16'b0000000110000001;
        cin = 1'b0;
        #10
        in1 = 16'b0000000110000010;
        in2 = 16'b0000000110000011;
        cin = 1'b0;
        #10
        in1 = 16'b0000000110000100;
        in2 = 16'b0000000110000101;
        cin = 1'b0;
        #10
        in1 = 16'b0000000110000110;
        in2 = 16'b0000000110000111;
        cin ="
N/A,N/A,-1,28.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
      wire [15:0] sum;
      wire cout;
      wire [15:0] in1;
      wire [15:0] in2;
      wire cin;
      
      kogge_stone_16 KS_1(sum, in1, in2, cin);
      kogge_stone_1 KS_2(cout, sum[15], sum[14], sum[13], sum[12], sum[11], sum[10], sum[9], sum[8], sum[7], sum[6], sum[5], sum[4], sum[3], sum[2], sum[1], sum[0]);
endmodule

Top level design
module top_module(
    input clk,
    input reset,
    input [7:0] in,
    output [7:0] out_both,
    output [7:0] out_any,
    output [7:0] out_different
);
    
    wire [7:0] out_both;
    wire [7:0] out_any;
    wire [7:0] out_different;
    
    reg [7:0] out_reg;
    
    always @(posedge clk) begin
        if(reset) begin
            out_reg <= 0;
        end else begin
            out_reg <= in;
        end
    end
    
    assign out_both = out_reg & in;
    assign out_any = out_reg | in;
    assign out_different = out_reg ^ in;
    
endmodule"
N/A,N/A,-0.5,29.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
   wire c1, c2, c3;
   wire [15:0] sum;
   
   adder_4 adder_4_1(sum[3:0], c1, in1[3:0], in2[3:0], cin);
   adder_4 adder_4_2(sum[7:4], c2, in1[7:4], in2[7:4], c1);
   adder_4 adder_4_3(sum[11:8], c3, in1[11:8], in2[11:8], c2);
   adder_4 adder_4_4(sum[15:12], cout, in1[15:12], in2[15:12], c3);
endmodule

module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);
   wire c1, c2, c3;
   wire [3:0] sum;
   
   adder_1 adder_1_1(sum[0], c1, in1[0], in2[0], cin);
   adder_1 adder_1_2(sum[1], c2, in1[1], in2[1], c1);
   adder_1 adder_1_3(sum[2], c3, in1[2], in2[2], c2);
   adder_1 adder_1_4(sum[3], cout, in1[3], in2[3], c3);
endmodule

module adder_1(output sum,
                      output cout,
                      input in1, in2, cin);
   wire c1, c2;
   wire sum;
   
   xor(sum, in1, in2, cin);
   and(c1, in1, in2);
   and(c2, in1, cin);
   and(cout, in2, cin);
endmodule"
N/A,N/A,-1,30.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
	wire [15:0] sum;
	wire cout;
	wire [15:0] in1;
	wire [15:0] in2;
	wire cin;
	
	parameter [15:0] carry_in = 16'b0;
	
	alt_adder_16 adder(sum, cout, in1, in2, carry_in);
	
endmodule

module adder_16_tb;
	reg [15:0] in1;
	reg [15:0] in2;
	reg cin;
	wire [15:0] sum;
	wire cout;
	
	adder_16 adder(sum, cout, in1, in2, cin);
	
	initial
	begin
		$dumpfile(""adder_16_tb.vcd"");
		$dumpvars(0, adder_16_tb);
		
		in1 = 16'b0;
		in2 = 16'b0;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b0;
		
		#10
		in1 = 16'b11111111;
		in2 = 16'b11111111;
		cin = 1'b1"
N/A,N/A,-0.5,31.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  alu_16bit alu_16bit_0(sum, cout, in1, in2, cin);

endmodule

module alu_16bit(output [15:0] sum,
                  output cout,
                  input [15:0] in1, in2,
                  input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum_temp;
  wire cout_temp;
  wire [15:0] in1_temp;
  wire [15:0] in2_temp;
  wire cin_temp;

  assign sum_temp = in1 + in2;
  assign cout_temp = (in1[15] == in2[15])? 1'b0 : (in1[15] == sum_temp[15]? 1'b1 : 1'b0);
  assign in1_temp = in1;
  assign in2_temp = in2;
  assign cin_temp = cin;

  assign sum = sum_temp[15:0];
  assign cout = cout_temp;
  assign in1 = in1_temp;
  assign in2 = in2_temp;
  assign cin = cin_temp;

endmodule"
N/A,N/A,-0.5,32.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

        wire [15:0] sum;
        wire cout;
        wire [15:0] in1;
        wire [15:0] in2;
        wire cin;

        register_16 r1(sum, in1, in2, cin);
        mux_2to1 m1(sum, in1, in2, cin);
        and a1(cout, in1[0], in2[0], cin);

endmodule

module mux_2to1(output [15:0] out,
                input [15:0] in1, in2,
                input cin);

        wire [15:0] out;
        wire [15:0] in1;
        wire [15:0] in2;
        wire cin;

        assign out = (cin)? in2 : in1;

endmodule

module register_16(output [15:0] out,
                    input [15:0] in,
                    input [15:0] in2,
                    input cin);

        wire [15:0] out;
        wire [15:0] in;
        wire [15:0] in2;
        wire cin;

        assign out = (cin)? in2 : in;

endmodule"
N/A,N/A,-0.5,33.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

      wire [15:0] sum;
      wire cout;
      wire [15:0] in1;
      wire [15:0] in2;
      wire cin;

      localparam ADD = 1'b0;
      localparam SUB = 1'b1;
      wire [15:0] sum_temp;
      wire [15:0] in1_temp;
      wire [15:0] in2_temp;
      wire cin_temp;

      assign sum_temp = in1 + in2;
      assign in1_temp = in1;
      assign in2_temp = in2;
      assign cin_temp = cin;

      assign sum = sum_temp[15:0];
      assign cout = cin_temp;

endmodule"
N/A,N/A,-0.5,34.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

	wire [15:0] sum;
	wire cout;
	wire [15:0] in1;
	wire [15:0] in2;
	wire cin;

	decoder_16 decoder(sum, cout, in1, in2, cin);

endmodule

module decoder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

	wire [15:0] sum;
	wire cout;
	wire [15:0] in1;
	wire [15:0] in2;
	wire cin;

	assign sum = in1 ^ in2;
	assign cout = cin & (in1 ^ in2);

endmodule"
N/A,N/A,-1,35.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

     wire [15:0] sum;
     wire cout;
     wire [15:0] in1;
     wire [15:0] in2;
     wire cin;

     

     hadd_16 adder_1(sum[15:0], cout, in1[15:0], in2[15:0], cin);
     hadd_16 adder_2(sum[31:16], cout, in1[31:16], in2[31:16], cout);

endmodule

module hadd_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

     wire [15:0] sum;
     wire cout;
     wire [15:0] in1;
     wire [15:0] in2;
     wire cin;

     wire [15:0] sum_temp;
     wire [15:0] in1_temp;
     wire [15:0] in2_temp;
     wire cin_temp;

     assign sum_temp = in1 + in2;
     assign in1_temp = in1;
     assign in2_temp = in2;
     assign cin_temp = cin;

     assign sum[15:0] = sum_temp[15:0];
     assign cout = sum_temp[16];

endmodule"
N/A,N/A,-0.5,36.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    
  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;
  
  or(sum[0], in1[0], in2[0], cin);
  or(sum[1], in1[1], in2[1], cin);
  or(sum[2], in1[2], in2[2], cin);
  or(sum[3], in1[3], in2[3], cin);
  or(sum[4], in1[4], in2[4], cin);
  or(sum[5], in1[5], in2[5], cin);
  or(sum[6], in1[6], in2[6], cin);
  or(sum[7], in1[7], in2[7], cin);
  or(sum[8], in1[8], in2[8], cin);
  or(sum[9], in1[9], in2[9], cin);
  or(sum[10], in1[10], in2[10], cin);
  or(sum[11], in1[11], in2[11], cin);
  or(sum[12], in1[12], in2[12], cin);
  or(sum[13], in1[13], in2[13], cin);
  or(sum[14], in1[14], in2[14], cin);
  or(sum[15], in1[15], in2[15], cin);
  
  and(cout, in1[15], in2[15], cin);
  
endmodule"
N/A,N/A,-1,37.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    logic [15:0] sum;
    logic cout;
    logic [15:0] in1;
    logic [15:0] in2;
    logic cin;

    real adder_16_1;
    real adder_16_2;
    real adder_16_3;
    real adder_16_4;
    real adder_16_5;
    real adder_16_6;
    real adder_16_7;
    real adder_16_8;
    real adder_16_9;
    real adder_16_10;
    real adder_16_11;
    real adder_16_12;
    real adder_16_13;
    real adder_16_14;
    real adder_16_15;
    real adder_16_16;
    real adder_16_17;
    real adder_16_18;
    real adder_16_19;
    real adder_16_20;
    real adder_16_21;
    real adder_16_22;
    real adder_16_23;
    real adder_16_24;
    real adder_16_25;
    real adder_16_26;
    real adder_16_27;
    real adder_16_28;
    real adder_16_29;
    real adder_16_30;
    real adder_16_31;
    real adder_16_32;
    real adder_16_33;
    real adder_16_34;
    real adder_16_35;
    real adder_16_36;
    real adder_16_37;
    real adder_16_38;
    real adder_16_39;
    real adder_16_40;
    real adder_16_41;
    real adder_16_42;
    real adder_16_43;
    real adder_16_44;
    real adder_16_45;
    real adder_16_46;
    real adder_16_47;
    real adder_16_48;
    real adder_16_49;
    real adder_16_50;
    real adder_16_51;
    real adder_16_52;
    real adder_16_53;
    real adder_16_54;
    real adder_16_55;
    real adder_16_56;
    real adder_16_57;
    real adder_16_58;
    real adder_16_59;
    real adder_16_60;
    real adder_16_61;
    real adder_16_62;
    real adder_16_63;
    real adder_16_64;
    real adder_16_65;
    real adder_16_66;
    real adder_16_67;
    real adder_16_68;
    real adder_16_69;
    real adder_16_70;
    real adder_16_71;
    real adder_16_72;
    real adder_16_73;
    real adder_16_74;
    real adder_16_75;
    real adder_16_76;
    real adder_16_77;
    real adder_16_78;
    real adder_16_79;
    real adder_16_80;
    real adder_16_81;
    real adder_16_82;
    real adder_16_83;
    real adder_16_84;
    real adder_16_85;
    real adder_16_86;
    real adder_16_87;
    real adder_16_88;
    real adder_16_89;
    real adder_16_90;
    real adder_16_91;
    real adder_16_92;
    real adder_16_93;
    real adder_16_94;
    real adder_16_95;
    real adder_16_96;
    real adder_16_97;
    real adder_16_98;
    real adder_16_99;
    real adder_16_100;
    real adder_16_101;
    real adder_16_102;
    real adder_16_103;
    real adder_16_104;
    real adder_16_105;
    real adder_16_106;
    real adder_16_107;
    real adder_16_108;
    real adder_16_109;
    real adder_16_110;
    real adder_16_111;
    real adder_16_112;
    real adder_16_113;
    real adder_16_114;
    real adder_16_115;
    real adder_16_116;
    real adder_16_117;
    real adder_16_118;
    real adder_16_119;
    real adder_16_120;
    real adder_16_121;
    real adder_16_122;
    real adder_16_123;
    real adder_16_124;
    real adder_16_125;
    real adder_16_126;
    real adder_16_127;
    real adder_16_128;
    real adder_16_129;
    real adder_16_130;
    real adder_16_131;
    real adder_16_132;
    real adder_16_133;
    real adder_16_134;
    real adder_16_135;
    real adder_16_136;
    real adder_16_137;
    real adder_16_138;
    real adder_16_139;
    real adder_16_140;
    real adder_16_"
N/A,N/A,-1,38.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
                          
  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;
  
  

  two_bit_ripple_adder adder_1(sum[0], c1, in1[0], in2[0], cin);
  two_bit_ripple_adder adder_2(sum[1], c2, in1[1], in2[1], c1);
  two_bit_ripple_adder adder_3(sum[2], c3, in1[2], in2[2], c2);
  two_bit_ripple_adder adder_4(sum[3], c4, in1[3], in2[3], c3);
  two_bit_ripple_adder adder_5(sum[4], c5, in1[4], in2[4], c4);
  two_bit_ripple_adder adder_6(sum[5], c6, in1[5], in2[5], c5);
  two_bit_ripple_adder adder_7(sum[6], c7, in1[6], in2[6], c6);
  two_bit_ripple_adder adder_8(sum[7], c8, in1[7], in2[7], c7);
  two_bit_ripple_adder adder_9(sum[8], c9, in1[8], in2[8], c8);
  two_bit_ripple_adder adder_10(sum[9], c10, in1[9], in2[9], c9);
  two_bit_ripple_adder adder_11(sum[10], c11, in1[10], in2[10], c10);
  two_bit_ripple_adder adder_12(sum[11], c12, in1[11], in2[11], c11);
  two_bit_ripple_adder adder_13(sum[12], c13, in1[12], in2[12], c12);
  two_bit_ripple_adder adder_14(sum[13], c14, in1[13], in2[13], c13);
  two_bit_ripple_adder adder_15(sum[14], c15, in1[14], in2[14], c14);
  two_bit_ripple_adder adder_16(sum[15], cout, in1[15], in2[15], c15);

endmodule

module two_bit_ripple_adder(output [1:0] sum,
                      output cout,
                      input in1, in2,
                      input cin);
                          
  wire [1:0] in1;
  wire [1:0] in2;
  wire cin;
  wire [1:0] sum;
  wire cout;
  
  
  
  xor(sum[0], in1[0], in2[0], cin);
  xor(sum[1], in1[1], in2[1], cin);
  and(cout, in1[0], in2[0], cin);
  
endmodule"
N/A,N/A,-1,39.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin); 
  wire c1, c2, c3;
  full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
  full_adder FA5(sum[4], c4, in1[4], in2[4], c3);
  full_adder FA6(sum[5], c5, in1[5], in2[5], c4);
  full_adder FA7(sum[6], c6, in1[6], in2[6], c5);
  full_adder FA8(sum[7], c7, in1[7], in2[7], c6);
  full_adder FA9(sum[8], c8, in1[8], in2[8], c7);
  full_adder FA10(sum[9], c9, in1[9], in2[9], c8);
  full_adder FA11(sum[10], c10, in1[10], in2[10], c9);
  full_adder FA12(sum[11], c11, in1[11], in2[11], c10);
  full_adder FA13(sum[12], c12, in1[12], in2[12], c11);
  full_adder FA14(sum[13], c13, in1[13], in2[13], c12);
  full_adder FA15(sum[14], c14, in1[14], in2[14], c13);
  full_adder FA16(sum[15], cout, in1[15], in2[15], c14);
endmodule

imm_gen_v4_1 #(.WIDTH(16)) imm_gen_v4_1(
 .clk(clk),
 .rst(rst),
 .en(en),
 .in(in),
 .out(out)
);

adder_16 adder_16_inst(
 .sum(sum),
 .cout(cout),
 .in1(in1),
 .in2(in2),
 .cin(cin)
);

endmodule"
N/A,N/A,-1,40.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

                      
//Definition for Variables in the module
wire [15:0] sum;
wire cout;

v_add_16 v_add_16(sum, cout, in1, in2, cin);

endmodule
`timescale 1ns / 1ps
default_netlist_file : ""adder_16.v""

module adder_16_tb;

m_add_16 m_add_16_tb(
);

endmodule"
N/A,N/A,-1,41.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
  wire [15:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15;
  
  binary_adder_16 b1(sum1, c1, in1[15:0], in2[15:0], cin);
  binary_adder_16 b2(sum2, c2, in1[15:0], in2[15:0], c1);
  binary_adder_16 b3(sum3, c3, in1[15:0], in2[15:0], c2);
  binary_adder_16 b4(sum4, c4, in1[15:0], in2[15:0], c3);
  binary_adder_16 b5(sum5, c5, in1[15:0], in2[15:0], c4);
  binary_adder_16 b6(sum6, c6, in1[15:0], in2[15:0], c5);
  binary_adder_16 b7(sum7, c7, in1[15:0], in2[15:0], c6);
  binary_adder_16 b8(sum8, c8, in1[15:0], in2[15:0], c7);
  binary_adder_16 b9(sum9, c9, in1[15:0], in2[15:0], c8);
  binary_adder_16 b10(sum10, c10, in1[15:0], in2[15:0], c9);
  binary_adder_16 b11(sum11, c11, in1[15:0], in2[15:0], c10);
  binary_adder_16 b12(sum12, c12, in1[15:0], in2[15:0], c11);
  binary_adder_16 b13(sum13, c13, in1[15:0], in2[15:0], c12);
  binary_adder_16 b14(sum14, c14, in1[15:0], in2[15:0], c13);
  binary_adder_16 b15(sum15, c15, in1[15:0], in2[15:0], c14);
  
  assign sum = {sum15, sum14, sum13, sum12, sum11, sum10, sum9, sum8, sum7, sum6, sum5, sum4, sum3, sum2, sum1};
  assign cout = c15;
endmodule

module adder_16_tb;
  reg [15:0] in1, in2;
  reg cin;
  wire [15:0] sum;
  wire cout;
  
  adder_16 a1(sum, cout, in1, in2, cin);
  
  initial
  begin
    $dumpfile(""adder_16_tb.vcd"");
    $dumpvars(0, adder_16_tb);
    
    in1 = 16'b000000000000;
    in2 = 16'b000000000000;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b0;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111;
    cin = 1'b1;
    #10
    in1 = 16'b111111111111;
    in2 = 16'b111111111111"
N/A,N/A,-1,42.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                                   
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    fadder_16 fadder_16_1(sum[15:0], cout, in1[15:0], in2[15:0], cin);
    fadder_16 fadder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout);
endmodule

module fadder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    wire [15:0] sum_temp;
    wire cout_temp;
    
    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);
    
    assign sum[15:0] = sum_temp[15:0];
    assign cout = cout_temp;
endmodule"
N/A,N/A,-1,43.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);  
  
  wire [15:0] sum;
  wire cout;
  
  ADDER_FIXED_POINT ADDER_FIXED_POINT_inst(sum, cout, in1, in2, cin);
  
endmodule

module ADDER_FIXED_POINT(output [15:0] sum,
                         output cout,
                         input [15:0] in1, in2,
                         input cin);
  
  wire [15:0] sum;
  wire cout;
  
  wire [15:0] in1_full;
  wire [15:0] in2_full;
  
  wire [15:0] in1_full_temp;
  wire [15:0] in2_full_temp;
  
  wire [15:0] in1_full_temp_temp;
  wire [15:0] in2_full_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_temp_temp_temp_temp;
  wire [15:0] in2_full_temp_temp_temp_temp_temp_temp_temp_temp;
  
  wire [15:0] in1_full_temp_temp_temp_temp_"
N/A,N/A,-0.5,44.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                      
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    comparator_16 comp(sum, cin, in1, in2);
    adder_16_bit adder(sum[15:0], cout, in1[15:0], in2[15:0], cin);
endmodule

module comparator_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2);
    wire [15:0] in1;
    wire [15:0] in2;
    wire [15:0] sum;
    wire cout;
    
    assign sum = in1 + in2;
    assign cout = (in1[15:0] == in2[15:0]);
endmodule

module adder_16_bit(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    wire [15:0] sum;
    wire cout;
    
    assign sum = in1 + in2;
    assign cout = (in1[15:0] == in2[15:0]);
endmodule"
N/A,N/A,-1,45.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);   
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    ADD_FIXED_POINT_16b ADD_FIXED_POINT_16b_inst(
       .sum(sum),
       .cout(cout),
       .in1(in1),
       .in2(in2),
       .cin(cin)
    );
endmodule
`timescale 1ns / 1ps
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
﻿_
�"
N/A,N/A,-1,46.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                      
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    logic [15:0] sum;
    logic cout;
    logic [15:0] in1;
    logic [15:0] in2;
    logic cin;
    
    v_add_16 v_add_16_1(sum, cout, in1, in2, cin);
    
endmodule"
N/A,N/A,-1,47.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);                              
  wire c1, c2, c3;
  wire [15:0] sum;
  
  three_bit_ripple_adder add1(sum[3:0], c1, in1[3:0], in2[3:0], cin);
  three_bit_ripple_adder add2(sum[7:4], c2, in1[7:4], in2[7:4], c1);
  three_bit_ripple_adder add3(sum[11:8], c3, in1[11:8], in2[11:8], c2);
  three_bit_ripple_adder add4(sum[15:12], cout, in1[15:12], in2[15:12], c3);
endmodule

module three_bit_ripple_adder(output [2:0] sum,
                               output cout,
                               input [2:0] in1, in2,
                               input cin);
  wire c1, c2, c3;
  wire [2:0] sum;
  
  adder_16 add1(sum[0], c1, in1[0], in2[0], cin);
  adder_16 add2(sum[1], c2, in1[1], in2[1], c1);
  adder_16 add3(sum[2], c3, in1[2], in2[2], c2);
  adder_16 add4(cout, cout, in1[3], in2[3], c3);
endmodule"
N/A,N/A,-1,48.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;

h_sub h1(.a(in1[0]),.b(in2[0]),.s(sum[0]),.c(c1));
h_sub h2(.a(in1[1]),.b(in2[1]),.s(sum[1]),.c(c2));
h_sub h3(.a(in1[2]),.b(in2[2]),.s(sum[2]),.c(c3));
h_sub h4(.a(in1[3]),.b(in2[3]),.s(sum[3]),.c(c4));
h_sub h5(.a(in1[4]),.b(in2[4]),.s(sum[4]),.c(c5));
h_sub h6(.a(in1[5]),.b(in2[5]),.s(sum[5]),.c(c6));
h_sub h7(.a(in1[6]),.b(in2[6]),.s(sum[6]),.c(c7));
h_sub h8(.a(in1[7]),.b(in2[7]),.s(sum[7]),.c(c8));
h_sub h9(.a(in1[8]),.b(in2[8]),.s(sum[8]),.c(c9));
h_sub h10(.a(in1[9]),.b(in2[9]),.s(sum[9]),.c(c10));
h_sub h11(.a(in1[10]),.b(in2[10]),.s(sum[10]),.c(c11));
h_sub h12(.a(in1[11]),.b(in2[11]),.s(sum[11]),.c(c12));
h_sub h13(.a(in1[12]),.b(in2[12]),.s(sum[12]),.c(c13));
h_sub h14(.a(in1[13]),.b(in2[13]),.s(sum[13]),.c(c14));
h_sub h15(.a(in1[14]),.b(in2[14]),.s(sum[14]),.c(c15));

make_pair ha1(.a(in1[15]),.b(in2[15]),.p(sum[15]),.c(c16));

h_sub h16(.a(in1[15]),.b(in2[15]),.s(sum[15]),.c(cout));

endmodule

module h_sub(output a, b, s, c);

input a, b;

assign s = a ^ b;
assign c = a & b;

endmodule"
N/A,N/A,-0.5,49.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);        

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    nand n1(sum[0], in1[0], in2[0], cin);
    nand n2(sum[1], in1[1], in2[1], cin);
    nand n3(sum[2], in1[2], in2[2], cin);
    nand n4(sum[3], in1[3], in2[3], cin);
    nand n5(sum[4], in1[4], in2[4], cin);
    nand n6(sum[5], in1[5], in2[5], cin);
    nand n7(sum[6], in1[6], in2[6], cin);
    nand n8(sum[7], in1[7], in2[7], cin);
    nand n9(sum[8], in1[8], in2[8], cin);
    nand n10(sum[9], in1[9], in2[9], cin);
    nand n11(sum[10], in1[10], in2[10], cin);
    nand n12(sum[11], in1[11], in2[11], cin);
    nand n13(sum[12], in1[12], in2[12], cin);
    nand n14(sum[13], in1[13], in2[13], cin);
    nand n15(sum[14], in1[14], in2[14], cin);
    nand n16(sum[15], in1[15], in2[15], cin);
    nand n17(cout, in1[15], in2[15], cin);

endmodule"
N/A,N/A,-1,50.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);        
  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;
  
  alu_16bit alu_16bit_inst(sum, cout, in1, in2, cin);
endmodule

module alu_16bit(output [15:0] sum,
                  output cout,
                  input [15:0] in1, in2,
                  input cin);
  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;
  
  wire [15:0] sum_temp;
  wire cout_temp;
  
  adder_16 adder_16_inst(sum_temp, cout_temp, in1, in2, cin);
  
  assign sum = sum_temp[15:0];
  assign cout = cout_temp;
endmodule"
N/A,N/A,-1,51.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

       wire [15:0] sum;
       wire cout;
       wire [15:0] in1;
       wire [15:0] in2;
       wire cin;

       adder_16_bit adder_16_bit_inst(sum, cout, in1, in2, cin);

endmodule

module adder_16_bit(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

       wire [15:0] sum;
       wire cout;
       wire [15:0] in1;
       wire [15:0] in2;
       wire cin;

       adder_16_bit_inst adder_16_bit_inst(sum, cout, in1, in2, cin);

endmodule

module adder_16_bit_inst(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

       wire [15:0] sum;
       wire cout;
       wire [15:0] in1;
       wire [15:0] in2;
       wire cin;

       adder_16_bit_inst adder_16_bit_inst(sum, cout, in1, in2, cin);

endmodule"
N/A,N/A,-1,52.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);    

wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;


comparator_16 comp_1(.a(in1[15:0]),.b(in2[15:0]),.eq(c1),.gt(c2),.ge(c3),.set(c4),.last(c5));
comparator_16 comp_2(.a(in1[31:16]),.b(in2[31:16]),.eq(c6),.gt(c7),.ge(c8),.set(c9),.last(c10));

adder_16_bit add_1(.sum(sum[15:0]),.cout(c11),.in1(in1[15:0]),.in2(in2[15:0]),.cin(c1));
adder_16_bit add_2(.sum(sum[31:16]),.cout(c12),.in1(in1[31:16]),.in2(in2[31:16]),.cin(c6));

mux_2x1_16 mux_1(.in0(in1[15:0]),.in1(in2[15:0]),.sel(cin),.out(sum[15:0]));
mux_2x1_16 mux_2(.in0(in1[31:16]),.in1(in2[31:16]),.sel(c5),.out(sum[31:16]));

mux_2x1_1 mux_3(.in0(cout),.in1(c4),.sel(cin),.out(cout));
mux_2x1_1 mux_4(.in0(c3),.in1(c2),.sel(c4),.out(cout));
mux_2x1_1 mux_5(.in0(c2),.in1(c1),.sel(c3),.out(cout));
mux_2x1_1 mux_6(.in0(c1),.in1(c0),.sel(cin),.out(cout));
mux_2x1_1 mux_7(.in0(c0),.in1(1'b0),.sel(cin),.out(cout));

endmodule

module comparator_16(output [15:0] eq,
                      output [15:0] gt,
                      output [15:0] ge,
                      output [15:0] set,
                      output [15:0] last,
                      input [15:0] a, b);

wire [15:0] a_not, b_not;
wire [15:0] a_and, b_and;
wire [15:0] a_or, b_or;
wire [15:0] a_xor, b_xor;

assign a_not = ~a;
assign b_not = ~b;

assign a_and = a & b;
assign b_and = b & a;

assign a_or = a | b;
assign b_or = b | a;

assign a_xor = a ^ b;
assign b_xor = b ^ a;

assign eq = (a_and == b_and)? 1'b1 : 1'b0;
assign gt = (a_and > b_and)? 1'b1 : 1'b0;
assign ge = (a_and >= b_and)? 1'b1 : 1'b0;
assign set = (a_and!= b_and)? 1'b1 : 1'b0;
assign last = (a_and == b_and)? 1'b1 : 1'b0;

endmodule

module adder_16_bit(output [15:0] sum,
                     output cout,
                     input [15:0] in1, in2,
                     input cin);

wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;

adder_8 add_1(.sum(sum[7:0]),.cout(c1),.in1(in1[7:0]),.in2(in2[7:0]),.cin(cin));
adder_8 add_2(.sum(sum[15:8]),.cout(c2),.in1(in1[15:8]),.in2(in2[15:8]),.cin(c1));

adder_8 add_3(.sum(sum[15:8]),.cout(c3),.in1(in1[7:0]),.in2(in2[7:0]),.cin(c2));
adder_8 add_4(.sum(sum[7:0]),.cout(c4),.in1(in1[15:8]),.in2(in2[15:8]),.cin(c3));

mux_2x1_16 mux_1(.in0(in1[15:8]),.in1(in2[15:8]),.sel(cin),.out(sum[15:8]));
mux_2x1_16 mux_2(.in0(in1[7:0]),.in1(in2[7:0]),.sel(c4),.out(sum[7:0]));

mux_2x1_1 mux_3(.in0(cout),.in1(c3),.sel(cin),.out(cout));
mux_2x1_1 mux_4(.in0(c2),.in1(c1),.sel(c4),.out(cout));
mux_2x1_1 mux_5(.in0(c1),.in1(c0),.sel(cin),.out(cout));
mux_2x1_1 mux_6(.in0(c0),.in1(1'b0),.sel(cin"
N/A,N/A,-1,53.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;
    
    ADD_FIXED_POINT_16b ADD_FIXED_POINT_16b_inst(
       .sum(sum),
       .cout(cout),
       .in1(in1),
       .in2(in2),
       .cin(cin)
    );
endmodule
`timescale 1ns / 1ps
-- --------------------------------------------------------------------
-- File: adder_16.v
-- 
-- Description: 16-bit adder
--
-- Dependencies: 
--
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- --------------------------------------------------------------------
--
-- Generated by Quartus V10.1 sp1
-- httpaddress: httpview.altera.com
--
--
--
-- --------------------------------------------------------------------
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Revision 0.01 - File Created
--"
N/A,N/A,-1,54.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  ALU_16bit_1bit ADD(sum, cout, in1, in2, cin);

endmodule

module ALU_16bit_1bit(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  wire [15:0] sum;
  wire cout;
  wire [15:0] in1;
  wire [15:0] in2;
  wire cin;

  assign sum = in1 + in2;
  assign cout = in1[15] ^ in2[15];

endmodule"
N/A,N/A,-0.5,55.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
   wire c1, c2, c3;
   wire [15:0] sum;
   
   adder_4 adder_4_1(sum[3:0], c1, in1[3:0], in2[3:0], cin);
   adder_4 adder_4_2(sum[7:4], c2, in1[7:4], in2[7:4], c1);
   adder_4 adder_4_3(sum[11:8], c3, in1[11:8], in2[11:8], c2);
   adder_4 adder_4_4(sum[15:12], cout, in1[15:12], in2[15:12], c3);
endmodule

module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);
   wire c1, c2, c3;
   wire [3:0] sum;
   
   adder_1 adder_1_1(sum[0], c1, in1[0], in2[0], cin);
   adder_1 adder_1_2(sum[1], c2, in1[1], in2[1], c1);
   adder_1 adder_1_3(sum[2], c3, in1[2], in2[2], c2);
   adder_1 adder_1_4(sum[3], cout, in1[3], in2[3], c3);
endmodule

module adder_1(output sum,
                      output cout,
                      input in1, in2, cin);
   wire c1, c2;
   wire sum;
   
   xor(sum, in1, in2, cin);
   and(c1, in1, in2);
   and(c2, in1, cin);
   and(cout, in2, cin);
endmodule"
N/A,N/A,-1,56.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
  
  wire [15:0] sum;
  wire cout;
  
  carry_select_adder_16 CS(sum, cout, in1, in2, cin);
  
endmodule

module carry_select_adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);
  
  wire [15:0] sum;
  wire cout;
  
  wire [3:0] carry;
  
  adder_4 CS1(sum[3:0], carry[0], in1[3:0], in2[3:0], cin);
  adder_4 CS2(sum[7:4], carry[1], in1[7:4], in2[7:4], carry[0]);
  adder_4 CS3(sum[11:8], carry[2], in1[11:8], in2[11:8], carry[1]);
  adder_4 CS4(sum[15:12], cout, in1[15:12], in2[15:12], carry[2]);
  
endmodule

module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);
  
  wire [3:0] sum;
  wire cout;
  
  wire [1:0] carry;
  
  adder_1 CS1(sum[0], carry[0], in1[0], in2[0], cin);
  adder_1 CS2(sum[1], carry[1], in1[1], in2[1], carry[0]);
  adder_1 CS3(sum[2], carry[2], in1[2], in2[2], carry[1]);
  adder_1 CS4(sum[3], cout, in1[3], in2[3], carry[2]);
  
endmodule

module adder_1(output sum,
                      output cout,
                      input in1, in2,
                      input cin);
  
  wire sum;
  wire cout;
  
  wire [1:0] carry;
  
  adder_1 CS1(sum, carry[0], in1, in2, cin);
  adder_1 CS2(cout, carry[1], in1, in2, carry[0]);
  
endmodule"
151.886,636.95,1,57.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,58.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,59.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,60.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,61.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,62.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,63.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,64.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,65.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,66.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,67.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,68.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,69.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,70.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    ADD_FIXED_POINT_OPCODE adder_16_1(sum[15:0], cout, in1[15:0], in2[15:0], cin);

endmodule

module adder_16_1(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_2 adder_16_2_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_3 adder_16_3_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_2(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_3 adder_16_2_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_4 adder_16_4_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_3(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_4 adder_16_3_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_5 adder_16_5_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_4(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_5 adder_16_4_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_6 adder_16_6_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_5(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_6 adder_16_5_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_7 adder_16_7_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_6(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_7 adder_16_6_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_8 adder_16_8_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_7(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_16_8 adder_16_7_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16_9 adder_16_9_1(sum[15:0], cout, sum_temp[15:0], cout_temp);

endmodule

module adder_16_8(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in"
151.886,636.95,1,71.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-0.5,72.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[15:0] == in2[15:0])? 1'b0 : 1'b1;

endmodule"
151.886,636.95,1,73.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,74.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,75.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,76.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,77.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,78.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,79.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,80.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,81.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,82.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,83.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,84.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,85.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,86.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,87.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-0.5,88.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign cin = 1'b0;
    assign cout = 1'b0;

    endmodule"
151.886,636.95,1,89.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,90.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,91.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,92.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,93.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,94.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,95.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,96.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,97.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire c1, c2, c3;
    wire [15:0] sum1, sum2, sum3;
    
    and(c1, in1[0], in2[0]);
    and(c2, in1[1], in2[1]);
    and(c3, in1[2], in2[2]);
    and(sum1[0], in1[0], in2[0], cin);
    and(sum1[1], in1[1], in2[1], c1);
    and(sum1[2], in1[2], in2[2], c2);
    and(sum1[3], in1[3], in2[3], c3);
    and(sum1[4], in1[4], in2[4], c1);
    and(sum1[5], in1[5], in2[5], c2);
    and(sum1[6], in1[6], in2[6], c3);
    and(sum1[7], in1[7], in2[7], c1);
    and(sum1[8], in1[8], in2[8], c2);
    and(sum1[9], in1[9], in2[9], c3);
    and(sum1[10], in1[10], in2[10], c1);
    and(sum1[11], in1[11], in2[11], c2);
    and(sum1[12], in1[12], in2[12], c3);
    and(sum1[13], in1[13], in2[13], c1);
    and(sum1[14], in1[14], in2[14], c2);
    and(sum1[15], in1[15], in2[15], c3);
    
    and(sum2[0], in1[0], in2[0], cin);
    and(sum2[1], in1[1], in2[1], c1);
    and(sum2[2], in1[2], in2[2], c2);
    and(sum2[3], in1[3], in2[3], c3);
    and(sum2[4], in1[4], in2[4], c1);
    and(sum2[5], in1[5], in2[5], c2);
    and(sum2[6], in1[6], in2[6], c3);
    and(sum2[7], in1[7], in2[7], c1);
    and(sum2[8], in1[8], in2[8], c2);
    and(sum2[9], in1[9], in2[9], c3);
    and(sum2[10], in1[10], in2[10], c1);
    and(sum2[11], in1[11], in2[11], c2);
    and(sum2[12], in1[12], in2[12], c3);
    and(sum2[13], in1[13], in2[13], c1);
    and(sum2[14], in1[14], in2[14], c2);
    and(sum2[15], in1[15], in2[15], c3);
    
    and(sum3[0], in1[0], in2[0], cin);
    and(sum3[1], in1[1], in2[1], c1);
    and(sum3[2], in1[2], in2[2], c2);
    and(sum3[3], in1[3], in2[3], c3);
    and(sum3[4], in1[4], in2[4], c1);
    and(sum3[5], in1[5], in2[5], c2);
    and(sum3[6], in1[6], in2[6], c3);
    and(sum3[7], in1[7], in2[7], c1);
    and(sum3[8], in1[8], in2[8], c2);
    and(sum3[9], in1[9], in2[9], c3);
    and(sum3[10], in1[10], in2[10], c1);
    and(sum3[11], in1[11], in2[11], c2);
    and(sum3[12], in1[12], in2[12], c3);
    and(sum3[13], in1[13], in2[13], c1);
    and(sum3[14], in1[14], in2[14], c2);
    and(sum3[15], in1[15], in2[15], c3);
    
    assign sum[0] = sum1[0];
    assign sum[1] = sum1[1];
    assign sum[2] = sum1[2];
    assign sum[3] = sum1[3];
    assign sum[4] = sum1[4];
    assign sum[5] = sum1[5];
    assign sum[6] = sum1[6];
    assign sum[7] = sum1[7];
    assign sum[8] = sum1[8];
    assign sum[9] = sum1[9];
    assign sum[10] = sum1[10];
    assign sum[11] = sum1[11];
    assign sum[12] = sum1[12];
    assign sum[13] = sum1[13];
    assign sum[14] = sum1[14];
    assign sum[15] = sum1[15];
    
    assign sum[16] = sum2[0];
    assign sum[17] = sum2[1];
    assign sum[18] = sum2[2];
    assign sum[19] = sum2[3];
    assign sum[20] = sum2[4];
    assign sum[21] = sum2[5];
    assign sum[22] = sum2[6];
    assign sum[23] = sum2[7];
    assign sum[24] = sum2[8];
    assign"
151.886,636.95,1,98.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,99.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,100.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,101.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,102.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,103.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,104.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,105.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,106.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,107.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,108.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,109.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,110.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,111.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,112.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,113.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,114.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,115.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,116.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,117.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,118.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign cout = c[15];
    assign sum = s[15:0];
    
    full_adder_16 FA1(s[16], c[16], in1[15], in2[15], cin);
    full_adder_16 FA2(s[17], c[17], in1[16], in2[16], c[16]);
    full_adder_16 FA3(s[18], c[18], in1[17], in2[17], c[17]);
    full_adder_16 FA4(s[19], c[19], in1[18], in2[18], c[18]);
    full_adder_16 FA5(s[20], c[20], in1[19], in2[19], c[19]);
    full_adder_16 FA6(s[21], c[21], in1[20], in2[20], c[20]);
    full_adder_16 FA7(s[22], c[22], in1[21], in2[21], c[21]);
    full_adder_16 FA8(s[23], c[23], in1[22], in2[22], c[22]);
    full_adder_16 FA9(s[24], c[24], in1[23], in2[23], c[23]);
    full_adder_16 FA10(s[25], c[25], in1[24], in2[24], c[24]);
    full_adder_16 FA11(s[26], c[26], in1[25], in2[25], c[25]);
    full_adder_16 FA12(s[27], c[27], in1[26], in2[26], c[26]);
    full_adder_16 FA13(s[28], c[28], in1[27], in2[27], c[27]);
    full_adder_16 FA14(s[29], c[29], in1[28], in2[28], c[28]);
    full_adder_16 FA15(s[30], c[30], in1[29], in2[29], c[29]);
    full_adder_16 FA16(s[31], c[31], in1[30], in2[30], c[30]);
    full_adder_16 FA17(s[32], c[32], in1[31], in2[31], c[31]);
    full_adder_16 FA18(s[33], c[33], in1[32], in2[32], c[32]);
    full_adder_16 FA19(s[34], c[34], in1[33], in2[33], c[33]);
    full_adder_16 FA20(s[35], c[35], in1[34], in2[34], c[34]);
    full_adder_16 FA21(s[36], c[36], in1[35], in2[35], c[35]);
    full_adder_16 FA22(s[37], c[37], in1[36], in2[36], c[36]);
    full_adder_16 FA23(s[38], c[38], in1[37], in2[37], c[37]);
    full_adder_16 FA24(s[39], c[39], in1[38], in2[38], c[38]);
    full_adder_16 FA25(s[40], c[40], in1[39], in2[39], c[39]);
    full_adder_16 FA26(s[41], c[41], in1[40], in2[40], c[40]);
    full_adder_16 FA27(s[42], c[42], in1[41], in2[41], c[41]);
    full_adder_16 FA28(s[43], c[43], in1[42], in2[42], c[42]);
    full_adder_16 FA29(s[44], c[44], in1[43], in2[43], c[43]);
    full_adder_16 FA30(s[45], c[45], in1[44], in2[44], c[44]);
    full_adder_16 FA31(s[46], c[46], in1[45], in2[45], c[45]);
    full_adder_16 FA32(s[47], c[47], in1[46], in2[46], c[46]);
    full_adder_16 FA33(s[48], c[48], in1[47], in2[47], c[47]);
    full_adder_16 FA34(s[49], c[49], in1[48], in2[48], c[48]);
    full_adder_16 FA35(s[50], c[50], in1[49], in2[49], c[49]);
    full_adder_16 FA36(s[51], c[51], in1[50], in2[50], c[50]);
    full_adder_16 FA37(s[52], c[52], in1[51], in2[51], c[51]);
    full_adder_16 FA38(s[53], c[53], in1[52], in2[52], c[52]);
    full_adder_16 FA39(s[54], c[54], in1[53], in2[53], c[53]);
    full_adder_16 FA40(s[55], c[55], in1[54], in2[54], c[54]);
    full_adder_16 FA41(s[56], c[56], in1[55], in2[55], c[55]);
    full_adder_16 FA42(s[57], c[57], in1[56], in2[56], c[56]);
    full_adder_16 FA43(s[58], c[58], in1[57], in2[57], c[57]);
    full_adder_16 FA44(s[59], c[59], in1[58], in2[58], c[58]);
    full_adder_16 FA45(s[60], c[60], in1[59], in2[59], c[59]);
    full_adder_16 FA46(s[61], c[61], in1[60], in2[60], c[60]);
    full_adder"
151.886,636.95,1,119.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,120.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,121.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,122.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,123.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,124.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,125.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,126.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,127.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,128.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,129.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,130.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,131.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,132.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,133.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,134.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,135.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,136.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-0.5,137.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[15:0] == in2[15:0])? 1'b0 : 1'b1;

endmodule"
151.886,636.95,1,138.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-1,139.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum;
    wire cout;
    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    if (in1 == 16'b0 && in2 == 16'b0)
    begin
        sum = 16'b0;
        cout = 1'b0;
    end
    else if (in1 == 16'b1111111111111111)
    begin
        sum = in2;
        cout = cin;
    end
    else if (in2 == 16'b1111111111111111)
    begin
        sum = in1;
        cout = cin;
    end
    else
    begin
        sum = in1 + in2;
        cout = cin;
    end
endmodule"
151.886,636.95,1,140.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,141.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,142.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,143.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,144.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,145.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,146.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,147.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,148.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,149.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,150.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,151.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,152.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,153.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,154.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,155.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,156.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,157.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,158.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,159.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,160.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,161.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,162.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,163.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,164.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,165.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,166.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,167.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,168.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,169.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,170.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,171.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,172.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,173.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,174.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,175.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,176.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,177.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,178.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,179.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,180.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,181.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,182.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,183.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,184.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,185.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,186.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,187.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,188.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,189.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,190.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,191.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,192.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,193.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,194.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,195.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,196.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,197.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,198.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,199.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,200.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire[15:0] sum;
    wire cout;
    wire[15:0] in1;
    wire[15:0] in2;
    wire cin;

    ADD_FIXED_POINT_1 adder_1(sum[0], cout, in1[0], in2[0], cin);
    ADD_FIXED_POINT_2 adder_2(sum[1], cout, in1[1], in2[1], cout);
    ADD_FIXED_POINT_3 adder_3(sum[2], cout, in1[2], in2[2], cout);
    ADD_FIXED_POINT_4 adder_4(sum[3], cout, in1[3], in2[3], cout);
    ADD_FIXED_POINT_5 adder_5(sum[4], cout, in1[4], in2[4], cout);
    ADD_FIXED_POINT_6 adder_6(sum[5], cout, in1[5], in2[5], cout);
    ADD_FIXED_POINT_7 adder_7(sum[6], cout, in1[6], in2[6], cout);
    ADD_FIXED_POINT_8 adder_8(sum[7], cout, in1[7], in2[7], cout);
    ADD_FIXED_POINT_9 adder_9(sum[8], cout, in1[8], in2[8], cout);
    ADD_FIXED_POINT_10 adder_10(sum[9], cout, in1[9], in2[9], cout);
    ADD_FIXED_POINT_11 adder_11(sum[10], cout, in1[10], in2[10], cout);
    ADD_FIXED_POINT_12 adder_12(sum[11], cout, in1[11], in2[11], cout);
    ADD_FIXED_POINT_13 adder_13(sum[12], cout, in1[12], in2[12], cout);
    ADD_FIXED_POINT_14 adder_14(sum[13], cout, in1[13], in2[13], cout);
    ADD_FIXED_POINT_15 adder_15(sum[14], cout, in1[14], in2[14], cout);
    ADD_FIXED_POINT_16 adder_16(sum[15], cout, in1[15], in2[15], cout);

endmodule

module ADD_FIXED_POINT_1(output reg [15:0] sum,
                         output cout,
                         input [15:0] in1, in2,
                         input cin);

    wire [15:0] in1;
    wire [15:0] in2;
    wire cin;

    wire [15:0] sum;
    wire cout;

    assign in1 = in1 << 1;
    assign in2 = in2 << 1;
    assign cin = 1'b0;

    always @(in1 or in2 or cin)
    begin
        sum = in1 + in2 + cin;
        cout = sum[15];
    end

endmodule"
151.886,636.95,1,201.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,202.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,203.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,204.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,205.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,206.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,207.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,208.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,209.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,210.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,211.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,212.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,213.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,214.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,215.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,216.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,217.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,218.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,219.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,220.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,221.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,222.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,223.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,224.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,225.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,226.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,227.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,228.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,229.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,230.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,231.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,232.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,233.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign cin = 1'b0;
    assign cout = 1'b0;

    ripple_carry_adder_16 rca1(sum[15:0], c1, in1[15:0], in2[15:0], cin);
    ripple_carry_adder_16 rca2(sum[31:16], c2, in1[31:16], in2[31:16], c1);
    mux_2to1 m1(sum[31:16], c2, c1, cout);

endmodule

led_mux led_mux_inst(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out)
);

led_mux led_mux_inst2(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out2)
);

led_mux led_mux_inst3(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out3)
);

led_mux led_mux_inst4(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out4)
);

led_mux led_mux_inst5(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out5)
);

led_mux led_mux_inst6(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out6)
);

led_mux led_mux_inst7(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out7)
);

led_mux led_mux_inst8(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out8)
);

led_mux led_mux_inst9(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out9)
);

led_mux led_mux_inst10(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out10)
);

led_mux led_mux_inst11(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out11)
);

led_mux led_mux_inst12(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out12)
);

led_mux led_mux_inst13(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out13)
);

led_mux led_mux_inst14(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out14)
);

led_mux led_mux_inst15(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out15)
);

led_mux led_mux_inst16(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out16)
);

led_mux led_mux_inst17(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out17)
);

led_mux led_mux_inst18(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out18)
);

led_mux led_mux_inst19(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out19)
);

led_mux led_mux_inst20(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out20)
);

led_mux led_mux_inst21(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out21)
);

led_mux led_mux_inst22(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out22)
);

led_mux led_mux_inst23(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out23)
);

led_mux led_mux_inst24(
   .clk(clk),
   .rst(rst),
   .led_in(led_in),
   .led_out(led_out24)
);

"
151.886,636.95,1,234.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,235.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,236.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,237.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,238.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,239.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,240.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,241.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,242.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,243.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,244.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,245.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,246.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,247.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,248.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,249.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,250.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,251.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,252.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,253.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-0.5,254.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign sum = in1 + in2 + cin;
  assign cout = (in1[15] == in2[15])? 1'b0 : (in1[15] == cin? 1'b1 : in1[15] + in2[15] + cin);

endmodule"
151.886,636.95,1,255.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,256.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,257.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,258.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,259.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,260.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,261.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,262.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,263.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,264.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,265.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,266.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,267.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,268.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,269.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;

  sum_16 s1(sum[15:0], c1, in1[15:0], in2[15:0]);
  sum_16 s2(sum[31:16], c2, in1[15:0], in2[15:0]);
  sum_16 s3(sum[47:32], c3, in1[15:0], in2[15:0]);
  sum_16 s4(sum[63:48], c4, in1[15:0], in2[15:0]);
  sum_16 s5(sum[79:64], c5, in1[15:0], in2[15:0]);
  sum_16 s6(sum[95:80], c6, in1[15:0], in2[15:0]);
  sum_16 s7(sum[111:96], c7, in1[15:0], in2[15:0]);
  sum_16 s8(sum[127:112], c8, in1[15:0], in2[15:0]);
  sum_16 s9(sum[143:128], c9, in1[15:0], in2[15:0]);
  sum_16 s10(sum[159:144], c10, in1[15:0], in2[15:0]);
  sum_16 s11(sum[175:160], c11, in1[15:0], in2[15:0]);
  sum_16 s12(sum[191:176], c12, in1[15:0], in2[15:0]);
  sum_16 s13(sum[207:192], c13, in1[15:0], in2[15:0]);
  sum_16 s14(sum[223:208], c14, in1[15:0], in2[15:0]);
  sum_16 s15(sum[239:224], c15, in1[15:0], in2[15:0]);

  assign cout = c15;

endmodule

module sum_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2);

  assign sum = in1 ^ in2;
  assign cout = (in1 & in2) | (~in1 & ~in2);

endmodule"
151.886,636.95,1,270.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,271.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,272.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,273.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,274.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,275.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,276.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,277.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,278.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,279.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,280.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,281.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,282.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,283.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,284.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,285.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,286.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,287.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,288.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-0.5,289.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[15:0] == in2[15:0])? 1'b0 : 1'b1;

endmodule"
151.886,636.95,1,290.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,291.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,292.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,293.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,294.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,295.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,296.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,297.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,298.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,299.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule"
151.886,636.95,1,300.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
151.886,636.95,1,301.0,1,"module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
