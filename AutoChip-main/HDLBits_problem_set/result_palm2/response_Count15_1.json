Sure, here is a 4-bit binary counter that counts from 0 through 15, inclusive, with a period of 16. The reset input is synchronous, and should reset the counter to 0.

```module top_module (
    input clk,
    input reset,      // Synchronous active-high reset
    output [3:0] q);

    reg [3:0] q;
    reg [3:0] counter;

    always @(posedge clk or negedge reset) begin
        if (reset) begin
            counter <= 0;
        end else begin
            counter <= counter + 1;
            if (counter == 16) begin
                counter <= 0;
            end
        end
        q <= counter;
    end

endmodule
```

This code uses a register to store the current state of the counter, and a synchronous counter to increment the counter on each clock edge. The reset input is used to reset the counter to 0.