Here is a Verilog module that implements a 4-bit shift register with asynchronous reset, synchronous load, and enable:

```module top_module (
    input clk,
    input areset,  // async active-high reset to zero
    input load,
    input ena,
    input [3:0] data,
    output reg [3:0] q);

    reg [3:0] d;
    reg [3:0] q;

    always @(posedge clk) begin
        if (areset) begin
            q <= 4'b0;
        end else begin
            if (load) begin
                q <= data;
            end else if (ena) begin
                q <= q >> 1;
                q[0] <= data[3];
            end
        end
    end

endmodule
```

This module uses a D flip-flop to store the current state of the shift register, and a multiplexer to select between the current state and the new data when the load or enable signals are asserted.