Sure, here is a solution in Verilog:

```module top_module( 
    input [7:0] in,
    output [7:0] out
);

    always @(posedge clk) begin
        out <= {in[6], in[5], in[4], in[3], in[2], in[1], in[0], in[7]};
    end

endmodule
```

The above code uses the concatenation operator (`{...}`) to create a new vector with the bits of `in` reversed. The `always` block ensures that the output `out` is updated on every positive edge of the clock signal `clk`.