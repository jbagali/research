Here is a Verilog implementation of a D flip-flop:
```
module top_module (
    input d, 
    input ena,
    output q);
    
    reg q;
    
    always @(posedge clk) begin
        if (ena) begin
            q <= d;
        end
    end

endmodule
```
This implementation uses a D flip-flop to store the value of the input signal `d` when the enable signal `ena` is asserted. The output signal `q` is the value of the stored data.

Note that this is a latch, so a Quartus warning about having inferred a latch is expected.