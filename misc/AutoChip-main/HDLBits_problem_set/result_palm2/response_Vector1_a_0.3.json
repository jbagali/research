Here is a combinational circuit that splits an input half-word (16 bits, [15:0]) into lower [7:0] and upper [15:8] bytes:

```
`default_nettype none     // Disable implicit nets. Reduces some types of bugs.
module top_module( 
    input wire [15:0] in,
    output wire [7:0] out_hi,
    output wire [7:0] out_lo );

    always @(in) begin
        out_hi <= in[15:8];
        out_lo <= in[7:0];
    end

endmodule
```

This circuit uses an always block to generate the output signals out_hi and out_lo. The always block is triggered on the rising edge of the clock signal, and it updates the output signals based on the value of the input signal in. The output signal out_hi is generated by taking the 8 most significant bits of the input signal in, and the output signal out_lo is generated by taking the 8 least significant bits of the input signal in.