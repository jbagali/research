Sure, here is a Verilog code for a single D flip-flop:

```module top_module (
    input clk,    // Clocks are used in sequential circuits
    input d,
    output reg q );//

    // Use a clocked always block
    //   copy d to q at every positive edge of clk
    //   Clocked always blocks should use non-blocking assignments

    always @(posedge clk) begin
        q <= d;
    end

endmodule
```

This code defines a module called `top_module` with three ports: `clk`, `d`, and `q`. The `clk` port is a clock signal, the `d` port is a data input, and the `q` port is a data output. The `always` block is a clocked block that executes at every positive edge of the clock signal. The `<=` operator is used to assign a value to a register. In this case, the value of the `d` port is assigned to the `q` register at every positive edge of the clock signal.