Area,Delay,Score,Current Run,Episode,Verilog
N/A,N/A,-1,2.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  one_bit_full_adder adder_1(sum[0], carry[0], in1[0], in2[0], cin);
  genvar i;
  generate
    for (i=1; i<32; i=i+1) begin: adder_loop
      one_bit_full_adder adder_2(sum[i], carry[i], in1[i], in2[i], carry[i-1]);
    end
  endgenerate
  one_bit_full_adder adder_3(cout, carry[32], in1[32], in2[32], carry[31]);
endmodule

module one_bit_full_adder(output sum,
                          output cout,
                          input in1, in2, cin);
  wire in1;
  wire in2;
  wire cin;
  wire sum;
  wire cout;
  xor(sum, in1, in2);
  and(cout, in1, in2);
endmodule"
N/A,N/A,-1,3.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    if (in1 == 0 && in2 == 0 && cin == 0)
    begin
        sum = 0;
        cout = 0;
    end
    else if (in1 == 0 && in2 == 0 && cin == 1)
    begin
        sum = 1;
        cout = 0;
    end
    else if (in1 == 0 && in2 == 1 && cin == 0)
    begin
        sum = 0;
        cout = 1;
    end
    else if (in1 == 0 && in2 == 1 && cin == 1)
    begin
        sum = 1;
        cout = 1;
    end
    else if (in1 == 1 && in2 == 0 && cin == 0)
    begin
        sum = 1;
        cout = 0;
    end
    else if (in1 == 1 && in2 == 0 && cin == 1)
    begin
        sum = 1;
        cout = 1;
    end
    else if (in1 == 1 && in2 == 1 && cin == 0)
    begin
        sum = 2;
        cout = 0;
    end
    else if (in1 == 1 && in2 == 1 && cin == 1)
    begin
        sum = 2;
        cout = 1;
    end
    else
    begin
        sum = 0;
        cout = 0;
    end
endmodule"
N/A,N/A,-1,4.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    kogge_stone_32 adder(sum, cout, in1, in2, cin);

endmodule

     
function [31:0] adder_32(input [31:0] in1, in2, input cin);
    begin
        adder_32 #(32) adder(sum, cout, in1, in2, cin);
    end
endfunction

module kogge_stone_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    assign sum = in1 ^ in2;
    assign cout = (in1 & in2) | (in1 ^ in2);

endmodule"
N/A,N/A,-1,5.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  Carry_Select_Adder_32 CS_Adder(sum, carry, in1, in2, cin);
  FA_32 FA_1(sum[0], c1, in1[0], in2[0], cin);
  FA_32 FA_2(sum[1], c2, in1[1], in2[1], c1);
  FA_32 FA_3(sum[2], c3, in1[2], in2[2], c2);
  FA_32 FA_4(sum[3], c4, in1[3], in2[3], c3);
  FA_32 FA_5(sum[4], c5, in1[4], in2[4], c4);
  FA_32 FA_6(sum[5], c6, in1[5], in2[5], c5);
  FA_32 FA_7(sum[6], c7, in1[6], in2[6], c6);
  FA_32 FA_8(sum[7], c8, in1[7], in2[7], c7);
  FA_32 FA_9(sum[8], c9, in1[8], in2[8], c8);
  FA_32 FA_10(sum[9], c10, in1[9], in2[9], c9);
  FA_32 FA_11(sum[10], c11, in1[10], in2[10], c10);
  FA_32 FA_12(sum[11], c12, in1[11], in2[11], c11);
  FA_32 FA_13(sum[12], c13, in1[12], in2[12], c12);
  FA_32 FA_14(sum[13], c14, in1[13], in2[13], c13);
  FA_32 FA_15(sum[14], c15, in1[14], in2[14], c14);
  FA_32 FA_16(sum[15], c16, in1[15], in2[15], c15);
  FA_32 FA_17(sum[16], c17, in1[16], in2[16], c16);
  FA_32 FA_18(sum[17], c18, in1[17], in2[17], c17);
  FA_32 FA_19(sum[18], c19, in1[18], in2[18], c18);
  FA_32 FA_20(sum[19], c20, in1[19], in2[19], c19);
  FA_32 FA_21(sum[20], c21, in1[20], in2[20], c20);
  FA_32 FA_22(sum[21], c22, in1[21], in2[21], c21);
  FA_32 FA_23(sum[22], c23, in1[22], in2[22], c22);
  FA_32 FA_24(sum[23], c24, in1[23], in2[23], c23);
  FA_32 FA_25(sum[24], c25, in1[24], in2[24], c24);
  FA_32 FA_26(sum[25], c26, in1[25], in2[25], c25);
  FA_32 FA_27(sum[26], c27, in1[26], in2[26], c26);
  FA_32 FA_28(sum[27], c28, in1[27], in2[27], c27);
  FA_32 FA_29(sum[28], c29, in1[28], in2[28], c28);
  FA_32 FA_30(sum[29], c30, in1[29], in2[29], c29);
  FA_32 FA_31(sum[30], c31, in1[30], in2[30], c30);
  FA_32 FA_32(sum[31], cout, in1[31"
N/A,N/A,-0.5,6.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    and(sum[0], in1[0], in2[0], cin);
    and(sum[1], in1[1], in2[1], cin);
    and(sum[2], in1[2], in2[2], cin);
    and(sum[3], in1[3], in2[3], cin);
    and(sum[4], in1[4], in2[4], cin);
    and(sum[5], in1[5], in2[5], cin);
    and(sum[6], in1[6], in2[6], cin);
    and(sum[7], in1[7], in2[7], cin);
    and(sum[8], in1[8], in2[8], cin);
    and(sum[9], in1[9], in2[9], cin);
    and(sum[10], in1[10], in2[10], cin);
    and(sum[11], in1[11], in2[11], cin);
    and(sum[12], in1[12], in2[12], cin);
    and(sum[13], in1[13], in2[13], cin);
    and(sum[14], in1[14], in2[14], cin);
    and(sum[15], in1[15], in2[15], cin);
    and(sum[16], in1[16], in2[16], cin);
    and(sum[17], in1[17], in2[17], cin);
    and(sum[18], in1[18], in2[18], cin);
    and(sum[19], in1[19], in2[19], cin);
    and(sum[20], in1[20], in2[20], cin);
    and(sum[21], in1[21], in2[21], cin);
    and(sum[22], in1[22], in2[22], cin);
    and(sum[23], in1[23], in2[23], cin);
    and(sum[24], in1[24], in2[24], cin);
    and(sum[25], in1[25], in2[25], cin);
    and(sum[26], in1[26], in2[26], cin);
    and(sum[27], in1[27], in2[27], cin);
    and(sum[28], in1[28], in2[28], cin);
    and(sum[29], in1[29], in2[29], cin);
    and(sum[30], in1[30], in2[30], cin);
    and(sum[31], in1[31], in2[31], cin);

    or(cout, in1[31], in2[31], cin);
endmodule"
N/A,N/A,-1,7.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin); 
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  and(carry[0], in1[0], in2[0], cin);
  and(carry[1], in1[1], in2[1], carry[0]);
  and(carry[2], in1[2], in2[2], carry[1]);
  and(carry[3], in1[3], in2[3], carry[2]);
  and(carry[4], in1[4], in2[4], carry[3]);
  and(carry[5], in1[5], in2[5], carry[4]);
  and(carry[6], in1[6], in2[6], carry[5]);
  and(carry[7], in1[7], in2[7], carry[6]);
  and(carry[8], in1[8], in2[8], carry[7]);
  and(carry[9], in1[9], in2[9], carry[8]);
  and(carry[10], in1[10], in2[10], carry[9]);
  and(carry[11], in1[11], in2[11], carry[10]);
  and(carry[12], in1[12], in2[12], carry[11]);
  and(carry[13], in1[13], in2[13], carry[12]);
  and(carry[14], in1[14], in2[14], carry[13]);
  and(carry[15], in1[15], in2[15], carry[14]);
  and(carry[16], in1[16], in2[16], carry[15]);
  and(carry[17], in1[17], in2[17], carry[16]);
  and(carry[18], in1[18], in2[18], carry[17]);
  and(carry[19], in1[19], in2[19], carry[18]);
  and(carry[20], in1[20], in2[20], carry[19]);
  and(carry[21], in1[21], in2[21], carry[20]);
  and(carry[22], in1[22], in2[22], carry[21]);
  and(carry[23], in1[23], in2[23], carry[22]);
  and(carry[24], in1[24], in2[24], carry[23]);
  and(carry[25], in1[25], in2[25], carry[24]);
  and(carry[26], in1[26], in2[26], carry[25]);
  and(carry[27], in1[27], in2[27], carry[26]);
  and(carry[28], in1[28], in2[28], carry[27]);
  and(carry[29], in1[29], in2[29], carry[28]);
  and(carry[30], in1[30], in2[30], carry[29]);
  and(carry[31], in1[31], in2[31], carry[30]);
  
  xor(sum[0], in1[0], in2[0], carry[0]);
  xor(sum[1], in1[1], in2[1], carry[1]);
  xor(sum[2], in1[2], in2[2], carry[2]);
  xor(sum[3], in1[3], in2[3], carry[3]);
  xor(sum[4], in1[4], in2[4], carry[4]);
  xor(sum[5], in1[5], in2[5], carry[5]);
  xor(sum[6], in1[6], in2[6], carry[6]);
  xor(sum[7], in1[7], in2[7], carry[7]);
  xor(sum[8], in1[8], in2[8], carry[8]);
  xor(sum[9], in1[9], in2[9], carry[9]);
  xor(sum[10], in1[10], in2["
N/A,N/A,-1,8.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                                   
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    Adder_32bit adder(sum, cout, in1, in2, cin);
    
endmodule

module Adder_32bit(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    wire [31:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15, sum16, sum17, sum18, sum19, sum20, sum21, sum22, sum23, sum24, sum25, sum26, sum27, sum28, sum29, sum30, sum31;
    
    wire cout1, cout2, cout3, cout4, cout5, cout6, cout7, cout8, cout9, cout10, cout11, cout12, cout13, cout14, cout15, cout16, cout17, cout18, cout19, cout20, cout21, cout22, cout23, cout24, cout25, cout26, cout27, cout28, cout29, cout30, cout31;
    
    wire [31:0] in1_1, in2_1, in1_2, in2_2, in1_3, in2_3, in1_4, in2_4, in1_5, in2_5, in1_6, in2_6, in1_7, in2_7, in1_8, in2_8, in1_9, in2_9, in1_10, in2_10, in1_11, in2_11, in1_12, in2_12, in1_13, in2_13, in1_14, in2_14, in1_15, in2_15, in1_16, in2_16, in1_17, in2_17, in1_18, in2_18, in1_19, in2_19, in1_20, in2_20, in1_21, in2_21, in1_22, in2_22, in1_23, in2_23, in1_24, in2_24, in1_25, in2_25, in1_26, in2_26, in1_27, in2_27, in1_28, in2_28, in1_29, in2_29, in1_30, in2_30, in1_31, in2_31;
    
    wire [31:0] in1_1_, in2_1_, in1_2_, in2_2_, in1_3_, in2_3_, in1_4_, in2_4_, in1_5_, in2_5_, in1_6_, in2_6_, in1_7_, in2_7_, in1_8_, in2_8_, in1_9_, in2_9_, in1_10_, in2_10_, in1_11_, in2_11_, in1_12_, in2_12_, in1_13_, in2_13_, in1_14_, in2_14_, in1_15_, in2_15_, in1_16_, in2_16_, in1_17_, in2_17_, in1_18_, in2_18_, in1_19_, in2_19_, in1_20_, in2_20_, in1_21_, in2_21_, in1_22_, in2_22_, in1_23_, in2_23_, in1_24_, in2_24_, in1_25_, in2_25_, in1_26_, in2_26_, in1_27_, in2_27_, in"
N/A,N/A,-0.5,9.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum;
wire cout;

////////////////


	xor(sum[0], in1[0], in2[0], cin);
	xor(sum[1], in1[1], in2[1], cin);
	xor(sum[2], in1[2], in2[2], cin);
	xor(sum[3], in1[3], in2[3], cin);
	xor(sum[4], in1[4], in2[4], cin);
	xor(sum[5], in1[5], in2[5], cin);
	xor(sum[6], in1[6], in2[6], cin);
	xor(sum[7], in1[7], in2[7], cin);
	xor(sum[8], in1[8], in2[8], cin);
	xor(sum[9], in1[9], in2[9], cin);
	xor(sum[10], in1[10], in2[10], cin);
	xor(sum[11], in1[11], in2[11], cin);
	xor(sum[12], in1[12], in2[12], cin);
	xor(sum[13], in1[13], in2[13], cin);
	xor(sum[14], in1[14], in2[14], cin);
	xor(sum[15], in1[15], in2[15], cin);
	xor(sum[16], in1[16], in2[16], cin);
	xor(sum[17], in1[17], in2[17], cin);
	xor(sum[18], in1[18], in2[18], cin);
	xor(sum[19], in1[19], in2[19], cin);
	xor(sum[20], in1[20], in2[20], cin);
	xor(sum[21], in1[21], in2[21], cin);
	xor(sum[22], in1[22], in2[22], cin);
	xor(sum[23], in1[23], in2[23], cin);
	xor(sum[24], in1[24], in2[24], cin);
	xor(sum[25], in1[25], in2[25], cin);
	xor(sum[26], in1[26], in2[26], cin);
	xor(sum[27], in1[27], in2[27], cin);
	xor(sum[28], in1[28], in2[28], cin);
	xor(sum[29], in1[29], in2[29], cin);
	xor(sum[30], in1[30], in2[30], cin);
	xor(sum[31], in1[31], in2[31], cin);
	xor(cout, in1[31], in2[31], cin);

endmodule"
N/A,N/A,-1,10.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);  
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  ////////////////////////////////================================================================
  latch_32 l1(sum, in1, in2, cin);
  latch_32 l2(carry, in1, in2, 1'b0);
  latch_1 c1(cout, carry, cin);
  red_flip_flop_32 rf1(sum, carry, in1, in2);
  rd_flip_flop_32 rf2(sum, cout, in1, in2);
  ltlatch_32 lt1(carry, in1, in2);
  ltlatch_1 lt2(cout, carry, in1, in2);
  high_flip_flop_32 hf1(carry, in1, in2);
  high_flip_flop_1 hf2(cout, carry, in1, in2);
  down_counter_32 d1(carry, in1, in2);
  down_counter_1 d2(cout, carry, in1, in2);
  sp_ram_32 ram1(sum, in1, in2);
  sp_ram_1 ram2(carry, in1, in2);
  squash_32 s1(sum, in1, in2);
  squash_1 s2(carry, in1, in2);
  arith_logic_32 al1(sum, in1, in2, cin);
  arith_logic_1 al2(carry, in1, in2, cin);
  pop_count_32 pc1(sum, in1, in2);
  pop_count_1 pc2(carry, in1, in2);
  flash_32 f1(sum, in1, in2);
  flash_1 f2(carry, in1, in2);
  ternary_32 t1(sum, in1, in2, cin);
  ternary_1 t2(carry, in1, in2, cin);
  pex_block_32 pe1(sum, in1, in2, cin);
  pex_block_1 pe2(carry, in1, in2, cin);
  pex_block_32 pe3(sum, in1, in2, 1'b0);
  pex_block_1 pe4(carry, in1, in2, 1'b0);
  pex_block_32 pe5(sum, in1, in2, 1'b1);
  pex_block_1 pe6(carry, in1, in2, 1'b1);
  center_32 c1(sum, in1, in2);
  center_1 c2(carry, in1, in2);
  center_32 c3(sum, in1, in2);
  center_1 c4(carry, in1, in2);
  center_32 c5(sum, in1, in2);
  center_1 c6(carry, in1, in2);
  center_32 c7(sum, in1, in2);
  center_1 c8(carry, in1, in2);
  center_32 c9(sum, in1, in2);
  center_1 c10(carry, in1, in2);
  center_32 c11(sum, in1, in2);
  center_1 c12(carry, in1, in2);
  center_32 c13(sum, in1, in2);
  center_1 c14(carry, in1, in2);
  center_32 c15(sum, in1, in2);
  center_1 c16(carry, in1, in2);
  center_32 c17(sum, in1, in2);
  center_1 c18(carry, in1, in2);
  center_32 c19(sum, in1, in2);
  center_1 c20(carry, in1, in2);
  center_32 c21(sum, in1, in2);
  center_1 c22(carry, in1, in2);"
N/A,N/A,-1,11.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;

  parameter [31:0] carry_in = 0;

  and(sum[0], in1[0], in2[0], carry_in[0]);
  and(sum[1], in1[1], in2[1], carry_in[0]);
  and(sum[2], in1[2], in2[2], carry_in[0]);
  and(sum[3], in1[3], in2[3], carry_in[0]);
  and(sum[4], in1[4], in2[4], carry_in[0]);
  and(sum[5], in1[5], in2[5], carry_in[0]);
  and(sum[6], in1[6], in2[6], carry_in[0]);
  and(sum[7], in1[7], in2[7], carry_in[0]);
  and(sum[8], in1[8], in2[8], carry_in[0]);
  and(sum[9], in1[9], in2[9], carry_in[0]);
  and(sum[10], in1[10], in2[10], carry_in[0]);
  and(sum[11], in1[11], in2[11], carry_in[0]);
  and(sum[12], in1[12], in2[12], carry_in[0]);
  and(sum[13], in1[13], in2[13], carry_in[0]);
  and(sum[14], in1[14], in2[14], carry_in[0]);
  and(sum[15], in1[15], in2[15], carry_in[0]);
  and(sum[16], in1[16], in2[16], carry_in[0]);
  and(sum[17], in1[17], in2[17], carry_in[0]);
  and(sum[18], in1[18], in2[18], carry_in[0]);
  and(sum[19], in1[19], in2[19], carry_in[0]);
  and(sum[20], in1[20], in2[20], carry_in[0]);
  and(sum[21], in1[21], in2[21], carry_in[0]);
  and(sum[22], in1[22], in2[22], carry_in[0]);
  and(sum[23], in1[23], in2[23], carry_in[0]);
  and(sum[24], in1[24], in2[24], carry_in[0]);
  and(sum[25], in1[25], in2[25], carry_in[0]);
  and(sum[26], in1[26], in2[26], carry_in[0]);
  and(sum[27], in1[27], in2[27], carry_in[0]);
  and(sum[28], in1[28], in2[28], carry_in[0]);
  and(sum[29], in1[29], in2[29], carry_in[0]);
  and(sum[30], in1[30], in2[30], carry_in[0]);
  and(sum[31], in1[31], in2[31], carry_in[0]);
  and(cout, in1[31], in2[31], carry_in[0]);

  xor(sum[0], in1[0], in2[0], carry_in[0]);
  xor(sum[1], in1[1], in2[1], carry_in[0]);
  xor(sum[2], in1[2], in2[2], carry_in[0]);
  xor(sum[3], in1[3], in2[3], carry_in[0]);
  xor(sum[4], in1[4], in2[4], carry_in[0]);
  xor(sum[5], in1[5], in2[5], carry_in[0]);
"
N/A,N/A,-1,12.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                      
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    Adder_32bit adder(sum, cout, in1, in2, cin);
endmodule

  

                         
module Adder_32bit(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    wire [31:0] sum_temp;
    wire cout_temp;
    
    adder_32bit_1bit adder_1bit(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_32bit_2bit adder_2bit(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);
    adder_32bit_3bit adder_3bit(sum_temp[2], cout_temp, in1[2], in2[2], cout_temp);
    adder_32bit_4bit adder_4bit(sum_temp[3], cout_temp, in1[3], in2[3], cout_temp);
    adder_32bit_5bit adder_5bit(sum_temp[4], cout_temp, in1[4], in2[4], cout_temp);
    adder_32bit_6bit adder_6bit(sum_temp[5], cout_temp, in1[5], in2[5], cout_temp);
    adder_32bit_7bit adder_7bit(sum_temp[6], cout_temp, in1[6], in2[6], cout_temp);
    adder_32bit_8bit adder_8bit(sum_temp[7], cout_temp, in1[7], in2[7], cout_temp);
    adder_32bit_9bit adder_9bit(sum_temp[8], cout_temp, in1[8], in2[8], cout_temp);
    adder_32bit_10bit adder_10bit(sum_temp[9], cout_temp, in1[9], in2[9], cout_temp);
    adder_32bit_11bit adder_11bit(sum_temp[10], cout_temp, in1[10], in2[10], cout_temp);
    adder_32bit_12bit adder_12bit(sum_temp[11], cout_temp, in1[11], in2[11], cout_temp);
    adder_32bit_13bit adder_13bit(sum_temp[12], cout_temp, in1[12], in2[12], cout_temp);
    adder_32bit_14bit adder_14bit(sum_temp[13], cout_temp, in1[13], in2[13], cout_temp);
    adder_32bit_15bit adder_15bit(sum_temp[14], cout_temp, in1[14], in2[14], cout_temp);
    adder_32bit_16bit adder_16bit(sum_temp[15], cout_temp, in1[15], in2[15], cout_temp);
    adder_32bit_17bit adder_17bit(sum_temp[16], cout_temp, in1[16], in2[16], cout_temp);
    adder_32bit_18bit adder_18bit(sum_temp[17], cout_temp, in1[17], in2[17], cout_temp);
    adder_32bit_19bit adder_19bit(sum_temp[18], cout_temp, in1[18], in2[18], cout_temp);
    adder_32bit_20bit adder_20bit(sum_temp[19], cout_temp, in1[19], in2[19], cout_temp);
    adder_32bit_21bit adder_21bit(sum_temp[20], cout_temp, in1[20], in2[20], cout_temp);
    adder_32bit_22bit adder_"
N/A,N/A,-1,13.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);   
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    one_bit_adder adder_1(sum[0], c1, in1[0], in2[0], cin);
    one_bit_adder adder_2(sum[1], c2, in1[1], in2[1], c1);
    one_bit_adder adder_3(sum[2], c3, in1[2], in2[2], c2);
    one_bit_adder adder_4(sum[3], c4, in1[3], in2[3], c3);
    one_bit_adder adder_5(sum[4], c5, in1[4], in2[4], c4);
    one_bit_adder adder_6(sum[5], c6, in1[5], in2[5], c5);
    one_bit_adder adder_7(sum[6], c7, in1[6], in2[6], c6);
    one_bit_adder adder_8(sum[7], c8, in1[7], in2[7], c7);
    one_bit_adder adder_9(sum[8], c9, in1[8], in2[8], c8);
    one_bit_adder adder_10(sum[9], c10, in1[9], in2[9], c9);
    one_bit_adder adder_11(sum[10], c11, in1[10], in2[10], c10);
    one_bit_adder adder_12(sum[11], c12, in1[11], in2[11], c11);
    one_bit_adder adder_13(sum[12], c13, in1[12], in2[12], c12);
    one_bit_adder adder_14(sum[13], c14, in1[13], in2[13], c13);
    one_bit_adder adder_15(sum[14], c15, in1[14], in2[14], c14);
    one_bit_adder adder_16(sum[15], c16, in1[15], in2[15], c15);
    one_bit_adder adder_17(sum[16], c17, in1[16], in2[16], c16);
    one_bit_adder adder_18(sum[17], c18, in1[17], in2[17], c17);
    one_bit_adder adder_19(sum[18], c19, in1[18], in2[18], c18);
    one_bit_adder adder_20(sum[19], c20, in1[19], in2[19], c19);
    one_bit_adder adder_21(sum[20], c21, in1[20], in2[20], c20);
    one_bit_adder adder_22(sum[21], c22, in1[21], in2[21], c21);
    one_bit_adder adder_23(sum[22], c23, in1[22], in2[22], c22);
    one_bit_adder adder_24(sum[23], c24, in1[23], in2[23], c23);
    one_bit_adder adder_25(sum[24], c25, in1[24], in2[24], c24);
    one_bit_adder adder_26(sum[25], c26, in1[25], in2[25], c25);
    one_bit_adder adder_27(sum[26], c27, in1[26], in2[26], c26);
    one_bit_adder adder_28(sum[27], c28, in1[27], in2[27], c27);
    one_bit_adder adder_29(sum[28], c29, in1[28], in2[28], c28);
    one_bit_adder adder_30(sum[29], c30, in1[29], in2[29], c29);
    "
N/A,N/A,-1,14.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    s_add_32 s_add_32_0(sum, carry, in1, in2, cin);
    mux_32 mux_32_0(sum, carry, in1, in2, cin);
    
    assign cout = carry[31];
endmodule

module mux_32(output [31:0] out,
               input [31:0] in1, in2,
               input cin);
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] out;
    
    assign in1 = (cin)? in2 : in1;
    assign in2 = (cin)? in1 : in2;
    assign out = in1;
endmodule

module s_add_32(output [31:0] sum,
                 output cout,
                 input [31:0] in1, in2,
                 input cin);
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    adder_32 adder_32_0(sum, carry, in1, in2, cin);
    mux_32 mux_32_1(sum, carry, in1, in2, cin);
    
    assign cout = carry[31];
endmodule"
N/A,N/A,-1,15.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                              
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  
  kogge_stone_32 CLA(sum, carry, in1, in2, cin);
  assign cout = carry[31];
endmodule

logic [31:0] carry;

processor_32 processor_32(
 .clk(clk),
 .reset(reset),
 .in1(in1),
 .in2(in2),
 .cout(cout),
 .sum(sum),
 .carry(carry)
);

adder_32 adder_32(
 .sum(sum),
 .cout(cout),
 .in1(in1),
 .in2(in2),
 .cin(cout)
);

endmodule"
N/A,N/A,-1,16.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);        
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    cla32b cla(sum, cout, in1, in2, cin);

endmodule

datapath dp(
   .clk(clk),
   .reset(reset),
   .A(A),
   .B(B),
   .cin(cin),
   .sum(sum),
   .cout(cout)
);

initial begin
    clk = 0;
    reset = 0;
    A = 0;
    B = 0;
    cin = 0;
    #10;
    reset = 1;
    #10;
    reset = 0;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 0;
    #10;
    A = 32'hFFFFFFFF;
    B = 32'hFFFFFFFF;
    cin = 1;
    #10;
    A = 32'hFFFFFFFF;
"
N/A,N/A,-1,17.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    ////////Add two 32-bit numbers using a 32-bit adder
    adder_32_bit adder(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    ;
    
    floating_point_add adder_fp(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    low_level_adder adder_low(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    level_one_adder adder_level_one(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    heap_level_adder adder_heap(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    mag_comp_adder adder_mag(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    symbol_comp_adder adder_symbol(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    distance_adder adder_distance(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    str_distance_adder adder_str(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    ba_distance_adder adder_ba(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    tiny_adder_distance adder_tiny(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    pla_adder_distance adder_pla(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    
    cu_adder_distance adder_cu(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
"
N/A,N/A,-1,18.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    part2 u1(sum, cout, in1, in2, cin);
    
endmodule

module part2(output [31:0] sum,
              output cout,
              input [31:0] in1, in2,
              input cin);
              
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:"
N/A,N/A,-1,19.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    kogge_stone_32 CLA(sum, cout, in1, in2, cin);

endmodule

add_32 adder_32_inst(sum, cout, in1, in2, cin);

data_path data_path_inst(sum, cout, in1, in2, cin);

module kogge_stone_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    assign sum = in1 ^ in2;
    assign cout = (in1 & in2) | (in1 ^ in2);

endmodule"
N/A,N/A,-1,20.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
        wire [31:0] sum;
        wire cout;
        wire [31:0] in1;
        wire [31:0] in2;
        wire cin;
        wire [31:0] carry;
        
        full_adder_32 FA1(sum[0], carry[0], in1[0], in2[0], cin);
        full_adder_32 FA2(sum[1], carry[1], in1[1], in2[1], carry[0]);
        full_adder_32 FA3(sum[2], carry[2], in1[2], in2[2], carry[1]);
        full_adder_32 FA4(sum[3], carry[3], in1[3], in2[3], carry[2]);
        full_adder_32 FA5(sum[4], carry[4], in1[4], in2[4], carry[3]);
        full_adder_32 FA6(sum[5], carry[5], in1[5], in2[5], carry[4]);
        full_adder_32 FA7(sum[6], carry[6], in1[6], in2[6], carry[5]);
        full_adder_32 FA8(sum[7], carry[7], in1[7], in2[7], carry[6]);
        full_adder_32 FA9(sum[8], carry[8], in1[8], in2[8], carry[7]);
        full_adder_32 FA10(sum[9], carry[9], in1[9], in2[9], carry[8]);
        full_adder_32 FA11(sum[10], carry[10], in1[10], in2[10], carry[9]);
        full_adder_32 FA12(sum[11], carry[11], in1[11], in2[11], carry[10]);
        full_adder_32 FA13(sum[12], carry[12], in1[12], in2[12], carry[11]);
        full_adder_32 FA14(sum[13], carry[13], in1[13], in2[13], carry[12]);
        full_adder_32 FA15(sum[14], carry[14], in1[14], in2[14], carry[13]);
        full_adder_32 FA16(sum[15], carry[15], in1[15], in2[15], carry[14]);
        full_adder_32 FA17(sum[16], carry[16], in1[16], in2[16], carry[15]);
        full_adder_32 FA18(sum[17], carry[17], in1[17], in2[17], carry[16]);
        full_adder_32 FA19(sum[18], carry[18], in1[18], in2[18], carry[17]);
        full_adder_32 FA20(sum[19], carry[19], in1[19], in2[19], carry[18]);
        full_adder_32 FA21(sum[20], carry[20], in1[20], in2[20], carry[19]);
        full_adder_32 FA22(sum[21], carry[21], in1[21], in2[21], carry[20]);
        full_adder_32 FA23(sum[22], carry[22], in1[22], in2[22], carry[21]);
        full_adder_32 FA24(sum[23], carry[23], in1[23], in2[23], carry[22]);
        full_adder_32 FA25(sum[24], carry[24], in1[24], in2[24], carry[23]);
        full_adder_32 FA26(sum[25], carry[25], in1[25], in2[25], carry[24]);
        full_adder_32 FA27(sum[26], carry[26], in1[26], in2[26], carry[25]);
        full_adder_32 FA28(sum[27], carry[27], in1[27], in2[27], carry[26]);
        full_adder_32 FA29(sum[28], carry[28], in1[28], in2[28], carry[27]);
        full_adder_32 FA30(sum[29], carry[29],"
N/A,N/A,-1,21.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);


  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;

  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_in1""})) in1_inst(.CLK(CLK),.CE(CE),.inp(in1),.process_output(in1_process_output));
  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_in2""})) in2_inst(.CLK(CLK),.CE(CE),.inp(in2),.process_output(in2_process_output));
  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_in1_process_output""})) in1_process_output_inst(.CLK(CLK),.CE(CE),.inp(in1_process_output),.process_output(in1_process_output_process_output));
  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_in2_process_output""})) in2_process_output_inst(.CLK(CLK),.CE(CE),.inp(in2_process_output),.process_output(in2_process_output_process_output));
  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_sum""})) sum_inst(.CLK(CLK),.CE(CE),.inp(in1_process_output_process_output),.process_output(sum));
  Add_32_GENERIC #(.INSTANCE_NAME({INSTANCE_NAME,""_cout""})) cout_inst(.CLK(CLK),.CE(CE),.inp(in2_process_output_process_output),.process_output(cout));


endmodule

module Add_32_GENERIC(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] sum;
  wire cout;

  wire [31:0] in1_process_output;
  wire [31:0] in2_process_output;
  wire [31:0] sum_process_output;
  wire cout_process_output;

  assign in1_process_output = in1;
  assign in2_process_output = in2;
  assign sum_process_output = sum;
  assign cout_process_output = cout;

  process_add_32_GENERIC process_add_32_GENERIC_REAL(.sum(sum_process_output),.cout(cout_process_output),.in1(in1_process_output),.in2(in2_process_output),.cin(cin));

  wire [31:0] process_output;
  assign process_output = sum_process_output;

  assign sum = process_output;
  assign cout = cout_process_output;

endmodule

module process_add_32_GENERIC(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] sum;
  wire cout;

  wire [31:0] in1_process_output;
  wire [31:0] in2_process_output;
  wire [31:0] sum_process_output;
  wire cout_process_output;

  assign in1_process_output = in1;
  assign in2_process_output = in2;
  assign sum_process_output = sum;
  assign cout_process_output = cout;

  process_add_32_GENERIC_REAL process_add_32_GENERIC_REAL_INST("
N/A,N/A,-1,22.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum;
wire cout;

reg [31:0] c;

always @(in1 or in2 or cin)
begin
    c[0] = cin;
    sum = in1 ^ in2 ^ c[0];
    c[31:1] = (in1 & in2) | (in1 & c[0]) | (in2 & c[0]);
    cout = c[31];
end

endmodule"
N/A,N/A,-1,23.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;

    parameter [31:0] carry_in = 0;

    ADD_FIXED_POINT_32 ADD_FIXED_POINT_32_i(
       .sum(sum),
       .cout(cout),
       .in1(in1),
       .in2(in2),
       .cin(cin)
    );

endmodule
`timescale 1ns / 1ps
cordic_32_tb();

module cordic_32_tb();

reg clk;
reg reset;
reg signed [31:0] x_init;
reg signed [31:0] y_init;
reg signed [31:0] z_init;
reg signed [31:0] x_step;
reg signed [31:0] y_step;
reg signed [31:0] z_step;
wire signed [31:0] x_out;
wire signed [31:0] y_out;
wire signed [31:0] z_out;

cordic_32 cordic_32_i(
   .clk(clk),
   .reset(reset),
   .x_init(x_init),
   .y_init(y_init),
   .z_init(z_init),
   .x_step(x_step),
   .y_step(y_step),
   .z_step(z_step),
   .x_out(x_out),
   .y_out(y_out),
   .z_out(z_out)
);

initial begin
    clk = 0;
    reset = 0;
    x_init = 0;
    y_init = 0;
    z_init = 0;
    x_step = 0;
    y_step = 0;
    z_step = 0;
    #10;
    reset = 1;
    #10;
    reset = 0;
    #10;
    x_init = 32'h8000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h8000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h0000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h0000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h0000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h0000_0000;
    y_init = 32'h0000_0000;
    z_init = 32'h0000_0000;
    x_step = 32'h0000_0000;
    y_step = 32'h0000_0000;
    z_step = 32'h0000_0000;
    #10;
    x_init = 32'h"
N/A,N/A,-1,24.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

   wire [31:0] sum;
   wire cout;
   wire [31:0] in1;
   wire [31:0] in2;
   wire cin;

   adder_32_bitwise adder(sum, cout, in1, in2, cin);

endmodule

module adder_32_bitwise(output [31:0] sum,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

   wire [31:0] sum;
   wire cout;
   wire [31:0] in1;
   wire [31:0] in2;
   wire cin;

   adder_32_bitwise_part1 adder1(sum[0], cout1, in1[0], in2[0], cin);
   adder_32_bitwise_part2 adder2(sum[1], cout2, in1[1], in2[1], cout1);
   adder_32_bitwise_part3 adder3(sum[2], cout3, in1[2], in2[2], cout2);
   adder_32_bitwise_part4 adder4(sum[3], cout4, in1[3], in2[3], cout3);
   adder_32_bitwise_part5 adder5(sum[4], cout5, in1[4], in2[4], cout4);
   adder_32_bitwise_part6 adder6(sum[5], cout6, in1[5], in2[5], cout5);
   adder_32_bitwise_part7 adder7(sum[6], cout7, in1[6], in2[6], cout6);
   adder_32_bitwise_part8 adder8(sum[7], cout8, in1[7], in2[7], cout7);
   adder_32_bitwise_part9 adder9(sum[8], cout9, in1[8], in2[8], cout8);
   adder_32_bitwise_part10 adder10(sum[9], cout10, in1[9], in2[9], cout9);
   adder_32_bitwise_part11 adder11(sum[10], cout11, in1[10], in2[10], cout10);
   adder_32_bitwise_part12 adder12(sum[11], cout12, in1[11], in2[11], cout11);
   adder_32_bitwise_part13 adder13(sum[12], cout13, in1[12], in2[12], cout12);
   adder_32_bitwise_part14 adder14(sum[13], cout14, in1[13], in2[13], cout13);
   adder_32_bitwise_part15 adder15(sum[14], cout15, in1[14], in2[14], cout14);
   adder_32_bitwise_part16 adder16(sum[15], cout16, in1[15], in2[15], cout15);
   adder_32_bitwise_part17 adder17(sum[16], cout17, in1[16], in2[16], cout16);
   adder_32_bitwise_part18 adder18(sum[17], cout18, in1[17], in2[17], cout17);
   adder_32_bitwise_part19 adder19(sum[18], cout19, in1[18], in2[18], cout18);
   adder_32_bitwise_part20 adder20(sum[19], cout20, in1[19], in2[19], cout19);
   adder_32_bitwise_part21 adder21(sum[20], cout21, in1[20], in2[20], cout20);
   adder_32_bitwise_part22 adder22(sum[21], cout22, in1[21], in2[21], cout21);
   adder_32_bitwise_part23 adder23(sum[22], cout23, in1[22], in2[22], cout22);
   adder_32_bitwise_part24 adder24(sum[23], cout24, in1[23], in2[23], cout23);
   "
N/A,N/A,-1,25.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
 
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
 
  part2 u1(sum, cout, in1, in2, cin);
 
endmodule
 
module part2(output [31:0] sum,
              output cout,
              input [31:0] in1, in2,
              input cin);
 
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
 
  adder_32 u1(sum, cout, in1, in2, cin);
 
endmodule"
N/A,N/A,-1,26.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
	wire [31:0] sum;
	wire cout;
	wire [31:0] in1;
	wire [31:0] in2;
	wire cin;
	
	adder_32_bitwise adder(sum[0], cout, in1[0], in2[0], cin);
	adder_32_bitwise adder1(sum[1], cout, in1[1], in2[1], cout);
	adder_32_bitwise adder2(sum[2], cout, in1[2], in2[2], cout);
	adder_32_bitwise adder3(sum[3], cout, in1[3], in2[3], cout);
	adder_32_bitwise adder4(sum[4], cout, in1[4], in2[4], cout);
	adder_32_bitwise adder5(sum[5], cout, in1[5], in2[5], cout);
	adder_32_bitwise adder6(sum[6], cout, in1[6], in2[6], cout);
	adder_32_bitwise adder7(sum[7], cout, in1[7], in2[7], cout);
	adder_32_bitwise adder8(sum[8], cout, in1[8], in2[8], cout);
	adder_32_bitwise adder9(sum[9], cout, in1[9], in2[9], cout);
	adder_32_bitwise adder10(sum[10], cout, in1[10], in2[10], cout);
	adder_32_bitwise adder11(sum[11], cout, in1[11], in2[11], cout);
	adder_32_bitwise adder12(sum[12], cout, in1[12], in2[12], cout);
	adder_32_bitwise adder13(sum[13], cout, in1[13], in2[13], cout);
	adder_32_bitwise adder14(sum[14], cout, in1[14], in2[14], cout);
	adder_32_bitwise adder15(sum[15], cout, in1[15], in2[15], cout);
	adder_32_bitwise adder16(sum[16], cout, in1[16], in2[16], cout);
	adder_32_bitwise adder17(sum[17], cout, in1[17], in2[17], cout);
	adder_32_bitwise adder18(sum[18], cout, in1[18], in2[18], cout);
	adder_32_bitwise adder19(sum[19], cout, in1[19], in2[19], cout);
	adder_32_bitwise adder20(sum[20], cout, in1[20], in2[20], cout);
	adder_32_bitwise adder21(sum[21], cout, in1[21], in2[21], cout);
	adder_32_bitwise adder22(sum[22], cout, in1[22], in2[22], cout);
	adder_32_bitwise adder23(sum[23], cout, in1[23], in2[23], cout);
	adder_32_bitwise adder24(sum[24], cout, in1[24], in2[24], cout);
	adder_32_bitwise adder25(sum[25], cout, in1[25], in2[25], cout);
	adder_32_bitwise adder26(sum[26], cout, in1[26], in2[26], cout);
	adder_32_bitwise adder27(sum[27], cout, in1[27], in2[27], cout);
	adder_32_bitwise adder28(sum[28], cout, in1[28], in2[28], cout);
	adder_32_bitwise adder29(sum[29], cout, in1[29], in2[29], cout);
	adder_32_bitwise adder30(sum[30], cout, in1[30], in2[30], cout);
	adder_32_bitwise adder31(sum[31], cout, in1[31], in2"
N/A,N/A,-1,27.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;

  mux_32 mux1(sum[0], in1[0], in2[0], cin);
  mux_32 mux2(sum[1], in1[1], in2[1], cin);
  mux_32 mux3(sum[2], in1[2], in2[2], cin);
  mux_32 mux4(sum[3], in1[3], in2[3], cin);
  mux_32 mux5(sum[4], in1[4], in2[4], cin);
  mux_32 mux6(sum[5], in1[5], in2[5], cin);
  mux_32 mux7(sum[6], in1[6], in2[6], cin);
  mux_32 mux8(sum[7], in1[7], in2[7], cin);
  mux_32 mux9(sum[8], in1[8], in2[8], cin);
  mux_32 mux10(sum[9], in1[9], in2[9], cin);
  mux_32 mux11(sum[10], in1[10], in2[10], cin);
  mux_32 mux12(sum[11], in1[11], in2[11], cin);
  mux_32 mux13(sum[12], in1[12], in2[12], cin);
  mux_32 mux14(sum[13], in1[13], in2[13], cin);
  mux_32 mux15(sum[14], in1[14], in2[14], cin);
  mux_32 mux16(sum[15], in1[15], in2[15], cin);
  mux_32 mux17(sum[16], in1[16], in2[16], cin);
  mux_32 mux18(sum[17], in1[17], in2[17], cin);
  mux_32 mux19(sum[18], in1[18], in2[18], cin);
  mux_32 mux20(sum[19], in1[19], in2[19], cin);
  mux_32 mux21(sum[20], in1[20], in2[20], cin);
  mux_32 mux22(sum[21], in1[21], in2[21], cin);
  mux_32 mux23(sum[22], in1[22], in2[22], cin);
  mux_32 mux24(sum[23], in1[23], in2[23], cin);
  mux_32 mux25(sum[24], in1[24], in2[24], cin);
  mux_32 mux26(sum[25], in1[25], in2[25], cin);
  mux_32 mux27(sum[26], in1[26], in2[26], cin);
  mux_32 mux28(sum[27], in1[27], in2[27], cin);
  mux_32 mux29(sum[28], in1[28], in2[28], cin);
  mux_32 mux30(sum[29], in1[29], in2[29], cin);
  mux_32 mux31(sum[30], in1[30], in2[30], cin);
  mux_32 mux32(sum[31], in1[31], in2[31], cin);

  mux_1 mux33(cout, in1[31], in2[31], cin);

endmodule

module mux_32(output reg [31:0] out,
              input [31:0] in1, in2,
              input cin);

  always @(in1 or in2 or cin)
  begin
    case(cin)
      0"
N/A,N/A,-1,28.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    Adder_32bit adder(sum, cout, in1, in2, cin);
    
endmodule

module Adder_32bit(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    wire [31:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15, sum16, sum17, sum18, sum19, sum20, sum21, sum22, sum23, sum24, sum25, sum26, sum27, sum28, sum29, sum30, sum31;
    
    wire cout1, cout2, cout3, cout4, cout5, cout6, cout7, cout8, cout9, cout10, cout11, cout12, cout13, cout14, cout15, cout16, cout17, cout18, cout19, cout20, cout21, cout22, cout23, cout24, cout25, cout26, cout27, cout28, cout29, cout30, cout31;
    
    wire [31:0] in1_1, in2_1, in1_2, in2_2, in1_3, in2_3, in1_4, in2_4, in1_5, in2_5, in1_6, in2_6, in1_7, in2_7, in1_8, in2_8, in1_9, in2_9, in1_10, in2_10, in1_11, in2_11, in1_12, in2_12, in1_13, in2_13, in1_14, in2_14, in1_15, in2_15, in1_16, in2_16, in1_17, in2_17, in1_18, in2_18, in1_19, in2_19, in1_20, in2_20, in1_21, in2_21, in1_22, in2_22, in1_23, in2_23, in1_24, in2_24, in1_25, in2_25, in1_26, in2_26, in1_27, in2_27, in1_28, in2_28, in1_29, in2_29, in1_30, in2_30, in1_31, in2_31;
    
    wire [31:0] in1_1_, in2_1_, in1_2_, in2_2_, in1_3_, in2_3_, in1_4_, in2_4_, in1_5_, in2_5_, in1_6_, in2_6_, in1_7_, in2_7_, in1_8_, in2_8_, in1_9_, in2_9_, in1_10_, in2_10_, in1_11_, in2_11_, in1_12_, in2_12_, in1_13_, in2_13_, in1_14_, in2_14_, in1_15_, in2_15_, in1_16_, in2_16_, in1_17_, in2_17_, in1_18_, in2_18_, in1_19_, in2_19_, in1_20_, in2_20_, in1_21_, in2_21_, in1_22_, in2_22_, in1_23_, in2_23_, in1_24_, in2_24_, in1_25_, in2_25_, in1_26_, in2_26_, in1_27_, in2_27_, in1"
N/A,N/A,-1,29.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
      wire [31:0] sum;
      wire cout;
      wire [31:0] in1;
      wire [31:0] in2;
      wire cin;
      
      adder_32_bitwise adder(sum[0], c1, in1[0], in2[0], cin);
      adder_32_bitwise adder1(sum[1], c2, in1[1], in2[1], c1);
      adder_32_bitwise adder2(sum[2], c3, in1[2], in2[2], c2);
      adder_32_bitwise adder3(sum[3], c4, in1[3], in2[3], c3);
      adder_32_bitwise adder4(sum[4], c5, in1[4], in2[4], c4);
      adder_32_bitwise adder5(sum[5], c6, in1[5], in2[5], c5);
      adder_32_bitwise adder6(sum[6], c7, in1[6], in2[6], c6);
      adder_32_bitwise adder7(sum[7], c8, in1[7], in2[7], c7);
      adder_32_bitwise adder8(sum[8], c9, in1[8], in2[8], c8);
      adder_32_bitwise adder9(sum[9], c10, in1[9], in2[9], c9);
      adder_32_bitwise adder10(sum[10], c11, in1[10], in2[10], c10);
      adder_32_bitwise adder11(sum[11], c12, in1[11], in2[11], c11);
      adder_32_bitwise adder12(sum[12], c13, in1[12], in2[12], c12);
      adder_32_bitwise adder13(sum[13], c14, in1[13], in2[13], c13);
      adder_32_bitwise adder14(sum[14], c15, in1[14], in2[14], c14);
      adder_32_bitwise adder15(sum[15], c16, in1[15], in2[15], c15);
      adder_32_bitwise adder16(sum[16], c17, in1[16], in2[16], c16);
      adder_32_bitwise adder17(sum[17], c18, in1[17], in2[17], c17);
      adder_32_bitwise adder18(sum[18], c19, in1[18], in2[18], c18);
      adder_32_bitwise adder19(sum[19], c20, in1[19], in2[19], c19);
      adder_32_bitwise adder20(sum[20], c21, in1[20], in2[20], c20);
      adder_32_bitwise adder21(sum[21], c22, in1[21], in2[21], c21);
      adder_32_bitwise adder22(sum[22], c23, in1[22], in2[22], c22);
      adder_32_bitwise adder23(sum[23], c24, in1[23], in2[23], c23);
      adder_32_bitwise adder24(sum[24], c25, in1[24], in2[24], c24);
      adder_32_bitwise adder25(sum[25], c26, in1[25], in2[25], c25);
      adder_32_bitwise adder26(sum[26], c27, in1[26], in2[26], c26);
      adder_32_bitwise adder27(sum[27], c28, in1[27], in2[27], c27);
      adder_32_bitwise adder28(sum[28], c29, in1[28], in2[28], c28);
      adder_32_bitwise adder29(sum[29], c30, in1[29], in2[29"
N/A,N/A,-1,30.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin); 
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  pipeline_adder adder_1(sum[0], carry[0], in1[0], in2[0], cin);
  pipeline_adder adder_2(sum[1], carry[1], in1[1], in2[1], carry[0]);
  pipeline_adder adder_3(sum[2], carry[2], in1[2], in2[2], carry[1]);
  pipeline_adder adder_4(sum[3], carry[3], in1[3], in2[3], carry[2]);
  pipeline_adder adder_5(sum[4], carry[4], in1[4], in2[4], carry[3]);
  pipeline_adder adder_6(sum[5], carry[5], in1[5], in2[5], carry[4]);
  pipeline_adder adder_7(sum[6], carry[6], in1[6], in2[6], carry[5]);
  pipeline_adder adder_8(sum[7], carry[7], in1[7], in2[7], carry[6]);
  pipeline_adder adder_9(sum[8], carry[8], in1[8], in2[8], carry[7]);
  pipeline_adder adder_10(sum[9], carry[9], in1[9], in2[9], carry[8]);
  pipeline_adder adder_11(sum[10], carry[10], in1[10], in2[10], carry[9]);
  pipeline_adder adder_12(sum[11], carry[11], in1[11], in2[11], carry[10]);
  pipeline_adder adder_13(sum[12], carry[12], in1[12], in2[12], carry[11]);
  pipeline_adder adder_14(sum[13], carry[13], in1[13], in2[13], carry[12]);
  pipeline_adder adder_15(sum[14], carry[14], in1[14], in2[14], carry[13]);
  pipeline_adder adder_16(sum[15], carry[15], in1[15], in2[15], carry[14]);
  pipeline_adder adder_17(sum[16], carry[16], in1[16], in2[16], carry[15]);
  pipeline_adder adder_18(sum[17], carry[17], in1[17], in2[17], carry[16]);
  pipeline_adder adder_19(sum[18], carry[18], in1[18], in2[18], carry[17]);
  pipeline_adder adder_20(sum[19], carry[19], in1[19], in2[19], carry[18]);
  pipeline_adder adder_21(sum[20], carry[20], in1[20], in2[20], carry[19]);
  pipeline_adder adder_22(sum[21], carry[21], in1[21], in2[21], carry[20]);
  pipeline_adder adder_23(sum[22], carry[22], in1[22], in2[22], carry[21]);
  pipeline_adder adder_24(sum[23], carry[23], in1[23], in2[23], carry[22]);
  pipeline_adder adder_25(sum[24], carry[24], in1[24], in2[24], carry[23]);
  pipeline_adder adder_26(sum[25], carry[25], in1[25], in2[25], carry[24]);
  pipeline_adder adder_27(sum[26], carry[26], in1[26], in2[26], carry[25]);
  pipeline_adder adder_28(sum[27], carry[27], in1[27], in2[27], carry[26]);
"
N/A,N/A,-1,31.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

        wire [31:0] sum;
        wire cout;
        wire [31:0] in1;
        wire [31:0] in2;
        wire cin;

        wire [31:0] carry;

        assign carry[0] = cin;
        assign cout = carry[31];
        assign sum = in1 ^ in2 ^ carry;
        assign carry[31:1] = (in1 & in2) | (in1 & carry) | (in2 & carry);

        forever @(posedge cin) begin
            if (cin) begin
                $display(""Carry in is %b"", cin);
                $display(""Sum is %b"", sum);
                $display(""Carry out is %b"", carry);
            end
        end

endmodule"
N/A,N/A,-1,32.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                                   
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    kogge_stone_32 adder(sum, cout, in1, in2, cin);

endmodule

* Define the kogge_stone_32 adder module.
* Define the adder_32 module.
* Define the adder_64 module.
* Define the adder_128 module.
* Define the adder_256 module.
* Define the adder_512 module.
* Define the adder_1024 module.
* Define the adder_2048 module.
* Define the adder_4096 module.
* Define the adder_8192 module.
* Define the adder_16384 module.
* Define the adder_32768 module.
* Define the adder_65536 module.
* Define the adder_131072 module.
* Define the adder_262144 module.
* Define the adder_524288 module.
* Define the adder_1048576 module.
* Define the adder_2097152 module.
* Define the adder_4194304 module.
* Define the adder_8388608 module.
* Define the adder_16777216 module.
* Define the adder_33554432 module.
* Define the adder_67108864 module.
* Define the adder_134217728 module.
* Define the adder_268435456 module.
* Define the adder_536870912 module.
* Define the adder_1073741824 module.
* Define the adder_2147483648 module.
* Define the adder_4294967296 module.
* Define the adder_8589934592 module.
* Define the adder_17179869184 module.
* Define the adder_34359738368 module.
* Define the adder_68719476736 module.
* Define the adder_137438953472 module.
* Define the adder_274877906944 module.
* Define the adder_549755813888 module.
* Define the adder_1099511627776 module.
* Define the adder_2199023255552 module.
* Define the adder_4398046511104 module.
* Define the adder_8796093022208 module.
* Define the adder_17592186044416 module.
* Define the adder_35184372088832 module.
* Define the adder_70368744177664 module.
* Define the adder_140737488355328 module.
* Define the adder_281474976710656 module.
* Define the adder_562949953421312 module.
* Define the adder_1125899906842624 module.
* Define the adder_2251799813685248 module.
* Define the adder_4503599627370496 module.
* Define the adder_9007199254740992 module.
* Define the adder_18014398509481984 module.
* Define the adder_36028797018963968 module.
* Define the adder_72057594037927936 module.
* Define the adder_144115188075855872 module.
* Define the adder_288230376151711744 module.
* Define the adder_576460752303423488 module.
* Define the adder_1152921504606846976 module.
* Define the adder_225179981368524736 module.
* Define the adder_450359962737049376 module.
* Define the adder_900719925474099200 module.
* Define the adder_1801439850948198416 module.
* Define the adder_3602879701896396816 module.
* Define the adder_7205759403792793616 module."
N/A,N/A,-1,33.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);  
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  dadda_32b dadda_32b_1(sum, in1, in2, cin);
  fa_32b fa_32b_1(sum[0], carry[0], in1[0], in2[0], cin);
  fa_32b fa_32b_2(sum[1], carry[1], in1[1], in2[1], carry[0]);
  fa_32b fa_32b_3(sum[2], carry[2], in1[2], in2[2], carry[1]);
  fa_32b fa_32b_4(sum[3], carry[3], in1[3], in2[3], carry[2]);
  fa_32b fa_32b_5(sum[4], carry[4], in1[4], in2[4], carry[3]);
  fa_32b fa_32b_6(sum[5], carry[5], in1[5], in2[5], carry[4]);
  fa_32b fa_32b_7(sum[6], carry[6], in1[6], in2[6], carry[5]);
  fa_32b fa_32b_8(sum[7], carry[7], in1[7], in2[7], carry[6]);
  fa_32b fa_32b_9(sum[8], carry[8], in1[8], in2[8], carry[7]);
  fa_32b fa_32b_10(sum[9], carry[9], in1[9], in2[9], carry[8]);
  fa_32b fa_32b_11(sum[10], carry[10], in1[10], in2[10], carry[9]);
  fa_32b fa_32b_12(sum[11], carry[11], in1[11], in2[11], carry[10]);
  fa_32b fa_32b_13(sum[12], carry[12], in1[12], in2[12], carry[11]);
  fa_32b fa_32b_14(sum[13], carry[13], in1[13], in2[13], carry[12]);
  fa_32b fa_32b_15(sum[14], carry[14], in1[14], in2[14], carry[13]);
  fa_32b fa_32b_16(sum[15], carry[15], in1[15], in2[15], carry[14]);
  fa_32b fa_32b_17(sum[16], carry[16], in1[16], in2[16], carry[15]);
  fa_32b fa_32b_18(sum[17], carry[17], in1[17], in2[17], carry[16]);
  fa_32b fa_32b_19(sum[18], carry[18], in1[18], in2[18], carry[17]);
  fa_32b fa_32b_20(sum[19], carry[19], in1[19], in2[19], carry[18]);
  fa_32b fa_32b_21(sum[20], carry[20], in1[20], in2[20], carry[19]);
  fa_32b fa_32b_22(sum[21], carry[21], in1[21], in2[21], carry[20]);
  fa_32b fa_32b_23(sum[22], carry[22], in1[22], in2[22], carry[21]);
  fa_32b fa_32b_24(sum[23], carry[23], in1[23], in2[23], carry[22]);
  fa_32b fa_32b_25(sum[24], carry[24], in1[24], in2[24], carry[23]);
  fa_32b fa_32b_26(sum[25], carry[25], in1[25], in2[25], carry[24]);
  fa_32b fa_32b_27(sum["
N/A,N/A,-1,34.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
   wire [31:0] sum;
   wire cout;
   wire [32:0] carry;
   
   adder_32_bit a0(sum[0], carry[0], in1[0], in2[0], cin);
   adder_32_bit a1(sum[1], carry[1], in1[1], in2[1], carry[0]);
   adder_32_bit a2(sum[2], carry[2], in1[2], in2[2], carry[1]);
   adder_32_bit a3(sum[3], carry[3], in1[3], in2[3], carry[2]);
   adder_32_bit a4(sum[4], carry[4], in1[4], in2[4], carry[3]);
   adder_32_bit a5(sum[5], carry[5], in1[5], in2[5], carry[4]);
   adder_32_bit a6(sum[6], carry[6], in1[6], in2[6], carry[5]);
   adder_32_bit a7(sum[7], carry[7], in1[7], in2[7], carry[6]);
   adder_32_bit a8(sum[8], carry[8], in1[8], in2[8], carry[7]);
   adder_32_bit a9(sum[9], carry[9], in1[9], in2[9], carry[8]);
   adder_32_bit a10(sum[10], carry[10], in1[10], in2[10], carry[9]);
   adder_32_bit a11(sum[11], carry[11], in1[11], in2[11], carry[10]);
   adder_32_bit a12(sum[12], carry[12], in1[12], in2[12], carry[11]);
   adder_32_bit a13(sum[13], carry[13], in1[13], in2[13], carry[12]);
   adder_32_bit a14(sum[14], carry[14], in1[14], in2[14], carry[13]);
   adder_32_bit a15(sum[15], carry[15], in1[15], in2[15], carry[14]);
   adder_32_bit a16(sum[16], carry[16], in1[16], in2[16], carry[15]);
   adder_32_bit a17(sum[17], carry[17], in1[17], in2[17], carry[16]);
   adder_32_bit a18(sum[18], carry[18], in1[18], in2[18], carry[17]);
   adder_32_bit a19(sum[19], carry[19], in1[19], in2[19], carry[18]);
   adder_32_bit a20(sum[20], carry[20], in1[20], in2[20], carry[19]);
   adder_32_bit a21(sum[21], carry[21], in1[21], in2[21], carry[20]);
   adder_32_bit a22(sum[22], carry[22], in1[22], in2[22], carry[21]);
   adder_32_bit a23(sum[23], carry[23], in1[23], in2[23], carry[22]);
   adder_32_bit a24(sum[24], carry[24], in1[24], in2[24], carry[23]);
   adder_32_bit a25(sum[25], carry[25], in1[25], in2[25], carry[24]);
   adder_32_bit a26(sum[26], carry[26], in1[26], in2[26], carry[25]);
   adder_32_bit a27(sum[27], carry[27], in1[27], in2[27], carry[26]);
   adder_32_bit a28(sum[28], carry[28], in1[28], in2[28], carry[27]);
   adder_32_bit a29(sum[29], carry[29], in1[29], in2[29], carry[28]);
   adder_32_bit a30(sum[30],"
N/A,N/A,-1,35.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                      
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    //////// Sum generation.
    ha_32 HA1(sum[0], in1[0], in2[0], cin);
    fa_32 FA1(sum[1], in1[1], in2[1], cin, sum[0]);
    fa_32 FA2(sum[2], in1[2], in2[2], cin, sum[1]);
    fa_32 FA3(sum[3], in1[3], in2[3], cin, sum[2]);
    fa_32 FA4(sum[4], in1[4], in2[4], cin, sum[3]);
    fa_32 FA5(sum[5], in1[5], in2[5], cin, sum[4]);
    fa_32 FA6(sum[6], in1[6], in2[6], cin, sum[5]);
    fa_32 FA7(sum[7], in1[7], in2[7], cin, sum[6]);
    fa_32 FA8(sum[8], in1[8], in2[8], cin, sum[7]);
    fa_32 FA9(sum[9], in1[9], in2[9], cin, sum[8]);
    fa_32 FA10(sum[10], in1[10], in2[10], cin, sum[9]);
    fa_32 FA11(sum[11], in1[11], in2[11], cin, sum[10]);
    fa_32 FA12(sum[12], in1[12], in2[12], cin, sum[11]);
    fa_32 FA13(sum[13], in1[13], in2[13], cin, sum[12]);
    fa_32 FA14(sum[14], in1[14], in2[14], cin, sum[13]);
    fa_32 FA15(sum[15], in1[15], in2[15], cin, sum[14]);
    fa_32 FA16(sum[16], in1[16], in2[16], cin, sum[15]);
    fa_32 FA17(sum[17], in1[17], in2[17], cin, sum[16]);
    fa_32 FA18(sum[18], in1[18], in2[18], cin, sum[17]);
    fa_32 FA19(sum[19], in1[19], in2[19], cin, sum[18]);
    fa_32 FA20(sum[20], in1[20], in2[20], cin, sum[19]);
    fa_32 FA21(sum[21], in1[21], in2[21], cin, sum[20]);
    fa_32 FA22(sum[22], in1[22], in2[22], cin, sum[21]);
    fa_32 FA23(sum[23], in1[23], in2[23], cin, sum[22]);
    fa_32 FA24(sum[24], in1[24], in2[24], cin, sum[23]);
    fa_32 FA25(sum[25], in1[25], in2[25], cin, sum[24]);
    fa_32 FA26(sum[26], in1[26], in2[26], cin, sum[25]);
    fa_32 FA27(sum[27], in1[27], in2[27], cin, sum[26]);
    fa_32 FA28(sum[28], in1[28], in2[28], cin, sum[27]);
    fa_32 FA29(sum[29], in1[29], in2[29], cin, sum[28]);
    fa_32 FA30(sum[30], in1[30], in2[30], cin, sum[29]);
    fa_32 FA31(sum[31], in1[31], in2[31], cin, sum[30]);
    
    mark_sum_as_32bit(sum, cin);
    
    scale_add_32(sum, cin"
N/A,N/A,-1,36.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);   
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    Adder_32bit adder(sum, cout, in1, in2, cin);
    
endmodule

module Adder_32bit(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    wire [31:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15, sum16, sum17, sum18, sum19, sum20, sum21, sum22, sum23, sum24, sum25, sum26, sum27, sum28, sum29, sum30, sum31;
    
    wire cout1, cout2, cout3, cout4, cout5, cout6, cout7, cout8, cout9, cout10, cout11, cout12, cout13, cout14, cout15, cout16, cout17, cout18, cout19, cout20, cout21, cout22, cout23, cout24, cout25, cout26, cout27, cout28, cout29, cout30, cout31;
    
    wire [31:0] in1_1, in2_1, in1_2, in2_2, in1_3, in2_3, in1_4, in2_4, in1_5, in2_5, in1_6, in2_6, in1_7, in2_7, in1_8, in2_8, in1_9, in2_9, in1_10, in2_10, in1_11, in2_11, in1_12, in2_12, in1_13, in2_13, in1_14, in2_14, in1_15, in2_15, in1_16, in2_16, in1_17, in2_17, in1_18, in2_18, in1_19, in2_19, in1_20, in2_20, in1_21, in2_21, in1_22, in2_22, in1_23, in2_23, in1_24, in2_24, in1_25, in2_25, in1_26, in2_26, in1_27, in2_27, in1_28, in2_28, in1_29, in2_29, in1_30, in2_30, in1_31, in2_31;
    
    wire [31:0] in1_1_, in2_1_, in1_2_, in2_2_, in1_3_, in2_3_, in1_4_, in2_4_, in1_5_, in2_5_, in1_6_, in2_6_, in1_7_, in2_7_, in1_8_, in2_8_, in1_9_, in2_9_, in1_10_, in2_10_, in1_11_, in2_11_, in1_12_, in2_12_, in1_13_, in2_13_, in1_14_, in2_14_, in1_15_, in2_15_, in1_16_, in2_16_, in1_17_, in2_17_, in1_18_, in2_18_, in1_19_, in2_19_, in1_20_, in2_20_, in1_21_, in2_21_, in1_22_, in2_22_, in1_23_, in2_23_, in1_24_, in2_24_, in1_25_, in2_25_, in1_26_, in2_26_, in1_27_, in2_27_, in1"
N/A,N/A,-1,37.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                              
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  
  adder_32b u1(sum[31:0], carry[31:0], in1[31:0], in2[31:0], cin);
  adder_32b u2(sum[63:32], cout, in1[63:32], in2[63:32], carry[31]);
endmodule

module adder_32b(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  
  assign carry[0] = cin;
  
  genvar i;
  generate
    for(i=0; i<32; i=i+1)
      begin: adder_32b_loop
        if(i==0)
          full_adder u1(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
        else
          full_adder u2(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
      end
    assign cout = carry[32];
  endgenerate
endmodule

module full_adder(output sum,
                  output cout,
                  input in1, in2, cin);
  wire in1;
  wire in2;
  wire cin;
  wire sum;
  wire cout;
  
  xor(sum, in1, in2);
  and(cout, in1, in2);
endmodule"
N/A,N/A,-1,38.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);        
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    Adder_32bit adder(sum, cout, in1, in2, cin);
    
endmodule

module Adder_32bit(output [31:0] sum,
                     output cout,
                     input [31:0] in1, in2,
                     input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1, in2;
    wire cin;
    
    wire [31:0] sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum14, sum15, sum16, sum17, sum18, sum19, sum20, sum21, sum22, sum23, sum24, sum25, sum26, sum27, sum28, sum29, sum30, sum31;
    
    wire cout1, cout2, cout3, cout4, cout5, cout6, cout7, cout8, cout9, cout10, cout11, cout12, cout13, cout14, cout15, cout16, cout17, cout18, cout19, cout20, cout21, cout22, cout23, cout24, cout25, cout26, cout27, cout28, cout29, cout30, cout31;
    
    wire [31:0] in1_1, in2_1, in1_2, in2_2, in1_3, in2_3, in1_4, in2_4, in1_5, in2_5, in1_6, in2_6, in1_7, in2_7, in1_8, in2_8, in1_9, in2_9, in1_10, in2_10, in1_11, in2_11, in1_12, in2_12, in1_13, in2_13, in1_14, in2_14, in1_15, in2_15, in1_16, in2_16, in1_17, in2_17, in1_18, in2_18, in1_19, in2_19, in1_20, in2_20, in1_21, in2_21, in1_22, in2_22, in1_23, in2_23, in1_24, in2_24, in1_25, in2_25, in1_26, in2_26, in1_27, in2_27, in1_28, in2_28, in1_29, in2_29, in1_30, in2_30, in1_31, in2_31;
    
    wire [31:0] in1_1_, in2_1_, in1_2_, in2_2_, in1_3_, in2_3_, in1_4_, in2_4_, in1_5_, in2_5_, in1_6_, in2_6_, in1_7_, in2_7_, in1_8_, in2_8_, in1_9_, in2_9_, in1_10_, in2_10_, in1_11_, in2_11_, in1_12_, in2_12_, in1_13_, in2_13_, in1_14_, in2_14_, in1_15_, in2_15_, in1_16_, in2_16_, in1_17_, in2_17_, in1_18_, in2_18_, in1_19_, in2_19_, in1_20_, in2_20_, in1_21_, in2_21_, in1_22_, in2_22_, in1_23_, in2_23_, in1_24_, in2_24_, in1_25_, in2_25_, in1_26_, in2_26_, in1_27_, in2_27_, in1"
N/A,N/A,-1,39.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  dadda_32b dadda_32b_1(sum, in1, in2, cin);
  fa_32b fa_32b_1(sum[0], carry[0], in1[0], in2[0], cin);
  fa_32b fa_32b_2(sum[1], carry[1], in1[1], in2[1], carry[0]);
  fa_32b fa_32b_3(sum[2], carry[2], in1[2], in2[2], carry[1]);
  fa_32b fa_32b_4(sum[3], carry[3], in1[3], in2[3], carry[2]);
  fa_32b fa_32b_5(sum[4], carry[4], in1[4], in2[4], carry[3]);
  fa_32b fa_32b_6(sum[5], carry[5], in1[5], in2[5], carry[4]);
  fa_32b fa_32b_7(sum[6], carry[6], in1[6], in2[6], carry[5]);
  fa_32b fa_32b_8(sum[7], carry[7], in1[7], in2[7], carry[6]);
  fa_32b fa_32b_9(sum[8], carry[8], in1[8], in2[8], carry[7]);
  fa_32b fa_32b_10(sum[9], carry[9], in1[9], in2[9], carry[8]);
  fa_32b fa_32b_11(sum[10], carry[10], in1[10], in2[10], carry[9]);
  fa_32b fa_32b_12(sum[11], carry[11], in1[11], in2[11], carry[10]);
  fa_32b fa_32b_13(sum[12], carry[12], in1[12], in2[12], carry[11]);
  fa_32b fa_32b_14(sum[13], carry[13], in1[13], in2[13], carry[12]);
  fa_32b fa_32b_15(sum[14], carry[14], in1[14], in2[14], carry[13]);
  fa_32b fa_32b_16(sum[15], carry[15], in1[15], in2[15], carry[14]);
  fa_32b fa_32b_17(sum[16], carry[16], in1[16], in2[16], carry[15]);
  fa_32b fa_32b_18(sum[17], carry[17], in1[17], in2[17], carry[16]);
  fa_32b fa_32b_19(sum[18], carry[18], in1[18], in2[18], carry[17]);
  fa_32b fa_32b_20(sum[19], carry[19], in1[19], in2[19], carry[18]);
  fa_32b fa_32b_21(sum[20], carry[20], in1[20], in2[20], carry[19]);
  fa_32b fa_32b_22(sum[21], carry[21], in1[21], in2[21], carry[20]);
  fa_32b fa_32b_23(sum[22], carry[22], in1[22], in2[22], carry[21]);
  fa_32b fa_32b_24(sum[23], carry[23], in1[23], in2[23], carry[22]);
  fa_32b fa_32b_25(sum[24], carry[24], in1[24], in2[24], carry[23]);
  fa_32b fa_32b_26(sum[25], carry[25], in1[25], in2[25], carry[24]);
  fa_32b fa_32b"
N/A,N/A,-0.5,40.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

      wire [31:0] sum;
      wire cout;
      wire [31:0] in1;
      wire [31:0] in2;
      wire cin;

      adder_32_bitwise adder(sum, cout, in1, in2, cin);

endmodule

module adder_32_bitwise(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

      wire [31:0] sum;
      wire cout;
      wire [31:0] in1;
      wire [31:0] in2;
      wire cin;

      wire [31:0] sum_temp;
      wire cout_temp;
      wire [31:0] in1_temp;
      wire [31:0] in2_temp;
      wire cin_temp;

      assign sum_temp = in1 + in2;
      assign cout_temp = cin + (in1 & in2);

      assign sum = sum_temp[31:0];
      assign cout = cout_temp;

      assign in1_temp = in1;
      assign in2_temp = in2;
      assign cin_temp = cin;

      mux_2x1 #(32) mux_2x1_sum(sum, in1_temp, in2_temp, cin_temp);
      mux_2x1 #(1) mux_2x1_cout(cout, cout_temp, cout_temp, cin_temp);

endmodule

module mux_2x1(output wire out,
               input wire in1,
               input wire in2,
               input wire select);

      wire in1_not;
      wire in2_not;

      not(in1_not, in1);
      not(in2_not, in2);

      and(out, in1_not, in2_not, select);

endmodule"
N/A,N/A,-1,41.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    register_32 r1(sum, in1, cin);
    register_32 r2(sum, in2, cin);
    mux_1 m1(cout, in1[0], in2[0]);

endmodule

main_module m1(sum, cout, in1, in2, cin);

endmodule"
N/A,N/A,-1,42.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  and(carry[0], in1[0], in2[0], cin);
  and(carry[1], in1[1], in2[1], carry[0]);
  and(carry[2], in1[2], in2[2], carry[1]);
  and(carry[3], in1[3], in2[3], carry[2]);
  and(carry[4], in1[4], in2[4], carry[3]);
  and(carry[5], in1[5], in2[5], carry[4]);
  and(carry[6], in1[6], in2[6], carry[5]);
  and(carry[7], in1[7], in2[7], carry[6]);
  and(carry[8], in1[8], in2[8], carry[7]);
  and(carry[9], in1[9], in2[9], carry[8]);
  and(carry[10], in1[10], in2[10], carry[9]);
  and(carry[11], in1[11], in2[11], carry[10]);
  and(carry[12], in1[12], in2[12], carry[11]);
  and(carry[13], in1[13], in2[13], carry[12]);
  and(carry[14], in1[14], in2[14], carry[13]);
  and(carry[15], in1[15], in2[15], carry[14]);
  and(carry[16], in1[16], in2[16], carry[15]);
  and(carry[17], in1[17], in2[17], carry[16]);
  and(carry[18], in1[18], in2[18], carry[17]);
  and(carry[19], in1[19], in2[19], carry[18]);
  and(carry[20], in1[20], in2[20], carry[19]);
  and(carry[21], in1[21], in2[21], carry[20]);
  and(carry[22], in1[22], in2[22], carry[21]);
  and(carry[23], in1[23], in2[23], carry[22]);
  and(carry[24], in1[24], in2[24], carry[23]);
  and(carry[25], in1[25], in2[25], carry[24]);
  and(carry[26], in1[26], in2[26], carry[25]);
  and(carry[27], in1[27], in2[27], carry[26]);
  and(carry[28], in1[28], in2[28], carry[27]);
  and(carry[29], in1[29], in2[29], carry[28]);
  and(carry[30], in1[30], in2[30], carry[29]);
  and(carry[31], in1[31], in2[31], carry[30]);
  
  fa_32 fa(sum, cout, in1, in2, carry);
endmodule

module fa_32(output [31:0] sum,
              output cout,
              input [31:0] in1, in2,
              input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1, in2;
  wire cin;
  wire [31:0] carry;
  
  adder_32 a1(sum[31:0], carry[31:0], in1[31:0], in2[31:0], cin);
  adder_32 a2(sum[63:32], cout, in1[63:32], in2[63:32], carry[31]);
  adder_32 a3(sum[95:64], cout, in1[95:64], in2[95:64], carry[63]);
  adder_32 a4(sum[127:96], cout, in1[127:96], in2[127:96], carry[95"
N/A,N/A,-1,43.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                          
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  
  cout = 0;
  
  shifter_32 shifter(sum, in1, in2, cin);
  
  adder_32_bitwise adder(sum[31:0], cout, in1[31:0], in2[31:0], cin);
  
endmodule"
N/A,N/A,-1,44.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

	wire [31:0] sum;
	wire cout;
	wire [31:0] in1;
	wire [31:0] in2;
	wire cin;

	shifter_32 shifter(sum, in1, in2, cin);
	adder_32_bitwise adder(sum[0], sum[1], sum[2], sum[3], sum[4], sum[5], sum[6], sum[7], sum[8], sum[9], sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], sum[16], sum[17], sum[18], sum[19], sum[20], sum[21], sum[22], sum[23], sum[24], sum[25], sum[26], sum[27], sum[28], sum[29], sum[30], sum[31], cin);
	
	assign cout = sum[31];

endmodule

module shifter_32(output [31:0] sum,
                     input [31:0] in1, in2,
                     input cin);

	wire [31:0] in1;
	wire [31:0] in2;
	wire cin;

	wire [31:0] sum;
	wire [31:0] temp;

	assign in1 = {in2, 2'b00};
	assign in2 = {in1, cin};

	adder_32 adder(sum, temp, in1, in2, cin);

	assign sum = {temp, 2'b00};

endmodule

module adder_32_bitwise(output [31:0] sum,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

	wire [31:0] in1;
	wire [31:0] in2;
	wire cin;

	wire [31:0] sum;
	wire cout;

	assign in1 = {in2, 2'b00};
	assign in2 = {in1, cin};

	adder_32 adder(sum, cout, in1, in2, cin);

endmodule"
N/A,N/A,-1,45.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    adder_32b u1(sum[31:0], carry[31:0], in1[31:0], in2[31:0], cin);
    adder_32b u2(sum[63:32], cout, in1[63:32], in2[63:32], carry[31]);
    
endmodule

module adder_32b(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    assign carry[0] = cin;
    
    genvar i;
    generate
        for(i=0; i<32; i=i+1) begin
            fa_32b u1(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
        end
    endgenerate
    
    assign cout = carry[32];
    
endmodule

module fa_32b(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    assign carry[0] = cin;
    
    genvar i;
    generate
        for(i=0; i<32; i=i+1) begin
            fa_32b u1(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
        end
    endgenerate
    
    assign cout = carry[32];
    
endmodule"
N/A,N/A,-1,46.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

     wire [31:0] sum;
     wire cout;
     wire [31:0] in1;
     wire [31:0] in2;
     wire cin;

     (* ADDER_THRESHOLD = ""35"" *) 
     ADDER_FIXED_POINT ADDER(sum, cout, in1, in2, cin);

endmodule

module ADDER_FIXED_POINT(output [31:0] sum,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;

    wire [31:0] carry;

    assign carry[0] = cin;
    assign cout = carry[31];

    genvar i;
    generate
        for (i = 0; i < 32; i = i + 1) begin
            if (i == 0) begin
                full_adder FA(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
            end else begin
                full_adder FA(sum[i], carry[i+1], in1[i], in2[i], carry[i]);
            end
        end
    endgenerate

endmodule

module full_adder(output wire sum,
                  output wire cout,
                  input wire in1, in2,
                  input wire cin);

    wire a;
    wire b;
    wire c;

    xor(a, in1, in2);
    xor(sum, a, cin);
    and(b, a, cin);
    and(c, in1, in2);
    or(cout, b, c);

endmodule"
300.314,1228.16,2.7112494237965957e-06,47.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-1,48.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum;
wire cout;

always @(in1 or in2 or cin)
begin
    {cout, sum} = in1 + in2 + cin;
end

endmodule"
N/A,N/A,-1,49.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum;
  wire cout;
  
  carry_select_adder_32 CS(sum, cout, in1, in2, cin);
  
endmodule

module carry_select_adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum;
  wire cout;
  
  wire [1:0] carry;
  
  adder_32 A1(sum[31:0], carry[0], in1[31:0], in2[31:0], cin);
  adder_32 A2(sum[63:32], carry[1], in1[63:32], in2[63:32], carry[0]);
  
  assign cout = carry[1];
  
endmodule"
300.314,1228.16,2.7112494237965957e-06,50.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-0.5,51.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum;
reg cout;

always @(in1 or in2 or cin)
begin
    sum = in1 + in2 + cin;
    cout = (in1[31] == in2[31] && in1[31] == cin)? 1'b1 : 1'b0;
end

endmodule"
N/A,N/A,-0.5,52.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

endmodule"
N/A,N/A,-1,53.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum;
    wire cout;
    
    wire [31:0] carry;
    
    full_adder_32 FA1(sum[0], carry[0], in1[0], in2[0], cin);
    full_adder_32 FA2(sum[1], carry[1], in1[1], in2[1], carry[0]);
    full_adder_32 FA3(sum[2], carry[2], in1[2], in2[2], carry[1]);
    full_adder_32 FA4(sum[3], carry[3], in1[3], in2[3], carry[2]);
    full_adder_32 FA5(sum[4], carry[4], in1[4], in2[4], carry[3]);
    full_adder_32 FA6(sum[5], carry[5], in1[5], in2[5], carry[4]);
    full_adder_32 FA7(sum[6], carry[6], in1[6], in2[6], carry[5]);
    full_adder_32 FA8(sum[7], carry[7], in1[7], in2[7], carry[6]);
    full_adder_32 FA9(sum[8], carry[8], in1[8], in2[8], carry[7]);
    full_adder_32 FA10(sum[9], carry[9], in1[9], in2[9], carry[8]);
    full_adder_32 FA11(sum[10], carry[10], in1[10], in2[10], carry[9]);
    full_adder_32 FA12(sum[11], carry[11], in1[11], in2[11], carry[10]);
    full_adder_32 FA13(sum[12], carry[12], in1[12], in2[12], carry[11]);
    full_adder_32 FA14(sum[13], carry[13], in1[13], in2[13], carry[12]);
    full_adder_32 FA15(sum[14], carry[14], in1[14], in2[14], carry[13]);
    full_adder_32 FA16(sum[15], carry[15], in1[15], in2[15], carry[14]);
    full_adder_32 FA17(sum[16], carry[16], in1[16], in2[16], carry[15]);
    full_adder_32 FA18(sum[17], carry[17], in1[17], in2[17], carry[16]);
    full_adder_32 FA19(sum[18], carry[18], in1[18], in2[18], carry[17]);
    full_adder_32 FA20(sum[19], carry[19], in1[19], in2[19], carry[18]);
    full_adder_32 FA21(sum[20], carry[20], in1[20], in2[20], carry[19]);
    full_adder_32 FA22(sum[21], carry[21], in1[21], in2[21], carry[20]);
    full_adder_32 FA23(sum[22], carry[22], in1[22], in2[22], carry[21]);
    full_adder_32 FA24(sum[23], carry[23], in1[23], in2[23], carry[22]);
    full_adder_32 FA25(sum[24], carry[24], in1[24], in2[24], carry[23]);
    full_adder_32 FA26(sum[25], carry[25], in1[25], in2[25], carry[24]);
    full_adder_32 FA27(sum[26], carry[26], in1[26], in2[26], carry[25]);
    full_adder_32 FA28(sum[27], carry[27], in1[27], in2[27], carry[26]);
    full_adder_32 FA29(sum[28], carry[28], in1[28], in2[28], carry[27]);
    full_adder_32 FA30(sum[29], carry[29], in1[29], in2[29], carry[28]);
    full_adder_32 FA31("
300.314,1228.16,2.7112494237965957e-06,54.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-1,55.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
full_adder FA32(sum[31], cout, in1[31], in2[31], c31);

endmodule

 ``timescale 1ns / 1ps

module test_adder_32;

reg [31:0] in1;
reg [31:0] in2;
reg cin;
wire [31:0] sum;
wire cout;

adder_32 a1(sum, cout, in1, in2, cin);

initial
begin
    in1 = 32'b0000001010101010101010101010101;
    in2 = 32'b0000001010101010101010101010101;
    "
300.314,1228.16,2.7112494237965957e-06,56.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign {cout, sum} = in1 + in2 + cin;

endmodule"
N/A,N/A,-1,57.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign cout = c[31];

assign sum = in1 ^ in2 ^ cin;

endmodule"
N/A,N/A,-1,58.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  wire [31:0] carry;
  MUX2X1 U1 (in1, in2, cin, sum);
  ADDER_FIXED_POINT U2 (sum, carry, cin, cout);
endmodule

module MUX2X1(input [31:0] in1, in2, input cin, output [31:0] out);
  assign out = (cin == 0)? in1 : in2;
endmodule

module ADDER_FIXED_POINT(output [31:0] sum,
                         output [31:0] carry,
                         input cin,
                         output cout);
  wire [31:0] sum;
  wire [31:0] carry;
  wire cin;
  wire [31:0] carry_temp;
  wire [31:0] carry_temp_1;
  wire [31:0] carry_temp_2;
  wire [31:0] carry_temp_3;
  wire [31:0] carry_temp_4;
  wire [31:0] carry_temp_5;
  wire [31:0] carry_temp_6;
  wire [31:0] carry_temp_7;
  wire [31:0] carry_temp_8;
  wire [31:0] carry_temp_9;
  wire [31:0] carry_temp_10;
  wire [31:0] carry_temp_11;
  wire [31:0] carry_temp_12;
  wire [31:0] carry_temp_13;
  wire [31:0] carry_temp_14;
  wire [31:0] carry_temp_15;
  wire [31:0] carry_temp_16;
  wire [31:0] carry_temp_17;
  wire [31:0] carry_temp_18;
  wire [31:0] carry_temp_19;
  wire [31:0] carry_temp_20;
  wire [31:0] carry_temp_21;
  wire [31:0] carry_temp_22;
  wire [31:0] carry_temp_23;
  wire [31:0] carry_temp_24;
  wire [31:0] carry_temp_25;
  wire [31:0] carry_temp_26;
  wire [31:0] carry_temp_27;
  wire [31:0] carry_temp_28;
  wire [31:0] carry_temp_29;
  wire [31:0] carry_temp_30;
  wire [31:0] carry_temp_31;
  wire [31:0] carry_temp_32;
  wire [31:0] carry_temp_33;
  wire [31:0] carry_temp_34;
  wire [31:0] carry_temp_35;
  wire [31:0] carry_temp_36;
  wire [31:0] carry_temp_37;
  wire [31:0] carry_temp_38;
  wire [31:0] carry_temp_39;
  wire [31:0] carry_temp_40;
  wire [31:0] carry_temp_41;
  wire [31:0] carry_temp_42;
  wire [31:0] carry_temp_43;
  wire [31:0] carry_temp_44;
  wire [31:0] carry_temp_45;
  wire [31:0] carry_temp_46;
  wire [31:0] carry_temp_47;
  wire [31:0] carry_temp_48;
  wire [31:0] carry_temp_49;
  wire [31:0] carry_temp_50;
  wire [31:0] carry_temp_51;
  wire [31:0] carry_temp_52;
  wire [31:0] carry_temp_53;
  wire [31:0] carry_temp_54;
  wire [31:0] carry_temp_"
N/A,N/A,-1,59.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire c1, c2, c3;

xor(sum[0], in1[0], in2[0], cin);
xor(c1, in1[0], in2[0], 0);
xor(sum[1], in1[1], in2[1], c1);
xor(c2, in1[1], in2[1], 0);
xor(sum[2], in1[2], in2[2], c2);
xor(c3, in1[2], in2[2], 0);
xor(sum[3], in1[3], in2[3], c3);
xor(cout, in1[3], in2[3], 0);
xor(sum[4], in1[4], in2[4], c3);
xor(cout, in1[4], in2[4], c1);
xor(sum[5], in1[5], in2[5], c2);
xor(cout, in1[5], in2[5], c1);
xor(sum[6], in1[6], in2[6], c2);
xor(cout, in1[6], in2[6], c1);
xor(sum[7], in1[7], in2[7], c3);
xor(cout, in1[7], in2[7], c1);
xor(sum[8], in1[8], in2[8], c3);
xor(cout, in1[8], in2[8], c2);
xor(sum[9], in1[9], in2[9], c2);
xor(cout, in1[9], in2[9], c1);
xor(sum[10], in1[10], in2[10], c3);
xor(cout, in1[10], in2[10], c1);
xor(sum[11], in1[11], in2[11], c3);
xor(cout, in1[11], in2[11], c2);
xor(sum[12], in1[12], in2[12], c2);
xor(cout, in1[12], in2[12], c1);
xor(sum[13], in1[13], in2[13], c3);
xor(cout, in1[13], in2[13], c1);
xor(sum[14], in1[14], in2[14], c3);
xor(cout, in1[14], in2[14], c2);
xor(sum[15], in1[15], in2[15], c2);
xor(cout, in1[15], in2[15], c1);
xor(sum[16], in1[16], in2[16], c3);
xor(cout, in1[16], in2[16], c1);
xor(sum[17], in1[17], in2[17], c3);
xor(cout, in1[17], in2[17], c2);
xor(sum[18], in1[18], in2[18], c2);
xor(cout, in1[18], in2[18], c1);
xor(sum[19], in1[19], in2[19], c3);
xor(cout, in1[19], in2[19], c1);
xor(sum[20], in1[20], in2[20], c3);
xor(cout, in1[20], in2[20], c2);
xor(sum[21], in1[21], in2[21], c2);
xor(cout, in1[21], in2[21], c1);
xor(sum[22], in1[22], in2[22], c3);
xor(cout, in1[22], in2[22], c1);
xor(sum[23], in1[23], in2[23], c3);
xor(cout, in1[23], in2[23], c2);
xor(sum[24"
N/A,N/A,-1,60.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    	
	
	wire [31:0] carry;
	
	full_adder FA1(sum[0], carry[0], in1[0], in2[0], cin);
	full_adder FA2(sum[1], carry[1], in1[1], in2[1], carry[0]);
	full_adder FA3(sum[2], carry[2], in1[2], in2[2], carry[1]);
	full_adder FA4(sum[3], carry[3], in1[3], in2[3], carry[2]);
	full_adder FA5(sum[4], carry[4], in1[4], in2[4], carry[3]);
	full_adder FA6(sum[5], carry[5], in1[5], in2[5], carry[4]);
	full_adder FA7(sum[6], carry[6], in1[6], in2[6], carry[5]);
	full_adder FA8(sum[7], carry[7], in1[7], in2[7], carry[6]);
	full_adder FA9(sum[8], carry[8], in1[8], in2[8], carry[7]);
	full_adder FA10(sum[9], carry[9], in1[9], in2[9], carry[8]);
	full_adder FA11(sum[10], carry[10], in1[10], in2[10], carry[9]);
	full_adder FA12(sum[11], carry[11], in1[11], in2[11], carry[10]);
	full_adder FA13(sum[12], carry[12], in1[12], in2[12], carry[11]);
	full_adder FA14(sum[13], carry[13], in1[13], in2[13], carry[12]);
	full_adder FA15(sum[14], carry[14], in1[14], in2[14], carry[13]);
	full_adder FA16(sum[15], carry[15], in1[15], in2[15], carry[14]);
	full_adder FA17(sum[16], carry[16], in1[16], in2[16], carry[15]);
	full_adder FA18(sum[17], carry[17], in1[17], in2[17], carry[16]);
	full_adder FA19(sum[18], carry[18], in1[18], in2[18], carry[17]);
	full_adder FA20(sum[19], carry[19], in1[19], in2[19], carry[18]);
	full_adder FA21(sum[20], carry[20], in1[20], in2[20], carry[19]);
	full_adder FA22(sum[21], carry[21], in1[21], in2[21], carry[20]);
	full_adder FA23(sum[22], carry[22], in1[22], in2[22], carry[21]);
	full_adder FA24(sum[23], carry[23], in1[23], in2[23], carry[22]);
	full_adder FA25(sum[24], carry[24], in1[24], in2[24], carry[23]);
	full_adder FA26(sum[25], carry[25], in1[25], in2[25], carry[24]);
	full_adder FA27(sum[26], carry[26], in1[26], in2[26], carry[25]);
	full_adder FA28(sum[27], carry[27], in1[27], in2[27], carry[26]);
	full_adder FA29(sum[28], carry[28], in1[28], in2[28], carry[27]);
	full_adder FA30(sum[29], carry[29], in1[29], in2[29], carry[28]);
	full_adder FA31(sum[30], carry[30], in1[30], in2[30], carry[29]);
	full_adder FA32(sum[31], cout, in1[31], in2[31], carry[30]);
endmodule

module full_adder(output wire sum,
                  output wire cout,
						 input wire in1,"
N/A,N/A,-1,61.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

                      
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  
  multiplier_32 m1(sum, cin, in1, in2);
  
  assign cout = cin;
  
endmodule

module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2);

                      
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  
  adder_32 a1(sum, cin, in1, in2, cin);
  
  assign cout = cin;
  
endmodule"
N/A,N/A,-0.5,62.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    and(sum[0], in1[0], in2[0], cin);
    and(sum[1], in1[1], in2[1], cin);
    and(sum[2], in1[2], in2[2], cin);
    and(sum[3], in1[3], in2[3], cin);
    and(sum[4], in1[4], in2[4], cin);
    and(sum[5], in1[5], in2[5], cin);
    and(sum[6], in1[6], in2[6], cin);
    and(sum[7], in1[7], in2[7], cin);
    and(sum[8], in1[8], in2[8], cin);
    and(sum[9], in1[9], in2[9], cin);
    and(sum[10], in1[10], in2[10], cin);
    and(sum[11], in1[11], in2[11], cin);
    and(sum[12], in1[12], in2[12], cin);
    and(sum[13], in1[13], in2[13], cin);
    and(sum[14], in1[14], in2[14], cin);
    and(sum[15], in1[15], in2[15], cin);
    and(sum[16], in1[16], in2[16], cin);
    and(sum[17], in1[17], in2[17], cin);
    and(sum[18], in1[18], in2[18], cin);
    and(sum[19], in1[19], in2[19], cin);
    and(sum[20], in1[20], in2[20], cin);
    and(sum[21], in1[21], in2[21], cin);
    and(sum[22], in1[22], in2[22], cin);
    and(sum[23], in1[23], in2[23], cin);
    and(sum[24], in1[24], in2[24], cin);
    and(sum[25], in1[25], in2[25], cin);
    and(sum[26], in1[26], in2[26], cin);
    and(sum[27], in1[27], in2[27], cin);
    and(sum[28], in1[28], in2[28], cin);
    and(sum[29], in1[29], in2[29], cin);
    and(sum[30], in1[30], in2[30], cin);
    and(sum[31], in1[31], in2[31], cin);
    
    or(cout, in1[31], in2[31], cin);
endmodule"
N/A,N/A,-1,63.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

genvar i;

wire [31:0] carry;

generate

for (i = 0; i < 32; i = i + 1)
begin: adder_loop
    wire c1, c2;
    
    if (i == 0)
    begin
        full_adder FA1(sum[i], carry[i], in1[i], in2[i], cin);
        assign c1 = carry[i];
    end
    else
    begin
        full_adder FA1(sum[i], carry[i], in1[i], in2[i], c1);
        assign c2 = carry[i];
    end
end

assign cout = c2;

endgenerate

endmodule

\****************************************************************************])

Computer Architecture Course, Laboratory Sources 
ECE 3700, Laboratory 3700

Professor: Dr. H. El Naga

Lab: ALU

Module: ALU_32

Functionality:

Inputs:

32-bit Inputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit Outputs

Outputs:

32-bit"
N/A,N/A,-1,64.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
        wire [31:0] sum;
        wire cout;
        wire [31:0] in1;
        wire [31:0] in2;
        wire cin;
        wire [31:0] carry;
        
        full_adder_32 FA1(sum[0], carry[0], in1[0], in2[0], cin);
        full_adder_32 FA2(sum[1], carry[1], in1[1], in2[1], carry[0]);
        full_adder_32 FA3(sum[2], carry[2], in1[2], in2[2], carry[1]);
        full_adder_32 FA4(sum[3], carry[3], in1[3], in2[3], carry[2]);
        full_adder_32 FA5(sum[4], carry[4], in1[4], in2[4], carry[3]);
        full_adder_32 FA6(sum[5], carry[5], in1[5], in2[5], carry[4]);
        full_adder_32 FA7(sum[6], carry[6], in1[6], in2[6], carry[5]);
        full_adder_32 FA8(sum[7], carry[7], in1[7], in2[7], carry[6]);
        full_adder_32 FA9(sum[8], carry[8], in1[8], in2[8], carry[7]);
        full_adder_32 FA10(sum[9], carry[9], in1[9], in2[9], carry[8]);
        full_adder_32 FA11(sum[10], carry[10], in1[10], in2[10], carry[9]);
        full_adder_32 FA12(sum[11], carry[11], in1[11], in2[11], carry[10]);
        full_adder_32 FA13(sum[12], carry[12], in1[12], in2[12], carry[11]);
        full_adder_32 FA14(sum[13], carry[13], in1[13], in2[13], carry[12]);
        full_adder_32 FA15(sum[14], carry[14], in1[14], in2[14], carry[13]);
        full_adder_32 FA16(sum[15], carry[15], in1[15], in2[15], carry[14]);
        full_adder_32 FA17(sum[16], carry[16], in1[16], in2[16], carry[15]);
        full_adder_32 FA18(sum[17], carry[17], in1[17], in2[17], carry[16]);
        full_adder_32 FA19(sum[18], carry[18], in1[18], in2[18], carry[17]);
        full_adder_32 FA20(sum[19], carry[19], in1[19], in2[19], carry[18]);
        full_adder_32 FA21(sum[20], carry[20], in1[20], in2[20], carry[19]);
        full_adder_32 FA22(sum[21], carry[21], in1[21], in2[21], carry[20]);
        full_adder_32 FA23(sum[22], carry[22], in1[22], in2[22], carry[21]);
        full_adder_32 FA24(sum[23], carry[23], in1[23], in2[23], carry[22]);
        full_adder_32 FA25(sum[24], carry[24], in1[24], in2[24], carry[23]);
        full_adder_32 FA26(sum[25], carry[25], in1[25], in2[25], carry[24]);
        full_adder_32 FA27(sum[26], carry[26], in1[26], in2[26], carry[25]);
        full_adder_32 FA28(sum[27], carry[27], in1[27], in2[27], carry[26]);
        full_adder_32 FA29(sum[28], carry[28], in1[28], in2[28], carry[27]);
        full_adder_32 FA30(sum[29], carry[29],"
N/A,N/A,-1,65.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

                    wire [31:0] carry;
                    wire [31:0] sum_temp;
                    wire [31:0] carry_temp;
                    wire [31:0] carry_temp_1;
                    wire [31:0] carry_temp_2;
                    wire [31:0] carry_temp_3;
                    wire [31:0] carry_temp_4;
                    wire [31:0] carry_temp_5;
                    wire [31:0] carry_temp_6;
                    wire [31:0] carry_temp_7;
                    wire [31:0] carry_temp_8;
                    wire [31:0] carry_temp_9;
                    wire [31:0] carry_temp_10;
                    wire [31:0] carry_temp_11;
                    wire [31:0] carry_temp_12;
                    wire [31:0] carry_temp_13;
                    wire [31:0] carry_temp_14;
                    wire [31:0] carry_temp_15;
                    wire [31:0] carry_temp_16;
                    wire [31:0] carry_temp_17;
                    wire [31:0] carry_temp_18;
                    wire [31:0] carry_temp_19;
                    wire [31:0] carry_temp_20;
                    wire [31:0] carry_temp_21;
                    wire [31:0] carry_temp_22;
                    wire [31:0] carry_temp_23;
                    wire [31:0] carry_temp_24;
                    wire [31:0] carry_temp_25;
                    wire [31:0] carry_temp_26;
                    wire [31:0] carry_temp_27;
                    wire [31:0] carry_temp_28;
                    wire [31:0] carry_temp_29;
                    wire [31:0] carry_temp_30;
                    wire [31:0] carry_temp_31;
                    wire [31:0] carry_temp_32;
                    wire [31:0] carry_temp_33;
                    wire [31:0] carry_temp_34;
                    wire [31:0] carry_temp_35;
                    wire [31:0] carry_temp_36;
                    wire [31:0] carry_temp_37;
                    wire [31:0] carry_temp_38;
                    wire [31:0] carry_temp_39;
                    wire [31:0] carry_temp_40;
                    wire [31:0] carry_temp_41;
                    wire [31:0] carry_temp_42;
                    wire [31:0] carry_temp_43;
                    wire [31:0] carry_temp_44;
                    wire [31:0] carry_temp_45;
                    wire [31:0] carry_temp_46;
                    wire [31:0] carry_temp_47;
                    wire [31:0] carry_temp_48;
                    wire [31:0] carry_temp_49;
                    wire [31:0] carry_temp_50;
                    wire [31:0] carry_temp_51;
                    wire [31:0] carry_temp_52;
                    wire [31:0] carry_temp_53;
                    wire [31:0] carry_temp_54;
                    wire [31:0] carry_temp_55;
                    wire [31:0] carry_temp_56;
                    wire [31:0] carry_temp_57;
                    wire [31:0] carry_temp_58;
                    wire [31:0] carry_temp_59;
                    wire [31:0] carry_temp_60;
                    wire [31:0] carry_temp_61;
                    wire [31:0] carry_temp_62;
                    wire [31:0] carry_temp_63;
                    wire [31:0] carry_temp_64;
                    wire [31:0] carry_temp_65;
                    wire [31:0] carry_temp_66;
                    wire [31:0] carry_temp_67;
                    wire [31:0] carry_temp_68;
                    wire [31:0] carry_temp_69;"
300.314,1228.16,2.7112494237965957e-06,66.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,67.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    wire [31:0] carry;
    
    ALU_32bit uut(sum, carry, in1, in2, cin);
    
    assign cout = carry[31];
    
endmodule

module ALU_32bit(output [31:0] sum,
                  output [31:0] carry,
                  input [31:0] in1, in2,
                  input cin);
    wire [31:0] sum;
    wire [31:0] carry;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    wire [31:0] carry_in;
    
    assign carry_in = {1'b0, cin};
    
    adder_32 uut(sum, carry_in, in1, in2, cin);
    
endmodule"
N/A,N/A,-0.5,68.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum;
    wire cout;
    wire [31:0] in1;
    wire [31:0] in2;
    wire cin;
    
    function [31:0] adder_1bit(input a, b, c_in);
        begin
            adder_1bit = a + b + c_in;
        end
    endfunction
    
    assign sum = adder_1bit(in1, in2, cin);
    assign cout = in1[31] ^ in2[31] ^ cin;
endmodule"
N/A,N/A,-1,69.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
 
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
 
  one_bit_adder adder_1(sum[0], c1, in1[0], in2[0], cin);
  one_bit_adder adder_2(sum[1], c2, in1[1], in2[1], c1);
  one_bit_adder adder_3(sum[2], c3, in1[2], in2[2], c2);
  one_bit_adder adder_4(sum[3], c4, in1[3], in2[3], c3);
  one_bit_adder adder_5(sum[4], c5, in1[4], in2[4], c4);
  one_bit_adder adder_6(sum[5], c6, in1[5], in2[5], c5);
  one_bit_adder adder_7(sum[6], c7, in1[6], in2[6], c6);
  one_bit_adder adder_8(sum[7], c8, in1[7], in2[7], c7);
  one_bit_adder adder_9(sum[8], c9, in1[8], in2[8], c8);
  one_bit_adder adder_10(sum[9], c10, in1[9], in2[9], c9);
  one_bit_adder adder_11(sum[10], c11, in1[10], in2[10], c10);
  one_bit_adder adder_12(sum[11], c12, in1[11], in2[11], c11);
  one_bit_adder adder_13(sum[12], c13, in1[12], in2[12], c12);
  one_bit_adder adder_14(sum[13], c14, in1[13], in2[13], c13);
  one_bit_adder adder_15(sum[14], c15, in1[14], in2[14], c14);
  one_bit_adder adder_16(sum[15], c16, in1[15], in2[15], c15);
  one_bit_adder adder_17(sum[16], c17, in1[16], in2[16], c16);
  one_bit_adder adder_18(sum[17], c18, in1[17], in2[17], c17);
  one_bit_adder adder_19(sum[18], c19, in1[18], in2[18], c18);
  one_bit_adder adder_20(sum[19], c20, in1[19], in2[19], c19);
  one_bit_adder adder_21(sum[20], c21, in1[20], in2[20], c20);
  one_bit_adder adder_22(sum[21], c22, in1[21], in2[21], c21);
  one_bit_adder adder_23(sum[22], c23, in1[22], in2[22], c22);
  one_bit_adder adder_24(sum[23], c24, in1[23], in2[23], c23);
  one_bit_adder adder_25(sum[24], c25, in1[24], in2[24], c24);
  one_bit_adder adder_26(sum[25], c26, in1[25], in2[25], c25);
  one_bit_adder adder_27(sum[26], c27, in1[26], in2[26], c26);
  one_bit_adder adder_28(sum[27], c28, in1[27], in2[27], c27);
  one_bit_adder adder_29(sum[28], c29, in1[28], in2[28], c28);
  one_bit_adder adder_30(sum[29], c30, in1[29], in"
300.314,1228.16,2.7112494237965957e-06,70.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  assign {cout, sum} = in1 + in2 + cin;
endmodule"
300.314,1228.16,2.7112494237965957e-06,71.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  assign {cout, sum} = in1 + in2 + cin;
endmodule"
300.314,1228.16,2.7112494237965957e-06,72.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,73.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
  full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
  full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
  full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
  full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
  full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
  full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
  full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
  full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
  full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
  full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
  full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
  full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
  full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
  full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
  full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
  full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
  full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
  full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
  full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
  full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
  full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
  full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
  full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
  full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
  full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
  full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
  full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
  full_adder FA32(sum[31], cout, in1[31], in2[31], c31);
endmodule

module carry_select_adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum_0;
  wire [31:0] sum_1;
  wire [31:0] sum_2;
  wire [31:0] sum_3;
  wire [31:0] sum_"
N/A,N/A,-1,74.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  adder_32_bit cin_1(cout, cin_1, in1, in2, cin);
  adder_32_bit cin_2(sum, cout_1, in1, in2, cin_1);
endmodule

module adder_32_bit(output cout_1,
                     output cout_2,
                     input [31:0] in1, in2,
                     input cin);
  wire [31:0] sum;
  wire cout;
  adder_32 a1(sum, cout, in1, in2, cin);
  assign cout_1 = cout;
  assign cout_2 = cout_1;
endmodule"
N/A,N/A,-1,75.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire c1, c2, c3;
  full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
endmodule

3-bit adder
module adder_3(output [2:0] sum,
                      output cout,
                      input [2:0] in1, in2,
                      input cin);
  wire c1, c2, c3;
  full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3(sum[2], cout, in1[2], in2[2], c2);
endmodule"
300.314,1228.16,2.7112494237965957e-06,76.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,77.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], cout, in1[31], in2[31], c31);
endmodule

module full_adder(output wire sum,
                  output wire cout,
                  input wire in1,
                  input wire in2,
                  input wire cin);
    wire temp1;
    wire temp2;
    wire temp3;
    xor(sum, in1, in2, cin);
    and(temp1,in1,in2);
    and(temp2,in1,cin);
    and(temp"
N/A,N/A,-1,78.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
	wire [31:0] sum;
	wire cout;
	wire [31:0] in1;
	wire [31:0] in2;
	wire cin;
	
	adder_32_bitwise adder(sum[0], cout, in1[0], in2[0], cin);
	adder_32_bitwise adder1(sum[1], cout, in1[1], in2[1], cout);
	adder_32_bitwise adder2(sum[2], cout, in1[2], in2[2], cout);
	adder_32_bitwise adder3(sum[3], cout, in1[3], in2[3], cout);
	adder_32_bitwise adder4(sum[4], cout, in1[4], in2[4], cout);
	adder_32_bitwise adder5(sum[5], cout, in1[5], in2[5], cout);
	adder_32_bitwise adder6(sum[6], cout, in1[6], in2[6], cout);
	adder_32_bitwise adder7(sum[7], cout, in1[7], in2[7], cout);
	adder_32_bitwise adder8(sum[8], cout, in1[8], in2[8], cout);
	adder_32_bitwise adder9(sum[9], cout, in1[9], in2[9], cout);
	adder_32_bitwise adder10(sum[10], cout, in1[10], in2[10], cout);
	adder_32_bitwise adder11(sum[11], cout, in1[11], in2[11], cout);
	adder_32_bitwise adder12(sum[12], cout, in1[12], in2[12], cout);
	adder_32_bitwise adder13(sum[13], cout, in1[13], in2[13], cout);
	adder_32_bitwise adder14(sum[14], cout, in1[14], in2[14], cout);
	adder_32_bitwise adder15(sum[15], cout, in1[15], in2[15], cout);
	adder_32_bitwise adder16(sum[16], cout, in1[16], in2[16], cout);
	adder_32_bitwise adder17(sum[17], cout, in1[17], in2[17], cout);
	adder_32_bitwise adder18(sum[18], cout, in1[18], in2[18], cout);
	adder_32_bitwise adder19(sum[19], cout, in1[19], in2[19], cout);
	adder_32_bitwise adder20(sum[20], cout, in1[20], in2[20], cout);
	adder_32_bitwise adder21(sum[21], cout, in1[21], in2[21], cout);
	adder_32_bitwise adder22(sum[22], cout, in1[22], in2[22], cout);
	adder_32_bitwise adder23(sum[23], cout, in1[23], in2[23], cout);
	adder_32_bitwise adder24(sum[24], cout, in1[24], in2[24], cout);
	adder_32_bitwise adder25(sum[25], cout, in1[25], in2[25], cout);
	adder_32_bitwise adder26(sum[26], cout, in1[26], in2[26], cout);
	adder_32_bitwise adder27(sum[27], cout, in1[27], in2[27], cout);
	adder_32_bitwise adder28(sum[28], cout, in1[28], in2[28], cout);
	adder_32_bitwise adder29(sum[29], cout, in1[29], in2[29], cout);
	adder_32_bitwise adder30(sum[30], cout, in1[30], in2[30], cout);
	adder_32_bitwise adder31(sum[31], cout, in1[31], in2"
N/A,N/A,-1,79.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
      wire [31:0] sum;
      wire cout;
      wire [31:0] in1;
      wire [31:0] in2;
      wire cin;
      
      adder_32_bitwise adder(sum[0], c1, in1[0], in2[0], cin);
      adder_32_bitwise adder1(sum[1], c2, in1[1], in2[1], c1);
      adder_32_bitwise adder2(sum[2], c3, in1[2], in2[2], c2);
      adder_32_bitwise adder3(sum[3], c4, in1[3], in2[3], c3);
      adder_32_bitwise adder4(sum[4], c5, in1[4], in2[4], c4);
      adder_32_bitwise adder5(sum[5], c6, in1[5], in2[5], c5);
      adder_32_bitwise adder6(sum[6], c7, in1[6], in2[6], c6);
      adder_32_bitwise adder7(sum[7], c8, in1[7], in2[7], c7);
      adder_32_bitwise adder8(sum[8], c9, in1[8], in2[8], c8);
      adder_32_bitwise adder9(sum[9], c10, in1[9], in2[9], c9);
      adder_32_bitwise adder10(sum[10], c11, in1[10], in2[10], c10);
      adder_32_bitwise adder11(sum[11], c12, in1[11], in2[11], c11);
      adder_32_bitwise adder12(sum[12], c13, in1[12], in2[12], c12);
      adder_32_bitwise adder13(sum[13], c14, in1[13], in2[13], c13);
      adder_32_bitwise adder14(sum[14], c15, in1[14], in2[14], c14);
      adder_32_bitwise adder15(sum[15], c16, in1[15], in2[15], c15);
      adder_32_bitwise adder16(sum[16], c17, in1[16], in2[16], c16);
      adder_32_bitwise adder17(sum[17], c18, in1[17], in2[17], c17);
      adder_32_bitwise adder18(sum[18], c19, in1[18], in2[18], c18);
      adder_32_bitwise adder19(sum[19], c20, in1[19], in2[19], c19);
      adder_32_bitwise adder20(sum[20], c21, in1[20], in2[20], c20);
      adder_32_bitwise adder21(sum[21], c22, in1[21], in2[21], c21);
      adder_32_bitwise adder22(sum[22], c23, in1[22], in2[22], c22);
      adder_32_bitwise adder23(sum[23], c24, in1[23], in2[23], c23);
      adder_32_bitwise adder24(sum[24], c25, in1[24], in2[24], c24);
      adder_32_bitwise adder25(sum[25], c26, in1[25], in2[25], c25);
      adder_32_bitwise adder26(sum[26], c27, in1[26], in2[26], c26);
      adder_32_bitwise adder27(sum[27], c28, in1[27], in2[27], c27);
      adder_32_bitwise adder28(sum[28], c29, in1[28], in2[28], c28);
      adder_32_bitwise adder29(sum[29], c30, in1[29], in2[29"
N/A,N/A,-1,80.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

adder_32_bit a1(sum[0],cout,in1[0],in2[0],cin);
adder_32_bit a2(sum[1],cout,in1[1],in2[1],cout);
adder_32_bit a3(sum[2],cout,in1[2],in2[2],cout);
adder_32_bit a4(sum[3],cout,in1[3],in2[3],cout);
adder_32_bit a5(sum[4],cout,in1[4],in2[4],cout);
adder_32_bit a6(sum[5],cout,in1[5],in2[5],cout);
adder_32_bit a7(sum[6],cout,in1[6],in2[6],cout);
adder_32_bit a8(sum[7],cout,in1[7],in2[7],cout);
adder_32_bit a9(sum[8],cout,in1[8],in2[8],cout);
adder_32_bit a10(sum[9],cout,in1[9],in2[9],cout);
adder_32_bit a11(sum[10],cout,in1[10],in2[10],cout);
adder_32_bit a12(sum[11],cout,in1[11],in2[11],cout);
adder_32_bit a13(sum[12],cout,in1[12],in2[12],cout);
adder_32_bit a14(sum[13],cout,in1[13],in2[13],cout);
adder_32_bit a15(sum[14],cout,in1[14],in2[14],cout);
adder_32_bit a16(sum[15],cout,in1[15],in2[15],cout);
adder_32_bit a17(sum[16],cout,in1[16],in2[16],cout);
adder_32_bit a18(sum[17],cout,in1[17],in2[17],cout);
adder_32_bit a19(sum[18],cout,in1[18],in2[18],cout);
adder_32_bit a20(sum[19],cout,in1[19],in2[19],cout);
adder_32_bit a21(sum[20],cout,in1[20],in2[20],cout);
adder_32_bit a22(sum[21],cout,in1[21],in2[21],cout);
adder_32_bit a23(sum[22],cout,in1[22],in2[22],cout);
adder_32_bit a24(sum[23],cout,in1[23],in2[23],cout);
adder_32_bit a25(sum[24],cout,in1[24],in2[24],cout);
adder_32_bit a26(sum[25],cout,in1[25],in2[25],cout);
adder_32_bit a27(sum[26],cout,in1[26],in2[26],cout);
adder_32_bit a28(sum[27],cout,in1[27],in2[27],cout);
adder_32_bit a29(sum[28],cout,in1[28],in2[28],cout);
adder_32_bit a30(sum[29],cout,in1[29],in2[29],cout);
adder_32_bit a31(sum[30],cout,in1[30],in2[30],cout);
adder_32_bit a32(sum[31],cout,in1[31],in2[31],cout);

endmodule

module adder_32_bit(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] carry;

adder_32_bit a1(sum[0],carry"
N/A,N/A,-1,81.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;

  CARRY4 c1(.cout(cout),
           .sum(sum[3:0]),
           .in1(in1[3:0]),
           .in2(in2[3:0]),
           .cin(cin));

  CARRY4 c2(.cout(cout),
           .sum(sum[7:4]),
           .in1(in1[7:4]),
           .in2(in2[7:4]),
           .cin(cout));

  CARRY4 c3(.cout(cout),
           .sum(sum[11:8]),
           .in1(in1[11:8]),
           .in2(in2[11:8]),
           .cin(cout));

  CARRY4 c4(.cout(cout),
           .sum(sum[15:12]),
           .in1(in1[15:12]),
           .in2(in2[15:12]),
           .cin(cout));

  CARRY4 c5(.cout(cout),
           .sum(sum[19:16]),
           .in1(in1[19:16]),
           .in2(in2[19:16]),
           .cin(cout));

  CARRY4 c6(.cout(cout),
           .sum(sum[23:20]),
           .in1(in1[23:20]),
           .in2(in2[23:20]),
           .cin(cout));

  CARRY4 c7(.cout(cout),
           .sum(sum[27:24]),
           .in1(in1[27:24]),
           .in2(in2[27:24]),
           .cin(cout));

  CARRY4 c8(.cout(cout),
           .sum(sum[31:28]),
           .in1(in1[31:28]),
           .in2(in2[31:28]),
           .cin(cout));

endmodule

module carry_select_adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;

  wire [3:0] carry;
  wire [31:0] sum_0;
  wire [31:0] sum_1;
  wire [31:0] sum_2;
  wire [31:0] sum_3;
  wire [31:0] sum_4;
  wire [31:0] sum_5;
  wire [31:0] sum_6;
  wire [31:0] sum_7;
  wire [31:0] sum_8;
  wire [31:0] sum_9;
  wire [31:0] sum_10;
  wire [31:0] sum_11;
  wire [31:0] sum_12;
  wire [31:0] sum_13;
  wire [31:0] sum_14;
  wire [31:0] sum_15;
  wire [31:0] sum_16;
  wire [31:0] sum_17;
  wire [31:0] sum_18;
  wire [31:0] sum_19;
  wire [31:0] sum_20;
  wire [31:0] sum_21;
  wire [31:0] sum_22;
  wire [31:0] sum_23;
  wire [31:0] sum_24;
  wire [31:0] sum_25;
  wire [31:0] sum_26;
  wire [31:0] sum_27;
  wire [31:0] sum_28;
  wire [31:0] sum_29;
  wire [31:0] sum_30;
  wire [31"
300.314,1228.16,2.7112494237965957e-06,82.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,83.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign c[0] = cin;
    assign sum = in1 ^ in2 ^ c[0];
    assign cout = (in1 & in2) | (in1 & c[0]) | (in2 & c[0]);
endmodule"
N/A,N/A,-1,84.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
   wire [31:0] sum;
   wire cout;
   wire [32:0] carry;
   
   adder_32_bit a0(sum[0], carry[0], in1[0], in2[0], cin);
   adder_32_bit a1(sum[1], carry[1], in1[1], in2[1], carry[0]);
   adder_32_bit a2(sum[2], carry[2], in1[2], in2[2], carry[1]);
   adder_32_bit a3(sum[3], carry[3], in1[3], in2[3], carry[2]);
   adder_32_bit a4(sum[4], carry[4], in1[4], in2[4], carry[3]);
   adder_32_bit a5(sum[5], carry[5], in1[5], in2[5], carry[4]);
   adder_32_bit a6(sum[6], carry[6], in1[6], in2[6], carry[5]);
   adder_32_bit a7(sum[7], carry[7], in1[7], in2[7], carry[6]);
   adder_32_bit a8(sum[8], carry[8], in1[8], in2[8], carry[7]);
   adder_32_bit a9(sum[9], carry[9], in1[9], in2[9], carry[8]);
   adder_32_bit a10(sum[10], carry[10], in1[10], in2[10], carry[9]);
   adder_32_bit a11(sum[11], carry[11], in1[11], in2[11], carry[10]);
   adder_32_bit a12(sum[12], carry[12], in1[12], in2[12], carry[11]);
   adder_32_bit a13(sum[13], carry[13], in1[13], in2[13], carry[12]);
   adder_32_bit a14(sum[14], carry[14], in1[14], in2[14], carry[13]);
   adder_32_bit a15(sum[15], carry[15], in1[15], in2[15], carry[14]);
   adder_32_bit a16(sum[16], carry[16], in1[16], in2[16], carry[15]);
   adder_32_bit a17(sum[17], carry[17], in1[17], in2[17], carry[16]);
   adder_32_bit a18(sum[18], carry[18], in1[18], in2[18], carry[17]);
   adder_32_bit a19(sum[19], carry[19], in1[19], in2[19], carry[18]);
   adder_32_bit a20(sum[20], carry[20], in1[20], in2[20], carry[19]);
   adder_32_bit a21(sum[21], carry[21], in1[21], in2[21], carry[20]);
   adder_32_bit a22(sum[22], carry[22], in1[22], in2[22], carry[21]);
   adder_32_bit a23(sum[23], carry[23], in1[23], in2[23], carry[22]);
   adder_32_bit a24(sum[24], carry[24], in1[24], in2[24], carry[23]);
   adder_32_bit a25(sum[25], carry[25], in1[25], in2[25], carry[24]);
   adder_32_bit a26(sum[26], carry[26], in1[26], in2[26], carry[25]);
   adder_32_bit a27(sum[27], carry[27], in1[27], in2[27], carry[26]);
   adder_32_bit a28(sum[28], carry[28], in1[28], in2[28], carry[27]);
   adder_32_bit a29(sum[29], carry[29], in1[29], in2[29], carry[28]);
   adder_32_bit a30(sum[30],"
N/A,N/A,-1,85.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    		
	wire [31:0] sum;
	wire cout;
	wire [31:0] in1, in2;
	wire cin;
	
	adder_32_bit adder(sum[0], cout, in1[0], in2[0], cin);
	adder_32_bit adder1(sum[1], cout, in1[1], in2[1], cout);
	adder_32_bit adder2(sum[2], cout, in1[2], in2[2], cout);
	adder_32_bit adder3(sum[3], cout, in1[3], in2[3], cout);
	adder_32_bit adder4(sum[4], cout, in1[4], in2[4], cout);
	adder_32_bit adder5(sum[5], cout, in1[5], in2[5], cout);
	adder_32_bit adder6(sum[6], cout, in1[6], in2[6], cout);
	adder_32_bit adder7(sum[7], cout, in1[7], in2[7], cout);
	adder_32_bit adder8(sum[8], cout, in1[8], in2[8], cout);
	adder_32_bit adder9(sum[9], cout, in1[9], in2[9], cout);
	adder_32_bit adder10(sum[10], cout, in1[10], in2[10], cout);
	adder_32_bit adder11(sum[11], cout, in1[11], in2[11], cout);
	adder_32_bit adder12(sum[12], cout, in1[12], in2[12], cout);
	adder_32_bit adder13(sum[13], cout, in1[13], in2[13], cout);
	adder_32_bit adder14(sum[14], cout, in1[14], in2[14], cout);
	adder_32_bit adder15(sum[15], cout, in1[15], in2[15], cout);
	adder_32_bit adder16(sum[16], cout, in1[16], in2[16], cout);
	adder_32_bit adder17(sum[17], cout, in1[17], in2[17], cout);
	adder_32_bit adder18(sum[18], cout, in1[18], in2[18], cout);
	adder_32_bit adder19(sum[19], cout, in1[19], in2[19], cout);
	adder_32_bit adder20(sum[20], cout, in1[20], in2[20], cout);
	adder_32_bit adder21(sum[21], cout, in1[21], in2[21], cout);
	adder_32_bit adder22(sum[22], cout, in1[22], in2[22], cout);
	adder_32_bit adder23(sum[23], cout, in1[23], in2[23], cout);
	adder_32_bit adder24(sum[24], cout, in1[24], in2[24], cout);
	adder_32_bit adder25(sum[25], cout, in1[25], in2[25], cout);
	adder_32_bit adder26(sum[26], cout, in1[26], in2[26], cout);
	adder_32_bit adder27(sum[27], cout, in1[27], in2[27], cout);
	adder_32_bit adder28(sum[28], cout, in1[28], in2[28], cout);
	adder_32_bit adder29(sum[29], cout, in1[29], in2[29], cout);
	adder_32_bit adder30(sum[30], cout, in1[30], in2[30], cout);
	adder_32_bit adder31(sum[31], cout, in1[31], in2[31], cout);
endmodule

module adder_32_bit(output [31:0] sum,
                      output cout,
                      input [31:0"
N/A,N/A,-1,86.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  
  compare_32 c1(.a(in1),.b(in2),.cin(cin),.sum(sum),.cout(cout));
  
endmodule

alt_adder_32 adder_32_tb();

module compare_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
  wire [31:0] sum;
  wire cout;
  wire [31:0] in1;
  wire [31:0] in2;
  wire cin;
  
  assign sum = in1 + in2;
  assign cout = in1[31] ^ in2[31];
  
endmodule"
N/A,N/A,-1,87.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    adder_32_bit a1(sum[31:0], cout, in1[31:0], in2[31:0], cin);
    adder_32_bit a2(sum[63:32], cout, in1[63:32], in2[63:32], cout);
endmodule

default_adder_32 default_adder_32_inst(sum, cout, in1, in2, cin);

Tester #(.WIDTH(32)) tester(.in1(in1),.in2(in2),.cin(cin),.sum(sum),.cout(cout));

endmodule"
300.314,1228.16,2.7112494237965957e-06,88.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
300.314,1228.16,2.7112494237965957e-06,89.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
300.314,1228.16,2.7112494237965957e-06,90.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule"
N/A,N/A,-1,91.0,1,"module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire c1, c2, c3;
    wire [31:0] sum1, sum2, sum3;
    wire cout1, cout2, cout3;

    adder_32_bit a1(sum1, c1, in1, in2);
    adder_32_bit a2(sum2, c2, in1, in2);
    adder_32_bit a3(sum3, c3, in1, in2);

    adder_32_bit a4(sum, cout, sum1, c1);
    adder_32_bit a5(sum, cout1, sum2, c2);
    adder_32_bit a6(sum, cout2, sum3, c3);

endmodule

module adder_32_bit(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2);

    wire c1, c2, c3;
    wire [31:0] sum1, sum2, sum3;
    wire cout1, cout2, cout3;

    adder_32_bit_bitwise a1(sum1, c1, in1, in2);
    adder_32_bit_bitwise a2(sum2, c2, in1, in2);
    adder_32_bit_bitwise a3(sum3, c3, in1, in2);

    adder_32_bit_bitwise a4(sum, cout, sum1, c1);
    adder_32_bit_bitwise a5(sum, cout1, sum2, c2);
    adder_32_bit_bitwise a6(sum, cout2, sum3, c3);

endmodule

module adder_32_bit_bitwise(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2);

    wire c1, c2, c3;
    wire [31:0] sum1, sum2, sum3;
    wire cout1, cout2, cout3;

    adder_32_bit_bitwise_1 a1(sum1, c1, in1, in2);
    adder_32_bit_bitwise_1 a2(sum2, c2, in1, in2);
    adder_32_bit_bitwise_1 a3(sum3, c3, in1, in2);

    adder_32_bit_bitwise_2 a4(sum, cout, sum1, c1);
    adder_32_bit_bitwise_2 a5(sum, cout1, sum2, c2);
    adder_32_bit_bitwise_2 a6(sum, cout2, sum3, c3);

endmodule

module adder_32_bit_bitwise_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2);

    wire c1, c2, c3;
    wire [31:0] sum1, sum2, sum3;
    wire cout1, cout2, cout3;

    adder_32_bit_bitwise_1_bitwise_1 a1(sum1, c1, in1, in2);
    adder_32_bit_bitwise_1_bitwise_1 a2(sum2, c2, in1, in2);
    adder_32_bit_bitwise_1_bitwise_1 a3(sum3, c3, in1, in2);

    adder_32_bit_bitwise_1_bitwise_1 a4(sum, cout, sum1, c1);
    adder_32_bit_bitwise_1_bitwise_1 a5(sum, cout1, sum2, c2);
    adder_32_bit_bitwise_1_bitwise_1 a6(sum, cout2, sum3, c3);

endmodule

module adder_32_bit_bitwise_1_bitwise_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2);

    wire c1, c2, c3;
    wire [31:0] sum1, sum2, sum3;
    wire cout1"
